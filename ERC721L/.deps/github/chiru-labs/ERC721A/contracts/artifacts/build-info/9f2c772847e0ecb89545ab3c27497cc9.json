{
	"id": "9f2c772847e0ecb89545ab3c27497cc9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\nimport '@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol';\nimport '@openzeppelin/contracts/utils/Address.sol';\nimport '@openzeppelin/contracts/utils/Context.sol';\nimport '@openzeppelin/contracts/utils/Strings.sol';\nimport '@openzeppelin/contracts/utils/introspection/ERC165.sol';\n\nerror ApprovalCallerNotOwnerNorApproved();\nerror ApprovalQueryForNonexistentToken();\nerror ApproveToCaller();\nerror ApprovalToCurrentOwner();\nerror BalanceQueryForZeroAddress();\nerror MintToZeroAddress();\nerror MintZeroQuantity();\nerror OwnerQueryForNonexistentToken();\nerror TransferCallerNotOwnerNorApproved();\nerror TransferFromIncorrectOwner();\nerror TransferToNonERC721ReceiverImplementer();\nerror TransferToZeroAddress();\nerror URIQueryForNonexistentToken();\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension. Built to optimize for lower gas during batch mints.\n *\n * Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\n *\n * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n *\n * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Compiler will pack this into a single 256bit word.\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n    }\n\n    // Compiler will pack this into a single 256bit word.\n    struct AddressData {\n        // Realistically, 2**64-1 is more than enough.\n        uint64 balance;\n        // Keeps track of mint count with minimal overhead for tokenomics.\n        uint64 numberMinted;\n        // Keeps track of burn count with minimal overhead for tokenomics.\n        uint64 numberBurned;\n        // For miscellaneous variable(s) pertaining to the address\n        // (e.g. number of whitelist mint slots used).\n        // If there are multiple variables, please pack them into a uint64.\n        uint64 aux;\n    }\n\n    // The tokenId of the next token to be minted.\n    uint256 internal _currentIndex;\n\n    // The number of tokens burned.\n    uint256 internal _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Token url\n    string private _url;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned. See _ownershipOf implementation for details.\n    mapping(uint256 => TokenOwnership) internal _ownerships;\n\n    // Mapping owner address to address data\n    mapping(address => AddressData) private _addressData;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    constructor(string memory name_, string memory symbol_, string memory url_) {\n        _name = name_;\n        _symbol = symbol_;\n        _url = url_;\n        _currentIndex = _startTokenId();\n    }\n\n    /**\n     * To change the starting tokenId, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\n     */\n    function totalSupply() public view returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than _currentIndex - _startTokenId() times\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view returns (uint256) {\n        // Counter underflow is impossible as _currentIndex does not decrement,\n        // and it is initialized to _startTokenId()\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view override returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return uint256(_addressData[owner].balance);\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return uint256(_addressData[owner].numberMinted);\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return uint256(_addressData[owner].numberBurned);\n    }\n\n    /**\n     * Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return _addressData[owner].aux;\n    }\n\n    /**\n     * Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal {\n        _addressData[owner].aux = aux;\n    }\n\n    /**\n     * Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (_startTokenId() <= curr && curr < _currentIndex) {\n                TokenOwnership memory ownership = _ownerships[curr];\n                if (!ownership.burned) {\n                    if (ownership.addr != address(0)) {\n                        return ownership;\n                    }\n                    // Invariant:\n                    // There will always be an ownership that has an address and is not burned\n                    // before an ownership that does not have an address and is not burned.\n                    // Hence, curr will not underflow.\n                    while (true) {\n                        curr--;\n                        ownership = _ownerships[curr];\n                        if (ownership.addr != address(0)) {\n                            return ownership;\n                        }\n                    }\n                }\n            }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view override returns (address) {\n        return _ownershipOf(tokenId).addr;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return _url;\n    }\n\n\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public override {\n        address owner = ERC721A.ownerOf(tokenId);\n        if (to == owner) revert ApprovalToCurrentOwner();\n\n        if (_msgSender() != owner && !isApprovedForAll(owner, _msgSender())) {\n            revert ApprovalCallerNotOwnerNorApproved();\n        }\n\n        _approve(to, tokenId, owner);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view override returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        if (operator == _msgSender()) revert ApproveToCaller();\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        _transfer(from, to, tokenId);\n        if (to.isContract() && !_checkContractOnERC721Received(from, to, tokenId, _data)) {\n            revert TransferToNonERC721ReceiverImplementer();\n        }\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned;\n    }\n\n    function _safeMint(address to, uint256 quantity) internal {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal {\n        _mint(to, quantity, _data, true);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(\n        address to,\n        uint256 quantity,\n        bytes memory _data,\n        bool safe\n    ) internal {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // balance or numberMinted overflow if current value of either + quantity > 1.8e19 (2**64) - 1\n        // updatedIndex overflows if _currentIndex + quantity > 1.2e77 (2**256) - 1\n        unchecked {\n            _addressData[to].balance += uint64(quantity);\n            _addressData[to].numberMinted += uint64(quantity);\n\n            _ownerships[startTokenId].addr = to;\n            _ownerships[startTokenId].startTimestamp = uint64(block.timestamp);\n\n            uint256 updatedIndex = startTokenId;\n            uint256 end = updatedIndex + quantity;\n\n            if (safe && to.isContract()) {\n                do {\n                    emit Transfer(address(0), to, updatedIndex);\n                    if (!_checkContractOnERC721Received(address(0), to, updatedIndex++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (updatedIndex != end);\n                // Reentrancy protection\n                if (_currentIndex != startTokenId) revert();\n            } else {\n                do {\n                    emit Transfer(address(0), to, updatedIndex++);\n                } while (updatedIndex != end);\n            }\n            _currentIndex = updatedIndex;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) private {\n        TokenOwnership memory prevOwnership = _ownershipOf(tokenId);\n\n        if (prevOwnership.addr != from) revert TransferFromIncorrectOwner();\n\n        bool isApprovedOrOwner = (_msgSender() == from ||\n            isApprovedForAll(from, _msgSender()) ||\n            getApproved(tokenId) == _msgSender());\n\n        if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId, from);\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\n        unchecked {\n            _addressData[from].balance -= 1;\n            _addressData[to].balance += 1;\n\n            TokenOwnership storage currSlot = _ownerships[tokenId];\n            currSlot.addr = to;\n            currSlot.startTimestamp = uint64(block.timestamp);\n\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\n            uint256 nextTokenId = tokenId + 1;\n            TokenOwnership storage nextSlot = _ownerships[nextTokenId];\n            if (nextSlot.addr == address(0)) {\n                // This will suffice for checking _exists(nextTokenId),\n                // as a burned slot cannot contain the zero address.\n                if (nextTokenId != _currentIndex) {\n                    nextSlot.addr = from;\n                    nextSlot.startTimestamp = prevOwnership.startTimestamp;\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev This is equivalent to _burn(tokenId, false)\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        TokenOwnership memory prevOwnership = _ownershipOf(tokenId);\n\n        address from = prevOwnership.addr;\n\n        if (approvalCheck) {\n            bool isApprovedOrOwner = (_msgSender() == from ||\n                isApprovedForAll(from, _msgSender()) ||\n                getApproved(tokenId) == _msgSender());\n\n            if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId, from);\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\n        unchecked {\n            AddressData storage addressData = _addressData[from];\n            addressData.balance -= 1;\n            addressData.numberBurned += 1;\n\n            // Keep track of who burned the token, and the timestamp of burning.\n            TokenOwnership storage currSlot = _ownerships[tokenId];\n            currSlot.addr = from;\n            currSlot.startTimestamp = uint64(block.timestamp);\n            currSlot.burned = true;\n\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the burn initiator owns it.\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\n            uint256 nextTokenId = tokenId + 1;\n            TokenOwnership storage nextSlot = _ownerships[nextTokenId];\n            if (nextSlot.addr == address(0)) {\n                // This will suffice for checking _exists(nextTokenId),\n                // as a burned slot cannot contain the zero address.\n                if (nextTokenId != _currentIndex) {\n                    nextSlot.addr = from;\n                    nextSlot.startTimestamp = prevOwnership.startTimestamp;\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        address owner\n    ) private {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n            return retval == IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n     * minting.\n     * And also called after one token has been burned.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "url_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":1464:21883  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3400:3595  constructor(string memory name_, string memory symbol_, string memory url_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3494:3499  name_ */\n  dup3\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3486:3491  _name */\n  0x02\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3486:3499  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3519:3526  symbol_ */\n  dup2\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3509:3516  _symbol */\n  0x03\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3509:3526  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3543:3547  url_ */\n  dup1\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3536:3540  _url */\n  0x04\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3536:3547  _url = url_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_9\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_9:\n  pop\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3573:3588  _startTokenId() */\n  tag_10\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3573:3586  _startTokenId */\n  shl(0x20, tag_11)\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3573:3588  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3557:3570  _currentIndex */\n  0x00\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3557:3588  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3400:3595  constructor(string memory name_, string memory symbol_, string memory url_) {... */\n  pop\n  pop\n  pop\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":1464:21883  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_12)\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3687:3777  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_11:\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3743:3750  uint256 */\n  0x00\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3687:3777  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":1464:21883  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_17\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_17:\n  dup3\n  0x1f\n  lt\n  tag_18\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_18:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_19:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_20\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_19)\ntag_20:\ntag_16:\n  pop\n  swap1\n  pop\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  pop\n  swap1\n  jump\t// out\ntag_22:\ntag_23:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_24\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_23)\ntag_24:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_26:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_28\n    /* \"#utility.yul\":137:186   */\n  tag_29\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":121:187   */\n  tag_31\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_33\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":262:374   */\ntag_32:\n    /* \"#utility.yul\":383:422   */\n  tag_35\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_36\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_37:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_40\n  tag_41\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":531:653   */\ntag_39:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_42\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_26\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1991   */\ntag_3:\n    /* \"#utility.yul\":927:933   */\n  0x00\n    /* \"#utility.yul\":935:941   */\n  dup1\n    /* \"#utility.yul\":943:949   */\n  0x00\n    /* \"#utility.yul\":992:994   */\n  0x60\n    /* \"#utility.yul\":980:989   */\n  dup5\n    /* \"#utility.yul\":971:978   */\n  dup7\n    /* \"#utility.yul\":967:990   */\n  sub\n    /* \"#utility.yul\":963:995   */\n  slt\n    /* \"#utility.yul\":960:1079   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":998:1077   */\n  tag_45\n  tag_46\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":960:1079   */\ntag_44:\n    /* \"#utility.yul\":1139:1140   */\n  0x00\n    /* \"#utility.yul\":1128:1137   */\n  dup5\n    /* \"#utility.yul\":1124:1141   */\n  add\n    /* \"#utility.yul\":1118:1142   */\n  mload\n    /* \"#utility.yul\":1169:1187   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1161:1167   */\n  dup2\n    /* \"#utility.yul\":1158:1188   */\n  gt\n    /* \"#utility.yul\":1155:1272   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1191:1270   */\n  tag_48\n  tag_49\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1155:1272   */\ntag_47:\n    /* \"#utility.yul\":1296:1370   */\n  tag_50\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup3\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1296:1370   */\n  tag_37\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1286:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1089:1380   */\n  pop\n    /* \"#utility.yul\":1440:1442   */\n  0x20\n    /* \"#utility.yul\":1429:1438   */\n  dup5\n    /* \"#utility.yul\":1425:1443   */\n  add\n    /* \"#utility.yul\":1419:1444   */\n  mload\n    /* \"#utility.yul\":1471:1489   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1463:1469   */\n  dup2\n    /* \"#utility.yul\":1460:1490   */\n  gt\n    /* \"#utility.yul\":1457:1574   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1493:1572   */\n  tag_52\n  tag_49\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1457:1574   */\ntag_51:\n    /* \"#utility.yul\":1598:1672   */\n  tag_53\n    /* \"#utility.yul\":1664:1671   */\n  dup7\n    /* \"#utility.yul\":1655:1661   */\n  dup3\n    /* \"#utility.yul\":1644:1653   */\n  dup8\n    /* \"#utility.yul\":1640:1662   */\n  add\n    /* \"#utility.yul\":1598:1672   */\n  tag_37\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1588:1672   */\n  swap3\n  pop\n    /* \"#utility.yul\":1390:1682   */\n  pop\n    /* \"#utility.yul\":1742:1744   */\n  0x40\n    /* \"#utility.yul\":1731:1740   */\n  dup5\n    /* \"#utility.yul\":1727:1745   */\n  add\n    /* \"#utility.yul\":1721:1746   */\n  mload\n    /* \"#utility.yul\":1773:1791   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1765:1771   */\n  dup2\n    /* \"#utility.yul\":1762:1792   */\n  gt\n    /* \"#utility.yul\":1759:1876   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1795:1874   */\n  tag_55\n  tag_49\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1759:1876   */\ntag_54:\n    /* \"#utility.yul\":1900:1974   */\n  tag_56\n    /* \"#utility.yul\":1966:1973   */\n  dup7\n    /* \"#utility.yul\":1957:1963   */\n  dup3\n    /* \"#utility.yul\":1946:1955   */\n  dup8\n    /* \"#utility.yul\":1942:1964   */\n  add\n    /* \"#utility.yul\":1900:1974   */\n  tag_37\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1890:1974   */\n  swap2\n  pop\n    /* \"#utility.yul\":1692:1984   */\n  pop\n    /* \"#utility.yul\":809:1991   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1997:2126   */\ntag_31:\n    /* \"#utility.yul\":2031:2037   */\n  0x00\n    /* \"#utility.yul\":2058:2078   */\n  tag_58\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2048:2078   */\n  swap1\n  pop\n    /* \"#utility.yul\":2087:2120   */\n  tag_60\n    /* \"#utility.yul\":2115:2119   */\n  dup3\n    /* \"#utility.yul\":2107:2113   */\n  dup3\n    /* \"#utility.yul\":2087:2120   */\n  tag_61\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1997:2126   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2132:2207   */\ntag_59:\n    /* \"#utility.yul\":2165:2171   */\n  0x00\n    /* \"#utility.yul\":2198:2200   */\n  0x40\n    /* \"#utility.yul\":2192:2201   */\n  mload\n    /* \"#utility.yul\":2182:2201   */\n  swap1\n  pop\n    /* \"#utility.yul\":2132:2207   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2213:2521   */\ntag_30:\n    /* \"#utility.yul\":2275:2279   */\n  0x00\n    /* \"#utility.yul\":2365:2383   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2357:2363   */\n  dup3\n    /* \"#utility.yul\":2354:2384   */\n  gt\n    /* \"#utility.yul\":2351:2407   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2387:2405   */\n  tag_65\n  tag_66\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2351:2407   */\ntag_64:\n    /* \"#utility.yul\":2425:2454   */\n  tag_67\n    /* \"#utility.yul\":2447:2453   */\n  dup3\n    /* \"#utility.yul\":2425:2454   */\n  tag_68\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2417:2454   */\n  swap1\n  pop\n    /* \"#utility.yul\":2509:2513   */\n  0x20\n    /* \"#utility.yul\":2503:2507   */\n  dup2\n    /* \"#utility.yul\":2499:2514   */\n  add\n    /* \"#utility.yul\":2491:2514   */\n  swap1\n  pop\n    /* \"#utility.yul\":2213:2521   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2527:2834   */\ntag_36:\n    /* \"#utility.yul\":2595:2596   */\n  0x00\n    /* \"#utility.yul\":2605:2718   */\ntag_70:\n    /* \"#utility.yul\":2619:2625   */\n  dup4\n    /* \"#utility.yul\":2616:2617   */\n  dup2\n    /* \"#utility.yul\":2613:2626   */\n  lt\n    /* \"#utility.yul\":2605:2718   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2704:2705   */\n  dup1\n    /* \"#utility.yul\":2699:2702   */\n  dup3\n    /* \"#utility.yul\":2695:2706   */\n  add\n    /* \"#utility.yul\":2689:2707   */\n  mload\n    /* \"#utility.yul\":2685:2686   */\n  dup2\n    /* \"#utility.yul\":2680:2683   */\n  dup5\n    /* \"#utility.yul\":2676:2687   */\n  add\n    /* \"#utility.yul\":2669:2708   */\n  mstore\n    /* \"#utility.yul\":2641:2643   */\n  0x20\n    /* \"#utility.yul\":2638:2639   */\n  dup2\n    /* \"#utility.yul\":2634:2644   */\n  add\n    /* \"#utility.yul\":2629:2644   */\n  swap1\n  pop\n    /* \"#utility.yul\":2605:2718   */\n  jump(tag_70)\ntag_72:\n    /* \"#utility.yul\":2736:2742   */\n  dup4\n    /* \"#utility.yul\":2733:2734   */\n  dup2\n    /* \"#utility.yul\":2730:2743   */\n  gt\n    /* \"#utility.yul\":2727:2828   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2816:2817   */\n  0x00\n    /* \"#utility.yul\":2807:2813   */\n  dup5\n    /* \"#utility.yul\":2802:2805   */\n  dup5\n    /* \"#utility.yul\":2798:2814   */\n  add\n    /* \"#utility.yul\":2791:2818   */\n  mstore\n    /* \"#utility.yul\":2727:2828   */\ntag_73:\n    /* \"#utility.yul\":2576:2834   */\n  pop\n    /* \"#utility.yul\":2527:2834   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2840:3160   */\ntag_15:\n    /* \"#utility.yul\":2884:2890   */\n  0x00\n    /* \"#utility.yul\":2921:2922   */\n  0x02\n    /* \"#utility.yul\":2915:2919   */\n  dup3\n    /* \"#utility.yul\":2911:2923   */\n  div\n    /* \"#utility.yul\":2901:2923   */\n  swap1\n  pop\n    /* \"#utility.yul\":2968:2969   */\n  0x01\n    /* \"#utility.yul\":2962:2966   */\n  dup3\n    /* \"#utility.yul\":2958:2970   */\n  and\n    /* \"#utility.yul\":2989:3007   */\n  dup1\n    /* \"#utility.yul\":2979:3060   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":3045:3049   */\n  0x7f\n    /* \"#utility.yul\":3037:3043   */\n  dup3\n    /* \"#utility.yul\":3033:3050   */\n  and\n    /* \"#utility.yul\":3023:3050   */\n  swap2\n  pop\n    /* \"#utility.yul\":2979:3060   */\ntag_75:\n    /* \"#utility.yul\":3107:3109   */\n  0x20\n    /* \"#utility.yul\":3099:3105   */\n  dup3\n    /* \"#utility.yul\":3096:3110   */\n  lt\n    /* \"#utility.yul\":3076:3094   */\n  dup2\n    /* \"#utility.yul\":3073:3111   */\n  eq\n    /* \"#utility.yul\":3070:3154   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3126:3144   */\n  tag_77\n  tag_78\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3070:3154   */\ntag_76:\n    /* \"#utility.yul\":2891:3160   */\n  pop\n    /* \"#utility.yul\":2840:3160   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3166:3447   */\ntag_61:\n    /* \"#utility.yul\":3249:3276   */\n  tag_80\n    /* \"#utility.yul\":3271:3275   */\n  dup3\n    /* \"#utility.yul\":3249:3276   */\n  tag_68\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3241:3247   */\n  dup2\n    /* \"#utility.yul\":3237:3277   */\n  add\n    /* \"#utility.yul\":3379:3385   */\n  dup2\n    /* \"#utility.yul\":3367:3377   */\n  dup2\n    /* \"#utility.yul\":3364:3386   */\n  lt\n    /* \"#utility.yul\":3343:3361   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3331:3341   */\n  dup3\n    /* \"#utility.yul\":3328:3362   */\n  gt\n    /* \"#utility.yul\":3325:3387   */\n  or\n    /* \"#utility.yul\":3322:3410   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3390:3408   */\n  tag_82\n  tag_66\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3322:3410   */\ntag_81:\n    /* \"#utility.yul\":3430:3440   */\n  dup1\n    /* \"#utility.yul\":3426:3428   */\n  0x40\n    /* \"#utility.yul\":3419:3441   */\n  mstore\n    /* \"#utility.yul\":3209:3447   */\n  pop\n    /* \"#utility.yul\":3166:3447   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3453:3633   */\ntag_78:\n    /* \"#utility.yul\":3501:3578   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3498:3499   */\n  0x00\n    /* \"#utility.yul\":3491:3579   */\n  mstore\n    /* \"#utility.yul\":3598:3602   */\n  0x22\n    /* \"#utility.yul\":3595:3596   */\n  0x04\n    /* \"#utility.yul\":3588:3603   */\n  mstore\n    /* \"#utility.yul\":3622:3626   */\n  0x24\n    /* \"#utility.yul\":3619:3620   */\n  0x00\n    /* \"#utility.yul\":3612:3627   */\n  revert\n    /* \"#utility.yul\":3639:3819   */\ntag_66:\n    /* \"#utility.yul\":3687:3764   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3684:3685   */\n  0x00\n    /* \"#utility.yul\":3677:3765   */\n  mstore\n    /* \"#utility.yul\":3784:3788   */\n  0x41\n    /* \"#utility.yul\":3781:3782   */\n  0x04\n    /* \"#utility.yul\":3774:3789   */\n  mstore\n    /* \"#utility.yul\":3808:3812   */\n  0x24\n    /* \"#utility.yul\":3805:3806   */\n  0x00\n    /* \"#utility.yul\":3798:3813   */\n  revert\n    /* \"#utility.yul\":3825:3942   */\ntag_41:\n    /* \"#utility.yul\":3934:3935   */\n  0x00\n    /* \"#utility.yul\":3931:3932   */\n  dup1\n    /* \"#utility.yul\":3924:3936   */\n  revert\n    /* \"#utility.yul\":3948:4065   */\ntag_34:\n    /* \"#utility.yul\":4057:4058   */\n  0x00\n    /* \"#utility.yul\":4054:4055   */\n  dup1\n    /* \"#utility.yul\":4047:4059   */\n  revert\n    /* \"#utility.yul\":4071:4188   */\ntag_49:\n    /* \"#utility.yul\":4180:4181   */\n  0x00\n    /* \"#utility.yul\":4177:4178   */\n  dup1\n    /* \"#utility.yul\":4170:4182   */\n  revert\n    /* \"#utility.yul\":4194:4311   */\ntag_46:\n    /* \"#utility.yul\":4303:4304   */\n  0x00\n    /* \"#utility.yul\":4300:4301   */\n  dup1\n    /* \"#utility.yul\":4293:4305   */\n  revert\n    /* \"#utility.yul\":4317:4419   */\ntag_68:\n    /* \"#utility.yul\":4358:4364   */\n  0x00\n    /* \"#utility.yul\":4409:4411   */\n  0x1f\n    /* \"#utility.yul\":4405:4412   */\n  not\n    /* \"#utility.yul\":4400:4402   */\n  0x1f\n    /* \"#utility.yul\":4393:4398   */\n  dup4\n    /* \"#utility.yul\":4389:4403   */\n  add\n    /* \"#utility.yul\":4385:4413   */\n  and\n    /* \"#utility.yul\":4375:4413   */\n  swap1\n  pop\n    /* \"#utility.yul\":4317:4419   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":1464:21883  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":1464:21883  contract ERC721A is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4635:4935  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7663:7761  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9123:9323  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8700:9062  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3906:4203  function totalSupply() public view returns (uint256) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9962:10126  function transferFrom(... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10192:10371  function safeTransferFrom(... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7478:7601  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4994:5197  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7825:7927  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9390:9672  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10437:10796  function safeTransferFrom(... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7993:8306  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9738:9900  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4635:4935  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_23:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4737:4741  bool */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4787:4812  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4772:4812  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4772:4783  interfaceId */\n      dup3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4772:4812  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4772:4876  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_81\n      jumpi\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4843:4876  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4828:4876  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4828:4839  interfaceId */\n      dup3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4828:4876  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4772:4876  interfaceId == type(IERC721).interfaceId ||... */\n    tag_81:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4772:4928  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_82\n      jumpi\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4892:4928  super.supportsInterface(interfaceId) */\n      tag_83\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4916:4927  interfaceId */\n      dup3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4892:4915  super.supportsInterface */\n      tag_84\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4892:4928  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_83:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4772:4928  interfaceId == type(IERC721).interfaceId ||... */\n    tag_82:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4753:4928  return... */\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4635:4935  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7663:7761  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7717:7730  string memory */\n      0x60\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7749:7754  _name */\n      0x02\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7742:7754  return _name */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7663:7761  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9123:9323  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_33:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9191:9198  address */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9215:9231  _exists(tokenId) */\n      tag_93\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9223:9230  tokenId */\n      dup3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9215:9222  _exists */\n      tag_94\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9215:9231  _exists(tokenId) */\n      jump\t// in\n    tag_93:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9210:9274  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_95\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9240:9274  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9210:9274  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_95:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9292:9307  _tokenApprovals */\n      0x07\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9292:9316  _tokenApprovals[tokenId] */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9308:9315  tokenId */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9292:9316  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9285:9316  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9123:9323  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8700:9062  function approve(address to, uint256 tokenId) public override {... */\n    tag_39:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8772:8785  address owner */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8788:8812  ERC721A.ownerOf(tokenId) */\n      tag_97\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8804:8811  tokenId */\n      dup3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8788:8803  ERC721A.ownerOf */\n      tag_53\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8788:8812  ERC721A.ownerOf(tokenId) */\n      jump\t// in\n    tag_97:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8772:8812  address owner = ERC721A.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8832:8837  owner */\n      dup1\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8826:8837  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8826:8828  to */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8826:8837  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8822:8870  if (to == owner) revert ApprovalToCurrentOwner() */\n      iszero\n      tag_98\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8846:8870  ApprovalToCurrentOwner() */\n      mload(0x40)\n      0x943f7b8c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8822:8870  if (to == owner) revert ApprovalToCurrentOwner() */\n    tag_98:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8901:8906  owner */\n      dup1\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8885:8906  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8885:8897  _msgSender() */\n      tag_99\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8885:8895  _msgSender */\n      tag_100\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8885:8897  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8885:8906  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8885:8948  _msgSender() != owner && !isApprovedForAll(owner, _msgSender()) */\n      dup1\n      iszero\n      tag_101\n      jumpi\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8911:8948  isApprovedForAll(owner, _msgSender()) */\n      tag_102\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8928:8933  owner */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8935:8947  _msgSender() */\n      tag_103\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8935:8945  _msgSender */\n      tag_100\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8935:8947  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8911:8927  isApprovedForAll */\n      tag_78\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8911:8948  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_102:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8910:8948  !isApprovedForAll(owner, _msgSender()) */\n      iszero\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8885:8948  _msgSender() != owner && !isApprovedForAll(owner, _msgSender()) */\n    tag_101:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8881:9017  if (_msgSender() != owner && !isApprovedForAll(owner, _msgSender())) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8971:9006  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8881:9017  if (_msgSender() != owner && !isApprovedForAll(owner, _msgSender())) {... */\n    tag_104:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9027:9055  _approve(to, tokenId, owner) */\n      tag_105\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9036:9038  to */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9040:9047  tokenId */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9049:9054  owner */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9027:9035  _approve */\n      tag_106\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9027:9055  _approve(to, tokenId, owner) */\n      jump\t// in\n    tag_105:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8762:9062  {... */\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8700:9062  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3906:4203  function totalSupply() public view returns (uint256) {... */\n    tag_41:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3950:3957  uint256 */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4171:4186  _startTokenId() */\n      tag_108\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4171:4184  _startTokenId */\n      tag_109\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4171:4186  _startTokenId() */\n      jump\t// in\n    tag_108:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4156:4168  _burnCounter */\n      sload(0x01)\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4140:4153  _currentIndex */\n      sload(0x00)\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4140:4168  _currentIndex - _burnCounter */\n      sub\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4140:4186  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4133:4186  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3906:4203  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9962:10126  function transferFrom(... */\n    tag_47:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10091:10119  _transfer(from, to, tokenId) */\n      tag_111\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10101:10105  from */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10107:10109  to */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10111:10118  tokenId */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10091:10100  _transfer */\n      tag_112\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10091:10119  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_111:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9962:10126  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10192:10371  function safeTransferFrom(... */\n    tag_50:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10325:10364  safeTransferFrom(from, to, tokenId, '') */\n      tag_114\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10342:10346  from */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10348:10350  to */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10352:10359  tokenId */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10325:10364  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10325:10341  safeTransferFrom */\n      tag_70\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10325:10364  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_114:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10192:10371  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7478:7601  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_53:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7542:7549  address */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7568:7589  _ownershipOf(tokenId) */\n      tag_116\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7581:7588  tokenId */\n      dup3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7568:7580  _ownershipOf */\n      tag_117\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7568:7589  _ownershipOf(tokenId) */\n      jump\t// in\n    tag_116:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7568:7594  _ownershipOf(tokenId).addr */\n      0x00\n      add\n      mload\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7561:7594  return _ownershipOf(tokenId).addr */\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7478:7601  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4994:5197  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_58:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5058:5065  uint256 */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5098:5099  0 */\n      dup1\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5081:5100  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5081:5086  owner */\n      dup3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5081:5100  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5077:5137  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      iszero\n      tag_119\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5109:5137  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5077:5137  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_119:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5162:5174  _addressData */\n      0x06\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5162:5181  _addressData[owner] */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5175:5180  owner */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5162:5181  _addressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5162:5189  _addressData[owner].balance */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5154:5190  uint256(_addressData[owner].balance) */\n      0xffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":5147:5190  return uint256(_addressData[owner].balance) */\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":4994:5197  function balanceOf(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7825:7927  function symbol() public view virtual override returns (string memory) {... */\n    tag_61:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7881:7894  string memory */\n      0x60\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7913:7920  _symbol */\n      0x03\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7906:7920  return _symbol */\n      dup1\n      sload\n      tag_121\n      swap1\n      tag_87\n      jump\t// in\n    tag_121:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_87\n      jump\t// in\n    tag_122:\n      dup1\n      iszero\n      tag_123\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_124\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_123)\n    tag_124:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_125:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_125\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7825:7927  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9390:9672  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_66:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9500:9512  _msgSender() */\n      tag_127\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9500:9510  _msgSender */\n      tag_100\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9500:9512  _msgSender() */\n      jump\t// in\n    tag_127:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9488:9512  operator == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9488:9496  operator */\n      dup3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9488:9512  operator == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9484:9538  if (operator == _msgSender()) revert ApproveToCaller() */\n      iszero\n      tag_128\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9521:9538  ApproveToCaller() */\n      mload(0x40)\n      0xb06307db00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9484:9538  if (operator == _msgSender()) revert ApproveToCaller() */\n    tag_128:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9594:9602  approved */\n      dup1\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9549:9567  _operatorApprovals */\n      0x08\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9549:9581  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9568:9580  _msgSender() */\n      tag_129\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9568:9578  _msgSender */\n      tag_100\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9568:9580  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9549:9581  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9549:9591  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9582:9590  operator */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9549:9591  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9549:9602  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9646:9654  operator */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9617:9665  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9632:9644  _msgSender() */\n      tag_130\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9632:9642  _msgSender */\n      tag_100\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9632:9644  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9617:9665  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9656:9664  approved */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9617:9665  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9390:9672  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10437:10796  function safeTransferFrom(... */\n    tag_70:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10598:10626  _transfer(from, to, tokenId) */\n      tag_133\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10608:10612  from */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10614:10616  to */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10618:10625  tokenId */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10598:10607  _transfer */\n      tag_112\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10598:10626  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_133:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10640:10655  to.isContract() */\n      tag_134\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10640:10642  to */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10640:10653  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_135\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10640:10655  to.isContract() */\n      jump\t// in\n    tag_134:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10640:10716  to.isContract() && !_checkContractOnERC721Received(from, to, tokenId, _data) */\n      dup1\n      iszero\n      tag_136\n      jumpi\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10660:10716  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_137\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10691:10695  from */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10697:10699  to */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10701:10708  tokenId */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10710:10715  _data */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10660:10690  _checkContractOnERC721Received */\n      tag_138\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10660:10716  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_137:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10659:10716  !_checkContractOnERC721Received(from, to, tokenId, _data) */\n      iszero\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10640:10716  to.isContract() && !_checkContractOnERC721Received(from, to, tokenId, _data) */\n    tag_136:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10636:10790  if (to.isContract() && !_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10739:10779  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10636:10790  if (to.isContract() && !_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_139:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":10437:10796  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7993:8306  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_73:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8066:8079  string memory */\n      0x60\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8096:8112  _exists(tokenId) */\n      tag_141\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8104:8111  tokenId */\n      dup3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8096:8103  _exists */\n      tag_94\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8096:8112  _exists(tokenId) */\n      jump\t// in\n    tag_141:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8091:8150  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_142\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8121:8150  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8091:8150  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_142:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8161:8182  string memory baseURI */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8185:8195  _baseURI() */\n      tag_143\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8185:8193  _baseURI */\n      tag_144\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8185:8195  _baseURI() */\n      jump\t// in\n    tag_143:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8161:8195  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8237:8238  0 */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8218:8225  baseURI */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8212:8233  bytes(baseURI).length */\n      mload\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8212:8238  bytes(baseURI).length != 0 */\n      eq\n      iszero\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8212:8299  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      tag_145\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_146)\n    tag_145:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8265:8272  baseURI */\n      dup1\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8274:8292  tokenId.toString() */\n      tag_147\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8274:8281  tokenId */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8274:8290  tokenId.toString */\n      tag_148\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8274:8292  tokenId.toString() */\n      jump\t// in\n    tag_147:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8248:8293  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_149\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8212:8299  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n    tag_146:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8205:8299  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      swap2\n      pop\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7993:8306  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9738:9900  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_78:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9835:9839  bool */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9858:9876  _operatorApprovals */\n      0x08\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9858:9883  _operatorApprovals[owner] */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9877:9882  owner */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9858:9883  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9858:9893  _operatorApprovals[owner][operator] */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9884:9892  operator */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9858:9893  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9851:9893  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":9738:9900  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11042:11214  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_94:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11099:11103  bool */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11141:11148  tokenId */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11122:11137  _startTokenId() */\n      tag_154\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11122:11135  _startTokenId */\n      tag_109\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11122:11137  _startTokenId() */\n      jump\t// in\n    tag_154:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11122:11148  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11122:11175  _startTokenId() <= tokenId && tokenId < _currentIndex */\n      dup1\n      iszero\n      tag_155\n      jumpi\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11162:11175  _currentIndex */\n      sload(0x00)\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11152:11159  tokenId */\n      dup3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11152:11175  tokenId < _currentIndex */\n      lt\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11122:11175  _startTokenId() <= tokenId && tokenId < _currentIndex */\n    tag_155:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11122:11207  _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n      dup1\n      iszero\n      tag_156\n      jumpi\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11180:11191  _ownerships */\n      0x05\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11180:11200  _ownerships[tokenId] */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11192:11199  tokenId */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11180:11200  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11180:11207  _ownerships[tokenId].burned */\n      0x00\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11179:11207  !_ownerships[tokenId].burned */\n      iszero\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11122:11207  _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n    tag_156:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11115:11207  return _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":11042:11214  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18982:19171  function _approve(... */\n    tag_106:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19119:19121  to */\n      dup3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19092:19107  _tokenApprovals */\n      0x07\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19092:19116  _tokenApprovals[tokenId] */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19108:19115  tokenId */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19092:19116  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19092:19121  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19156:19163  tokenId */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19152:19154  to */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19136:19164  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19145:19150  owner */\n      dup3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19136:19164  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":18982:19171  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3687:3777  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_109:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3743:3750  uint256 */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":3687:3777  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14052:16134  function _transfer(... */\n    tag_112:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14162:14197  TokenOwnership memory prevOwnership */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14200:14221  _ownershipOf(tokenId) */\n      tag_161\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14213:14220  tokenId */\n      dup3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14200:14212  _ownershipOf */\n      tag_117\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14200:14221  _ownershipOf(tokenId) */\n      jump\t// in\n    tag_161:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14162:14221  TokenOwnership memory prevOwnership = _ownershipOf(tokenId) */\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14258:14262  from */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14236:14262  prevOwnership.addr != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14236:14249  prevOwnership */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14236:14254  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14236:14262  prevOwnership.addr != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14232:14299  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n      tag_162\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14271:14299  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14232:14299  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n    tag_162:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14310:14332  bool isApprovedOrOwner */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14352:14356  from */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14336:14356  _msgSender() == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14336:14348  _msgSender() */\n      tag_163\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14336:14346  _msgSender */\n      tag_100\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14336:14348  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14336:14356  _msgSender() == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14336:14408  _msgSender() == from ||... */\n      dup1\n      tag_164\n      jumpi\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14372:14408  isApprovedForAll(from, _msgSender()) */\n      tag_165\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14389:14393  from */\n      dup6\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14395:14407  _msgSender() */\n      tag_166\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14395:14405  _msgSender */\n      tag_100\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14395:14407  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14372:14388  isApprovedForAll */\n      tag_78\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14372:14408  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_165:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14336:14408  _msgSender() == from ||... */\n    tag_164:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14336:14460  _msgSender() == from ||... */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14448:14460  _msgSender() */\n      tag_168\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14448:14458  _msgSender */\n      tag_100\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14448:14460  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14424:14460  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14424:14444  getApproved(tokenId) */\n      tag_169\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14436:14443  tokenId */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14424:14435  getApproved */\n      tag_33\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14424:14444  getApproved(tokenId) */\n      jump\t// in\n    tag_169:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14424:14460  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14336:14460  _msgSender() == from ||... */\n    tag_167:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14310:14461  bool isApprovedOrOwner = (_msgSender() == from ||... */\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14477:14494  isApprovedOrOwner */\n      dup1\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14472:14538  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n      tag_170\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14503:14538  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14472:14538  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n    tag_170:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14566:14567  0 */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14552:14568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14552:14554  to */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14552:14568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14548:14600  if (to == address(0)) revert TransferToZeroAddress() */\n      iszero\n      tag_171\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14577:14600  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14548:14600  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_171:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14611:14654  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_172\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14633:14637  from */\n      dup6\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14639:14641  to */\n      dup6\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14643:14650  tokenId */\n      dup6\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14652:14653  1 */\n      0x01\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14611:14632  _beforeTokenTransfers */\n      tag_173\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14611:14654  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_172:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14716:14751  _approve(address(0), tokenId, from) */\n      tag_174\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14733:14734  0 */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14737:14744  tokenId */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14746:14750  from */\n      dup8\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14716:14724  _approve */\n      tag_106\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14716:14751  _approve(address(0), tokenId, from) */\n      jump\t// in\n    tag_174:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15071:15072  1 */\n      0x01\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15041:15053  _addressData */\n      0x06\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15041:15059  _addressData[from] */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15054:15058  from */\n      dup8\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15041:15059  _addressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15041:15067  _addressData[from].balance */\n      0x00\n      add\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15041:15072  _addressData[from].balance -= 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      sub\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15114:15115  1 */\n      0x01\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15086:15098  _addressData */\n      0x06\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15086:15102  _addressData[to] */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15099:15101  to */\n      dup7\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15086:15102  _addressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15086:15110  _addressData[to].balance */\n      0x00\n      add\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15086:15115  _addressData[to].balance += 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      add\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15130:15161  TokenOwnership storage currSlot */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15164:15175  _ownerships */\n      0x05\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15164:15184  _ownerships[tokenId] */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15176:15183  tokenId */\n      dup6\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15164:15184  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15130:15184  TokenOwnership storage currSlot = _ownerships[tokenId] */\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15214:15216  to */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15198:15206  currSlot */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15198:15211  currSlot.addr */\n      0x00\n      add\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15198:15216  currSlot.addr = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15263:15278  block.timestamp */\n      timestamp\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15230:15238  currSlot */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15230:15253  currSlot.startTimestamp */\n      0x00\n      add\n      0x14\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15230:15279  currSlot.startTimestamp = uint64(block.timestamp) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15527:15546  uint256 nextTokenId */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15559:15560  1 */\n      0x01\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15549:15556  tokenId */\n      dup6\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15549:15560  tokenId + 1 */\n      add\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15527:15560  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15574:15605  TokenOwnership storage nextSlot */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15608:15619  _ownerships */\n      0x05\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15608:15632  _ownerships[nextTokenId] */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15620:15631  nextTokenId */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15608:15632  _ownerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15574:15632  TokenOwnership storage nextSlot = _ownerships[nextTokenId] */\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15675:15676  0 */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15650:15677  nextSlot.addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15650:15658  nextSlot */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15650:15663  nextSlot.addr */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15650:15677  nextSlot.addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15646:16023  if (nextSlot.addr == address(0)) {... */\n      iszero\n      tag_175\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15857:15870  _currentIndex */\n      sload(0x00)\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15842:15853  nextTokenId */\n      dup3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15842:15870  nextTokenId != _currentIndex */\n      eq\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15838:16009  if (nextTokenId != _currentIndex) {... */\n      tag_176\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15910:15914  from */\n      dup8\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15894:15902  nextSlot */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15894:15907  nextSlot.addr */\n      0x00\n      add\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15894:15914  nextSlot.addr = from */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15962:15975  prevOwnership */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15962:15990  prevOwnership.startTimestamp */\n      0x20\n      add\n      mload\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15936:15944  nextSlot */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15936:15959  nextSlot.startTimestamp */\n      0x00\n      add\n      0x14\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15936:15990  nextSlot.startTimestamp = prevOwnership.startTimestamp */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15838:16009  if (nextTokenId != _currentIndex) {... */\n    tag_176:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15646:16023  if (nextSlot.addr == address(0)) {... */\n    tag_175:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":15017:16033  unchecked {... */\n      pop\n      pop\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16067:16074  tokenId */\n      dup3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16063:16065  to */\n      dup5\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16048:16075  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16057:16061  from */\n      dup7\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16048:16075  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16085:16127  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_177\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16106:16110  from */\n      dup6\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16112:16114  to */\n      dup6\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16116:16123  tokenId */\n      dup6\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16125:16126  1 */\n      0x01\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16085:16105  _afterTokenTransfers */\n      tag_178\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":16085:16127  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_177:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14152:16134  {... */\n      pop\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":14052:16134  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6337:7421  function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_117:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6399:6420  TokenOwnership memory */\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6432:6444  uint256 curr */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6447:6454  tokenId */\n      dup3\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6432:6454  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6512:6516  curr */\n      dup1\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6493:6508  _startTokenId() */\n      tag_182\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6493:6506  _startTokenId */\n      tag_109\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6493:6508  _startTokenId() */\n      jump\t// in\n    tag_182:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6493:6516  _startTokenId() <= curr */\n      gt\n      iszero\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6493:6540  _startTokenId() <= curr && curr < _currentIndex */\n      dup1\n      iszero\n      tag_183\n      jumpi\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6527:6540  _currentIndex */\n      sload(0x00)\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6520:6524  curr */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6520:6540  curr < _currentIndex */\n      lt\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6493:6540  _startTokenId() <= curr && curr < _currentIndex */\n    tag_183:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6489:7357  if (_startTokenId() <= curr && curr < _currentIndex) {... */\n      iszero\n      tag_184\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6560:6591  TokenOwnership memory ownership */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6594:6605  _ownerships */\n      0x05\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6594:6611  _ownerships[curr] */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6606:6610  curr */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6594:6611  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6560:6611  TokenOwnership memory ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6634:6643  ownership */\n      dup1\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6634:6650  ownership.burned */\n      0x40\n      add\n      mload\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6629:7343  if (!ownership.burned) {... */\n      tag_185\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6704:6705  0 */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6678:6706  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6678:6687  ownership */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6678:6692  ownership.addr */\n      0x00\n      add\n      mload\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6678:6706  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6674:6773  if (ownership.addr != address(0)) {... */\n      tag_186\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6741:6750  ownership */\n      dup1\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6734:6750  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_181)\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6674:6773  if (ownership.addr != address(0)) {... */\n    tag_186:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7070:7325  while (true) {... */\n    tag_187:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7077:7081  true */\n      0x01\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7070:7325  while (true) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7109:7115  curr-- */\n      dup2\n      dup1\n      0x01\n      swap1\n      sub\n      swap3\n      pop\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7153:7164  _ownerships */\n      0x05\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7153:7170  _ownerships[curr] */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7165:7169  curr */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7153:7170  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7141:7170  ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7226:7227  0 */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7200:7228  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7200:7209  ownership */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7200:7214  ownership.addr */\n      0x00\n      add\n      mload\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7200:7228  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7196:7303  if (ownership.addr != address(0)) {... */\n      tag_189\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7267:7276  ownership */\n      dup1\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7260:7276  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_181)\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7196:7303  if (ownership.addr != address(0)) {... */\n    tag_189:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7070:7325  while (true) {... */\n      jump(tag_187)\n    tag_188:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6629:7343  if (!ownership.burned) {... */\n    tag_185:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6542:7357  {... */\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6489:7357  if (_startTokenId() <= curr && curr < _currentIndex) {... */\n    tag_184:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":7383:7414  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":6337:7421  function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_181:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19652:20302  function _checkContractOnERC721Received(... */\n    tag_138:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19810:19814  bool */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19846:19848  to */\n      dup4\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19830:19866  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19867:19879  _msgSender() */\n      tag_192\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19867:19877  _msgSender */\n      tag_100\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19867:19879  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19881:19885  from */\n      dup8\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19887:19894  tokenId */\n      dup7\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19896:19901  _data */\n      dup7\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19830:19902  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_196\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      0x01\n    tag_196:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19826:20296  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_199\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_204\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_203)\n    tag_204:\n      0x60\n      swap2\n      pop\n    tag_203:\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20078:20079  0 */\n      0x00\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20061:20067  reason */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20061:20074  reason.length */\n      mload\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20061:20079  reason.length == 0 */\n      eq\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20057:20286  if (reason.length == 0) {... */\n      iszero\n      tag_205\n      jumpi\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20106:20146  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20057:20286  if (reason.length == 0) {... */\n    tag_205:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20246:20252  reason */\n      dup1\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20240:20253  mload(reason) */\n      mload\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20231:20237  reason */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20227:20229  32 */\n      0x20\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20223:20238  add(32, reason) */\n      add\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20216:20254  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19826:20296  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_199:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19958:20003  IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19948:20003  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19948:19954  retval */\n      dup2\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19948:20003  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19941:20003  return retval == IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":19652:20302  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8547:8641  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_144:\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8598:8611  string memory */\n      0x60\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8630:8634  _url */\n      0x04\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8623:8634  return _url */\n      dup1\n      sload\n      tag_209\n      swap1\n      tag_87\n      jump\t// in\n    tag_209:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_210\n      swap1\n      tag_87\n      jump\t// in\n    tag_210:\n      dup1\n      iszero\n      tag_211\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_212\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_211)\n    tag_212:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_213:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_213\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_211:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":8547:8641  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":384:397  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":610:611  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":601:606  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":601:611  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n      iszero\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:637  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_214)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":657:669  uint256 temp */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":672:677  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":657:677  uint256 temp = value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":687:701  uint256 digits */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":726:727  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":718:722  temp */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":718:727  temp != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":743:751  digits++ */\n      dup1\n      dup1\n      tag_218\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":773:775  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      dup3\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      jump(tag_216)\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:814  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":827:833  digits */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:834  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_222\n      jumpi\n      tag_223\n      tag_224\n      jump\t// in\n    tag_223:\n    tag_222:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_225\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_225:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:834  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":860:861  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:856  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:861  value != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":887:888  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      dup3\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:950  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_230\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:934  48 */\n      0x30\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":919:958  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:908  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":909:915  digits */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:916  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_234\n      jumpi\n      tag_235\n      tag_236\n      jump\t// in\n    tag_235:\n    tag_234:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:958  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":981:983  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      dup6\n      tag_237\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_237:\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      jump(tag_226)\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1023  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1003:1024  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_214:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":20933:21087  function _beforeTokenTransfers(... */\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":21728:21881  function _afterTokenTransfers(... */\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_180:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_241:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_243\n        /* \"#utility.yul\":125:173   */\n      tag_244\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":109:174   */\n      tag_246\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_248\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":249:361   */\n    tag_247:\n        /* \"#utility.yul\":370:411   */\n      tag_250\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_252:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_254\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:701   */\n    tag_256:\n        /* \"#utility.yul\":611:616   */\n      0x00\n        /* \"#utility.yul\":649:655   */\n      dup2\n        /* \"#utility.yul\":636:656   */\n      calldataload\n        /* \"#utility.yul\":627:656   */\n      swap1\n      pop\n        /* \"#utility.yul\":665:695   */\n      tag_258\n        /* \"#utility.yul\":689:694   */\n      dup2\n        /* \"#utility.yul\":665:695   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":568:701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":707:844   */\n    tag_260:\n        /* \"#utility.yul\":752:757   */\n      0x00\n        /* \"#utility.yul\":790:796   */\n      dup2\n        /* \"#utility.yul\":777:797   */\n      calldataload\n        /* \"#utility.yul\":768:797   */\n      swap1\n      pop\n        /* \"#utility.yul\":806:838   */\n      tag_262\n        /* \"#utility.yul\":832:837   */\n      dup2\n        /* \"#utility.yul\":806:838   */\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":707:844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":850:991   */\n    tag_264:\n        /* \"#utility.yul\":906:911   */\n      0x00\n        /* \"#utility.yul\":937:943   */\n      dup2\n        /* \"#utility.yul\":931:944   */\n      mload\n        /* \"#utility.yul\":922:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":953:985   */\n      tag_266\n        /* \"#utility.yul\":979:984   */\n      dup2\n        /* \"#utility.yul\":953:985   */\n      tag_263\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":850:991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1010:1348   */\n    tag_267:\n        /* \"#utility.yul\":1065:1070   */\n      0x00\n        /* \"#utility.yul\":1114:1117   */\n      dup3\n        /* \"#utility.yul\":1107:1111   */\n      0x1f\n        /* \"#utility.yul\":1099:1105   */\n      dup4\n        /* \"#utility.yul\":1095:1112   */\n      add\n        /* \"#utility.yul\":1091:1118   */\n      slt\n        /* \"#utility.yul\":1081:1203   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":1122:1201   */\n      tag_270\n      tag_271\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":1081:1203   */\n    tag_269:\n        /* \"#utility.yul\":1239:1245   */\n      dup2\n        /* \"#utility.yul\":1226:1246   */\n      calldataload\n        /* \"#utility.yul\":1264:1342   */\n      tag_272\n        /* \"#utility.yul\":1338:1341   */\n      dup5\n        /* \"#utility.yul\":1330:1336   */\n      dup3\n        /* \"#utility.yul\":1323:1327   */\n      0x20\n        /* \"#utility.yul\":1315:1321   */\n      dup7\n        /* \"#utility.yul\":1311:1328   */\n      add\n        /* \"#utility.yul\":1264:1342   */\n      tag_241\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1255:1342   */\n      swap2\n      pop\n        /* \"#utility.yul\":1071:1348   */\n      pop\n        /* \"#utility.yul\":1010:1348   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1354:1493   */\n    tag_273:\n        /* \"#utility.yul\":1400:1405   */\n      0x00\n        /* \"#utility.yul\":1438:1444   */\n      dup2\n        /* \"#utility.yul\":1425:1445   */\n      calldataload\n        /* \"#utility.yul\":1416:1445   */\n      swap1\n      pop\n        /* \"#utility.yul\":1454:1487   */\n      tag_275\n        /* \"#utility.yul\":1481:1486   */\n      dup2\n        /* \"#utility.yul\":1454:1487   */\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":1354:1493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1499:1828   */\n    tag_57:\n        /* \"#utility.yul\":1558:1564   */\n      0x00\n        /* \"#utility.yul\":1607:1609   */\n      0x20\n        /* \"#utility.yul\":1595:1604   */\n      dup3\n        /* \"#utility.yul\":1586:1593   */\n      dup5\n        /* \"#utility.yul\":1582:1605   */\n      sub\n        /* \"#utility.yul\":1578:1610   */\n      slt\n        /* \"#utility.yul\":1575:1694   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":1613:1692   */\n      tag_279\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":1575:1694   */\n    tag_278:\n        /* \"#utility.yul\":1733:1734   */\n      0x00\n        /* \"#utility.yul\":1758:1811   */\n      tag_281\n        /* \"#utility.yul\":1803:1810   */\n      dup5\n        /* \"#utility.yul\":1794:1800   */\n      dup3\n        /* \"#utility.yul\":1783:1792   */\n      dup6\n        /* \"#utility.yul\":1779:1801   */\n      add\n        /* \"#utility.yul\":1758:1811   */\n      tag_252\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":1748:1811   */\n      swap2\n      pop\n        /* \"#utility.yul\":1704:1821   */\n      pop\n        /* \"#utility.yul\":1499:1828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1834:2308   */\n    tag_77:\n        /* \"#utility.yul\":1902:1908   */\n      0x00\n        /* \"#utility.yul\":1910:1916   */\n      dup1\n        /* \"#utility.yul\":1959:1961   */\n      0x40\n        /* \"#utility.yul\":1947:1956   */\n      dup4\n        /* \"#utility.yul\":1938:1945   */\n      dup6\n        /* \"#utility.yul\":1934:1957   */\n      sub\n        /* \"#utility.yul\":1930:1962   */\n      slt\n        /* \"#utility.yul\":1927:2046   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":1965:2044   */\n      tag_284\n      tag_280\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":1927:2046   */\n    tag_283:\n        /* \"#utility.yul\":2085:2086   */\n      0x00\n        /* \"#utility.yul\":2110:2163   */\n      tag_285\n        /* \"#utility.yul\":2155:2162   */\n      dup6\n        /* \"#utility.yul\":2146:2152   */\n      dup3\n        /* \"#utility.yul\":2135:2144   */\n      dup7\n        /* \"#utility.yul\":2131:2153   */\n      add\n        /* \"#utility.yul\":2110:2163   */\n      tag_252\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":2100:2163   */\n      swap3\n      pop\n        /* \"#utility.yul\":2056:2173   */\n      pop\n        /* \"#utility.yul\":2212:2214   */\n      0x20\n        /* \"#utility.yul\":2238:2291   */\n      tag_286\n        /* \"#utility.yul\":2283:2290   */\n      dup6\n        /* \"#utility.yul\":2274:2280   */\n      dup3\n        /* \"#utility.yul\":2263:2272   */\n      dup7\n        /* \"#utility.yul\":2259:2281   */\n      add\n        /* \"#utility.yul\":2238:2291   */\n      tag_252\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2228:2291   */\n      swap2\n      pop\n        /* \"#utility.yul\":2183:2301   */\n      pop\n        /* \"#utility.yul\":1834:2308   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2933   */\n    tag_46:\n        /* \"#utility.yul\":2391:2397   */\n      0x00\n        /* \"#utility.yul\":2399:2405   */\n      dup1\n        /* \"#utility.yul\":2407:2413   */\n      0x00\n        /* \"#utility.yul\":2456:2458   */\n      0x60\n        /* \"#utility.yul\":2444:2453   */\n      dup5\n        /* \"#utility.yul\":2435:2442   */\n      dup7\n        /* \"#utility.yul\":2431:2454   */\n      sub\n        /* \"#utility.yul\":2427:2459   */\n      slt\n        /* \"#utility.yul\":2424:2543   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":2462:2541   */\n      tag_289\n      tag_280\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2424:2543   */\n    tag_288:\n        /* \"#utility.yul\":2582:2583   */\n      0x00\n        /* \"#utility.yul\":2607:2660   */\n      tag_290\n        /* \"#utility.yul\":2652:2659   */\n      dup7\n        /* \"#utility.yul\":2643:2649   */\n      dup3\n        /* \"#utility.yul\":2632:2641   */\n      dup8\n        /* \"#utility.yul\":2628:2650   */\n      add\n        /* \"#utility.yul\":2607:2660   */\n      tag_252\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2597:2660   */\n      swap4\n      pop\n        /* \"#utility.yul\":2553:2670   */\n      pop\n        /* \"#utility.yul\":2709:2711   */\n      0x20\n        /* \"#utility.yul\":2735:2788   */\n      tag_291\n        /* \"#utility.yul\":2780:2787   */\n      dup7\n        /* \"#utility.yul\":2771:2777   */\n      dup3\n        /* \"#utility.yul\":2760:2769   */\n      dup8\n        /* \"#utility.yul\":2756:2778   */\n      add\n        /* \"#utility.yul\":2735:2788   */\n      tag_252\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2725:2788   */\n      swap3\n      pop\n        /* \"#utility.yul\":2680:2798   */\n      pop\n        /* \"#utility.yul\":2837:2839   */\n      0x40\n        /* \"#utility.yul\":2863:2916   */\n      tag_292\n        /* \"#utility.yul\":2908:2915   */\n      dup7\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2888:2897   */\n      dup8\n        /* \"#utility.yul\":2884:2906   */\n      add\n        /* \"#utility.yul\":2863:2916   */\n      tag_273\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":2853:2916   */\n      swap2\n      pop\n        /* \"#utility.yul\":2808:2926   */\n      pop\n        /* \"#utility.yul\":2314:2933   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2939:3882   */\n    tag_69:\n        /* \"#utility.yul\":3034:3040   */\n      0x00\n        /* \"#utility.yul\":3042:3048   */\n      dup1\n        /* \"#utility.yul\":3050:3056   */\n      0x00\n        /* \"#utility.yul\":3058:3064   */\n      dup1\n        /* \"#utility.yul\":3107:3110   */\n      0x80\n        /* \"#utility.yul\":3095:3104   */\n      dup6\n        /* \"#utility.yul\":3086:3093   */\n      dup8\n        /* \"#utility.yul\":3082:3105   */\n      sub\n        /* \"#utility.yul\":3078:3111   */\n      slt\n        /* \"#utility.yul\":3075:3195   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":3114:3193   */\n      tag_295\n      tag_280\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3075:3195   */\n    tag_294:\n        /* \"#utility.yul\":3234:3235   */\n      0x00\n        /* \"#utility.yul\":3259:3312   */\n      tag_296\n        /* \"#utility.yul\":3304:3311   */\n      dup8\n        /* \"#utility.yul\":3295:3301   */\n      dup3\n        /* \"#utility.yul\":3284:3293   */\n      dup9\n        /* \"#utility.yul\":3280:3302   */\n      add\n        /* \"#utility.yul\":3259:3312   */\n      tag_252\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3249:3312   */\n      swap5\n      pop\n        /* \"#utility.yul\":3205:3322   */\n      pop\n        /* \"#utility.yul\":3361:3363   */\n      0x20\n        /* \"#utility.yul\":3387:3440   */\n      tag_297\n        /* \"#utility.yul\":3432:3439   */\n      dup8\n        /* \"#utility.yul\":3423:3429   */\n      dup3\n        /* \"#utility.yul\":3412:3421   */\n      dup9\n        /* \"#utility.yul\":3408:3430   */\n      add\n        /* \"#utility.yul\":3387:3440   */\n      tag_252\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3377:3440   */\n      swap4\n      pop\n        /* \"#utility.yul\":3332:3450   */\n      pop\n        /* \"#utility.yul\":3489:3491   */\n      0x40\n        /* \"#utility.yul\":3515:3568   */\n      tag_298\n        /* \"#utility.yul\":3560:3567   */\n      dup8\n        /* \"#utility.yul\":3551:3557   */\n      dup3\n        /* \"#utility.yul\":3540:3549   */\n      dup9\n        /* \"#utility.yul\":3536:3558   */\n      add\n        /* \"#utility.yul\":3515:3568   */\n      tag_273\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3505:3568   */\n      swap3\n      pop\n        /* \"#utility.yul\":3460:3578   */\n      pop\n        /* \"#utility.yul\":3645:3647   */\n      0x60\n        /* \"#utility.yul\":3634:3643   */\n      dup6\n        /* \"#utility.yul\":3630:3648   */\n      add\n        /* \"#utility.yul\":3617:3649   */\n      calldataload\n        /* \"#utility.yul\":3676:3694   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3668:3674   */\n      dup2\n        /* \"#utility.yul\":3665:3695   */\n      gt\n        /* \"#utility.yul\":3662:3779   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":3698:3777   */\n      tag_300\n      tag_301\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3662:3779   */\n    tag_299:\n        /* \"#utility.yul\":3803:3865   */\n      tag_302\n        /* \"#utility.yul\":3857:3864   */\n      dup8\n        /* \"#utility.yul\":3848:3854   */\n      dup3\n        /* \"#utility.yul\":3837:3846   */\n      dup9\n        /* \"#utility.yul\":3833:3855   */\n      add\n        /* \"#utility.yul\":3803:3865   */\n      tag_267\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3793:3865   */\n      swap2\n      pop\n        /* \"#utility.yul\":3588:3875   */\n      pop\n        /* \"#utility.yul\":2939:3882   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3888:4356   */\n    tag_65:\n        /* \"#utility.yul\":3953:3959   */\n      0x00\n        /* \"#utility.yul\":3961:3967   */\n      dup1\n        /* \"#utility.yul\":4010:4012   */\n      0x40\n        /* \"#utility.yul\":3998:4007   */\n      dup4\n        /* \"#utility.yul\":3989:3996   */\n      dup6\n        /* \"#utility.yul\":3985:4008   */\n      sub\n        /* \"#utility.yul\":3981:4013   */\n      slt\n        /* \"#utility.yul\":3978:4097   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":4016:4095   */\n      tag_305\n      tag_280\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":3978:4097   */\n    tag_304:\n        /* \"#utility.yul\":4136:4137   */\n      0x00\n        /* \"#utility.yul\":4161:4214   */\n      tag_306\n        /* \"#utility.yul\":4206:4213   */\n      dup6\n        /* \"#utility.yul\":4197:4203   */\n      dup3\n        /* \"#utility.yul\":4186:4195   */\n      dup7\n        /* \"#utility.yul\":4182:4204   */\n      add\n        /* \"#utility.yul\":4161:4214   */\n      tag_252\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4151:4214   */\n      swap3\n      pop\n        /* \"#utility.yul\":4107:4224   */\n      pop\n        /* \"#utility.yul\":4263:4265   */\n      0x20\n        /* \"#utility.yul\":4289:4339   */\n      tag_307\n        /* \"#utility.yul\":4331:4338   */\n      dup6\n        /* \"#utility.yul\":4322:4328   */\n      dup3\n        /* \"#utility.yul\":4311:4320   */\n      dup7\n        /* \"#utility.yul\":4307:4329   */\n      add\n        /* \"#utility.yul\":4289:4339   */\n      tag_256\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4279:4339   */\n      swap2\n      pop\n        /* \"#utility.yul\":4234:4349   */\n      pop\n        /* \"#utility.yul\":3888:4356   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4362:4836   */\n    tag_38:\n        /* \"#utility.yul\":4430:4436   */\n      0x00\n        /* \"#utility.yul\":4438:4444   */\n      dup1\n        /* \"#utility.yul\":4487:4489   */\n      0x40\n        /* \"#utility.yul\":4475:4484   */\n      dup4\n        /* \"#utility.yul\":4466:4473   */\n      dup6\n        /* \"#utility.yul\":4462:4485   */\n      sub\n        /* \"#utility.yul\":4458:4490   */\n      slt\n        /* \"#utility.yul\":4455:4574   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":4493:4572   */\n      tag_310\n      tag_280\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4455:4574   */\n    tag_309:\n        /* \"#utility.yul\":4613:4614   */\n      0x00\n        /* \"#utility.yul\":4638:4691   */\n      tag_311\n        /* \"#utility.yul\":4683:4690   */\n      dup6\n        /* \"#utility.yul\":4674:4680   */\n      dup3\n        /* \"#utility.yul\":4663:4672   */\n      dup7\n        /* \"#utility.yul\":4659:4681   */\n      add\n        /* \"#utility.yul\":4638:4691   */\n      tag_252\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4628:4691   */\n      swap3\n      pop\n        /* \"#utility.yul\":4584:4701   */\n      pop\n        /* \"#utility.yul\":4740:4742   */\n      0x20\n        /* \"#utility.yul\":4766:4819   */\n      tag_312\n        /* \"#utility.yul\":4811:4818   */\n      dup6\n        /* \"#utility.yul\":4802:4808   */\n      dup3\n        /* \"#utility.yul\":4791:4800   */\n      dup7\n        /* \"#utility.yul\":4787:4809   */\n      add\n        /* \"#utility.yul\":4766:4819   */\n      tag_273\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4756:4819   */\n      swap2\n      pop\n        /* \"#utility.yul\":4711:4829   */\n      pop\n        /* \"#utility.yul\":4362:4836   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4842:5169   */\n    tag_22:\n        /* \"#utility.yul\":4900:4906   */\n      0x00\n        /* \"#utility.yul\":4949:4951   */\n      0x20\n        /* \"#utility.yul\":4937:4946   */\n      dup3\n        /* \"#utility.yul\":4928:4935   */\n      dup5\n        /* \"#utility.yul\":4924:4947   */\n      sub\n        /* \"#utility.yul\":4920:4952   */\n      slt\n        /* \"#utility.yul\":4917:5036   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":4955:5034   */\n      tag_315\n      tag_280\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4917:5036   */\n    tag_314:\n        /* \"#utility.yul\":5075:5076   */\n      0x00\n        /* \"#utility.yul\":5100:5152   */\n      tag_316\n        /* \"#utility.yul\":5144:5151   */\n      dup5\n        /* \"#utility.yul\":5135:5141   */\n      dup3\n        /* \"#utility.yul\":5124:5133   */\n      dup6\n        /* \"#utility.yul\":5120:5142   */\n      add\n        /* \"#utility.yul\":5100:5152   */\n      tag_260\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5090:5152   */\n      swap2\n      pop\n        /* \"#utility.yul\":5046:5162   */\n      pop\n        /* \"#utility.yul\":4842:5169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5175:5524   */\n    tag_198:\n        /* \"#utility.yul\":5244:5250   */\n      0x00\n        /* \"#utility.yul\":5293:5295   */\n      0x20\n        /* \"#utility.yul\":5281:5290   */\n      dup3\n        /* \"#utility.yul\":5272:5279   */\n      dup5\n        /* \"#utility.yul\":5268:5291   */\n      sub\n        /* \"#utility.yul\":5264:5296   */\n      slt\n        /* \"#utility.yul\":5261:5380   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":5299:5378   */\n      tag_319\n      tag_280\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5261:5380   */\n    tag_318:\n        /* \"#utility.yul\":5419:5420   */\n      0x00\n        /* \"#utility.yul\":5444:5507   */\n      tag_320\n        /* \"#utility.yul\":5499:5506   */\n      dup5\n        /* \"#utility.yul\":5490:5496   */\n      dup3\n        /* \"#utility.yul\":5479:5488   */\n      dup6\n        /* \"#utility.yul\":5475:5497   */\n      add\n        /* \"#utility.yul\":5444:5507   */\n      tag_264\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5434:5507   */\n      swap2\n      pop\n        /* \"#utility.yul\":5390:5517   */\n      pop\n        /* \"#utility.yul\":5175:5524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5530:5859   */\n    tag_32:\n        /* \"#utility.yul\":5589:5595   */\n      0x00\n        /* \"#utility.yul\":5638:5640   */\n      0x20\n        /* \"#utility.yul\":5626:5635   */\n      dup3\n        /* \"#utility.yul\":5617:5624   */\n      dup5\n        /* \"#utility.yul\":5613:5636   */\n      sub\n        /* \"#utility.yul\":5609:5641   */\n      slt\n        /* \"#utility.yul\":5606:5725   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":5644:5723   */\n      tag_323\n      tag_280\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5606:5725   */\n    tag_322:\n        /* \"#utility.yul\":5764:5765   */\n      0x00\n        /* \"#utility.yul\":5789:5842   */\n      tag_324\n        /* \"#utility.yul\":5834:5841   */\n      dup5\n        /* \"#utility.yul\":5825:5831   */\n      dup3\n        /* \"#utility.yul\":5814:5823   */\n      dup6\n        /* \"#utility.yul\":5810:5832   */\n      add\n        /* \"#utility.yul\":5789:5842   */\n      tag_273\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5779:5842   */\n      swap2\n      pop\n        /* \"#utility.yul\":5735:5852   */\n      pop\n        /* \"#utility.yul\":5530:5859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5865:5983   */\n    tag_325:\n        /* \"#utility.yul\":5952:5976   */\n      tag_327\n        /* \"#utility.yul\":5970:5975   */\n      dup2\n        /* \"#utility.yul\":5952:5976   */\n      tag_328\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":5947:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5977   */\n      mstore\n        /* \"#utility.yul\":5865:5983   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5989:6098   */\n    tag_329:\n        /* \"#utility.yul\":6070:6091   */\n      tag_331\n        /* \"#utility.yul\":6085:6090   */\n      dup2\n        /* \"#utility.yul\":6070:6091   */\n      tag_332\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":6065:6068   */\n      dup3\n        /* \"#utility.yul\":6058:6092   */\n      mstore\n        /* \"#utility.yul\":5989:6098   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6104:6464   */\n    tag_333:\n        /* \"#utility.yul\":6190:6193   */\n      0x00\n        /* \"#utility.yul\":6218:6256   */\n      tag_335\n        /* \"#utility.yul\":6250:6255   */\n      dup3\n        /* \"#utility.yul\":6218:6256   */\n      tag_336\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6272:6342   */\n      tag_337\n        /* \"#utility.yul\":6335:6341   */\n      dup2\n        /* \"#utility.yul\":6330:6333   */\n      dup6\n        /* \"#utility.yul\":6272:6342   */\n      tag_338\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6265:6342   */\n      swap4\n      pop\n        /* \"#utility.yul\":6351:6403   */\n      tag_339\n        /* \"#utility.yul\":6396:6402   */\n      dup2\n        /* \"#utility.yul\":6391:6394   */\n      dup6\n        /* \"#utility.yul\":6384:6388   */\n      0x20\n        /* \"#utility.yul\":6377:6382   */\n      dup7\n        /* \"#utility.yul\":6373:6389   */\n      add\n        /* \"#utility.yul\":6351:6403   */\n      tag_340\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6428:6457   */\n      tag_341\n        /* \"#utility.yul\":6450:6456   */\n      dup2\n        /* \"#utility.yul\":6428:6457   */\n      tag_342\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":6423:6426   */\n      dup5\n        /* \"#utility.yul\":6419:6458   */\n      add\n        /* \"#utility.yul\":6412:6458   */\n      swap2\n      pop\n        /* \"#utility.yul\":6194:6464   */\n      pop\n        /* \"#utility.yul\":6104:6464   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6470:6834   */\n    tag_343:\n        /* \"#utility.yul\":6558:6561   */\n      0x00\n        /* \"#utility.yul\":6586:6625   */\n      tag_345\n        /* \"#utility.yul\":6619:6624   */\n      dup3\n        /* \"#utility.yul\":6586:6625   */\n      tag_346\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":6641:6712   */\n      tag_347\n        /* \"#utility.yul\":6705:6711   */\n      dup2\n        /* \"#utility.yul\":6700:6703   */\n      dup6\n        /* \"#utility.yul\":6641:6712   */\n      tag_348\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":6634:6712   */\n      swap4\n      pop\n        /* \"#utility.yul\":6721:6773   */\n      tag_349\n        /* \"#utility.yul\":6766:6772   */\n      dup2\n        /* \"#utility.yul\":6761:6764   */\n      dup6\n        /* \"#utility.yul\":6754:6758   */\n      0x20\n        /* \"#utility.yul\":6747:6752   */\n      dup7\n        /* \"#utility.yul\":6743:6759   */\n      add\n        /* \"#utility.yul\":6721:6773   */\n      tag_340\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":6798:6827   */\n      tag_350\n        /* \"#utility.yul\":6820:6826   */\n      dup2\n        /* \"#utility.yul\":6798:6827   */\n      tag_342\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":6793:6796   */\n      dup5\n        /* \"#utility.yul\":6789:6828   */\n      add\n        /* \"#utility.yul\":6782:6828   */\n      swap2\n      pop\n        /* \"#utility.yul\":6562:6834   */\n      pop\n        /* \"#utility.yul\":6470:6834   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6840:7217   */\n    tag_351:\n        /* \"#utility.yul\":6946:6949   */\n      0x00\n        /* \"#utility.yul\":6974:7013   */\n      tag_353\n        /* \"#utility.yul\":7007:7012   */\n      dup3\n        /* \"#utility.yul\":6974:7013   */\n      tag_346\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":7029:7118   */\n      tag_354\n        /* \"#utility.yul\":7111:7117   */\n      dup2\n        /* \"#utility.yul\":7106:7109   */\n      dup6\n        /* \"#utility.yul\":7029:7118   */\n      tag_355\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7022:7118   */\n      swap4\n      pop\n        /* \"#utility.yul\":7127:7179   */\n      tag_356\n        /* \"#utility.yul\":7172:7178   */\n      dup2\n        /* \"#utility.yul\":7167:7170   */\n      dup6\n        /* \"#utility.yul\":7160:7164   */\n      0x20\n        /* \"#utility.yul\":7153:7158   */\n      dup7\n        /* \"#utility.yul\":7149:7165   */\n      add\n        /* \"#utility.yul\":7127:7179   */\n      tag_340\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":7204:7210   */\n      dup1\n        /* \"#utility.yul\":7199:7202   */\n      dup5\n        /* \"#utility.yul\":7195:7211   */\n      add\n        /* \"#utility.yul\":7188:7211   */\n      swap2\n      pop\n        /* \"#utility.yul\":6950:7217   */\n      pop\n        /* \"#utility.yul\":6840:7217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7223:7341   */\n    tag_357:\n        /* \"#utility.yul\":7310:7334   */\n      tag_359\n        /* \"#utility.yul\":7328:7333   */\n      dup2\n        /* \"#utility.yul\":7310:7334   */\n      tag_360\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":7305:7308   */\n      dup3\n        /* \"#utility.yul\":7298:7335   */\n      mstore\n        /* \"#utility.yul\":7223:7341   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7347:7782   */\n    tag_150:\n        /* \"#utility.yul\":7527:7530   */\n      0x00\n        /* \"#utility.yul\":7549:7644   */\n      tag_362\n        /* \"#utility.yul\":7640:7643   */\n      dup3\n        /* \"#utility.yul\":7631:7637   */\n      dup6\n        /* \"#utility.yul\":7549:7644   */\n      tag_351\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":7542:7644   */\n      swap2\n      pop\n        /* \"#utility.yul\":7661:7756   */\n      tag_363\n        /* \"#utility.yul\":7752:7755   */\n      dup3\n        /* \"#utility.yul\":7743:7749   */\n      dup5\n        /* \"#utility.yul\":7661:7756   */\n      tag_351\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":7654:7756   */\n      swap2\n      pop\n        /* \"#utility.yul\":7773:7776   */\n      dup2\n        /* \"#utility.yul\":7766:7776   */\n      swap1\n      pop\n        /* \"#utility.yul\":7347:7782   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7788:8010   */\n    tag_35:\n        /* \"#utility.yul\":7881:7885   */\n      0x00\n        /* \"#utility.yul\":7919:7921   */\n      0x20\n        /* \"#utility.yul\":7908:7917   */\n      dup3\n        /* \"#utility.yul\":7904:7922   */\n      add\n        /* \"#utility.yul\":7896:7922   */\n      swap1\n      pop\n        /* \"#utility.yul\":7932:8003   */\n      tag_365\n        /* \"#utility.yul\":8000:8001   */\n      0x00\n        /* \"#utility.yul\":7989:7998   */\n      dup4\n        /* \"#utility.yul\":7985:8002   */\n      add\n        /* \"#utility.yul\":7976:7982   */\n      dup5\n        /* \"#utility.yul\":7932:8003   */\n      tag_325\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":7788:8010   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8016:8656   */\n    tag_194:\n        /* \"#utility.yul\":8211:8215   */\n      0x00\n        /* \"#utility.yul\":8249:8252   */\n      0x80\n        /* \"#utility.yul\":8238:8247   */\n      dup3\n        /* \"#utility.yul\":8234:8253   */\n      add\n        /* \"#utility.yul\":8226:8253   */\n      swap1\n      pop\n        /* \"#utility.yul\":8263:8334   */\n      tag_367\n        /* \"#utility.yul\":8331:8332   */\n      0x00\n        /* \"#utility.yul\":8320:8329   */\n      dup4\n        /* \"#utility.yul\":8316:8333   */\n      add\n        /* \"#utility.yul\":8307:8313   */\n      dup8\n        /* \"#utility.yul\":8263:8334   */\n      tag_325\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":8344:8416   */\n      tag_368\n        /* \"#utility.yul\":8412:8414   */\n      0x20\n        /* \"#utility.yul\":8401:8410   */\n      dup4\n        /* \"#utility.yul\":8397:8415   */\n      add\n        /* \"#utility.yul\":8388:8394   */\n      dup7\n        /* \"#utility.yul\":8344:8416   */\n      tag_325\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":8426:8498   */\n      tag_369\n        /* \"#utility.yul\":8494:8496   */\n      0x40\n        /* \"#utility.yul\":8483:8492   */\n      dup4\n        /* \"#utility.yul\":8479:8497   */\n      add\n        /* \"#utility.yul\":8470:8476   */\n      dup6\n        /* \"#utility.yul\":8426:8498   */\n      tag_357\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":8545:8554   */\n      dup2\n        /* \"#utility.yul\":8539:8543   */\n      dup2\n        /* \"#utility.yul\":8535:8555   */\n      sub\n        /* \"#utility.yul\":8530:8532   */\n      0x60\n        /* \"#utility.yul\":8519:8528   */\n      dup4\n        /* \"#utility.yul\":8515:8533   */\n      add\n        /* \"#utility.yul\":8508:8556   */\n      mstore\n        /* \"#utility.yul\":8573:8649   */\n      tag_370\n        /* \"#utility.yul\":8644:8648   */\n      dup2\n        /* \"#utility.yul\":8635:8641   */\n      dup5\n        /* \"#utility.yul\":8573:8649   */\n      tag_333\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":8565:8649   */\n      swap1\n      pop\n        /* \"#utility.yul\":8016:8656   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8662:8872   */\n    tag_25:\n        /* \"#utility.yul\":8749:8753   */\n      0x00\n        /* \"#utility.yul\":8787:8789   */\n      0x20\n        /* \"#utility.yul\":8776:8785   */\n      dup3\n        /* \"#utility.yul\":8772:8790   */\n      add\n        /* \"#utility.yul\":8764:8790   */\n      swap1\n      pop\n        /* \"#utility.yul\":8800:8865   */\n      tag_372\n        /* \"#utility.yul\":8862:8863   */\n      0x00\n        /* \"#utility.yul\":8851:8860   */\n      dup4\n        /* \"#utility.yul\":8847:8864   */\n      add\n        /* \"#utility.yul\":8838:8844   */\n      dup5\n        /* \"#utility.yul\":8800:8865   */\n      tag_329\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":8662:8872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8878:9191   */\n    tag_29:\n        /* \"#utility.yul\":8991:8995   */\n      0x00\n        /* \"#utility.yul\":9029:9031   */\n      0x20\n        /* \"#utility.yul\":9018:9027   */\n      dup3\n        /* \"#utility.yul\":9014:9032   */\n      add\n        /* \"#utility.yul\":9006:9032   */\n      swap1\n      pop\n        /* \"#utility.yul\":9078:9087   */\n      dup2\n        /* \"#utility.yul\":9072:9076   */\n      dup2\n        /* \"#utility.yul\":9068:9088   */\n      sub\n        /* \"#utility.yul\":9064:9065   */\n      0x00\n        /* \"#utility.yul\":9053:9062   */\n      dup4\n        /* \"#utility.yul\":9049:9066   */\n      add\n        /* \"#utility.yul\":9042:9089   */\n      mstore\n        /* \"#utility.yul\":9106:9184   */\n      tag_374\n        /* \"#utility.yul\":9179:9183   */\n      dup2\n        /* \"#utility.yul\":9170:9176   */\n      dup5\n        /* \"#utility.yul\":9106:9184   */\n      tag_343\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":9098:9184   */\n      swap1\n      pop\n        /* \"#utility.yul\":8878:9191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9197:9419   */\n    tag_43:\n        /* \"#utility.yul\":9290:9294   */\n      0x00\n        /* \"#utility.yul\":9328:9330   */\n      0x20\n        /* \"#utility.yul\":9317:9326   */\n      dup3\n        /* \"#utility.yul\":9313:9331   */\n      add\n        /* \"#utility.yul\":9305:9331   */\n      swap1\n      pop\n        /* \"#utility.yul\":9341:9412   */\n      tag_376\n        /* \"#utility.yul\":9409:9410   */\n      0x00\n        /* \"#utility.yul\":9398:9407   */\n      dup4\n        /* \"#utility.yul\":9394:9411   */\n      add\n        /* \"#utility.yul\":9385:9391   */\n      dup5\n        /* \"#utility.yul\":9341:9412   */\n      tag_357\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":9197:9419   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9425:9554   */\n    tag_246:\n        /* \"#utility.yul\":9459:9465   */\n      0x00\n        /* \"#utility.yul\":9486:9506   */\n      tag_378\n      tag_379\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":9476:9506   */\n      swap1\n      pop\n        /* \"#utility.yul\":9515:9548   */\n      tag_380\n        /* \"#utility.yul\":9543:9547   */\n      dup3\n        /* \"#utility.yul\":9535:9541   */\n      dup3\n        /* \"#utility.yul\":9515:9548   */\n      tag_381\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":9425:9554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9560:9635   */\n    tag_379:\n        /* \"#utility.yul\":9593:9599   */\n      0x00\n        /* \"#utility.yul\":9626:9628   */\n      0x40\n        /* \"#utility.yul\":9620:9629   */\n      mload\n        /* \"#utility.yul\":9610:9629   */\n      swap1\n      pop\n        /* \"#utility.yul\":9560:9635   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":9641:9948   */\n    tag_245:\n        /* \"#utility.yul\":9702:9706   */\n      0x00\n        /* \"#utility.yul\":9792:9810   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9784:9790   */\n      dup3\n        /* \"#utility.yul\":9781:9811   */\n      gt\n        /* \"#utility.yul\":9778:9834   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":9814:9832   */\n      tag_385\n      tag_224\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":9778:9834   */\n    tag_384:\n        /* \"#utility.yul\":9852:9881   */\n      tag_386\n        /* \"#utility.yul\":9874:9880   */\n      dup3\n        /* \"#utility.yul\":9852:9881   */\n      tag_342\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":9844:9881   */\n      swap1\n      pop\n        /* \"#utility.yul\":9936:9940   */\n      0x20\n        /* \"#utility.yul\":9930:9934   */\n      dup2\n        /* \"#utility.yul\":9926:9941   */\n      add\n        /* \"#utility.yul\":9918:9941   */\n      swap1\n      pop\n        /* \"#utility.yul\":9641:9948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9954:10052   */\n    tag_336:\n        /* \"#utility.yul\":10005:10011   */\n      0x00\n        /* \"#utility.yul\":10039:10044   */\n      dup2\n        /* \"#utility.yul\":10033:10045   */\n      mload\n        /* \"#utility.yul\":10023:10045   */\n      swap1\n      pop\n        /* \"#utility.yul\":9954:10052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10058:10157   */\n    tag_346:\n        /* \"#utility.yul\":10110:10116   */\n      0x00\n        /* \"#utility.yul\":10144:10149   */\n      dup2\n        /* \"#utility.yul\":10138:10150   */\n      mload\n        /* \"#utility.yul\":10128:10150   */\n      swap1\n      pop\n        /* \"#utility.yul\":10058:10157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10163:10331   */\n    tag_338:\n        /* \"#utility.yul\":10246:10257   */\n      0x00\n        /* \"#utility.yul\":10280:10286   */\n      dup3\n        /* \"#utility.yul\":10275:10278   */\n      dup3\n        /* \"#utility.yul\":10268:10287   */\n      mstore\n        /* \"#utility.yul\":10320:10324   */\n      0x20\n        /* \"#utility.yul\":10315:10318   */\n      dup3\n        /* \"#utility.yul\":10311:10325   */\n      add\n        /* \"#utility.yul\":10296:10325   */\n      swap1\n      pop\n        /* \"#utility.yul\":10163:10331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10337:10506   */\n    tag_348:\n        /* \"#utility.yul\":10421:10432   */\n      0x00\n        /* \"#utility.yul\":10455:10461   */\n      dup3\n        /* \"#utility.yul\":10450:10453   */\n      dup3\n        /* \"#utility.yul\":10443:10462   */\n      mstore\n        /* \"#utility.yul\":10495:10499   */\n      0x20\n        /* \"#utility.yul\":10490:10493   */\n      dup3\n        /* \"#utility.yul\":10486:10500   */\n      add\n        /* \"#utility.yul\":10471:10500   */\n      swap1\n      pop\n        /* \"#utility.yul\":10337:10506   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10512:10660   */\n    tag_355:\n        /* \"#utility.yul\":10614:10625   */\n      0x00\n        /* \"#utility.yul\":10651:10654   */\n      dup2\n        /* \"#utility.yul\":10636:10654   */\n      swap1\n      pop\n        /* \"#utility.yul\":10512:10660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10666:10971   */\n    tag_233:\n        /* \"#utility.yul\":10706:10709   */\n      0x00\n        /* \"#utility.yul\":10725:10745   */\n      tag_393\n        /* \"#utility.yul\":10743:10744   */\n      dup3\n        /* \"#utility.yul\":10725:10745   */\n      tag_360\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":10720:10745   */\n      swap2\n      pop\n        /* \"#utility.yul\":10759:10779   */\n      tag_394\n        /* \"#utility.yul\":10777:10778   */\n      dup4\n        /* \"#utility.yul\":10759:10779   */\n      tag_360\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":10754:10779   */\n      swap3\n      pop\n        /* \"#utility.yul\":10913:10914   */\n      dup3\n        /* \"#utility.yul\":10845:10911   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10841:10915   */\n      sub\n        /* \"#utility.yul\":10838:10839   */\n      dup3\n        /* \"#utility.yul\":10835:10916   */\n      gt\n        /* \"#utility.yul\":10832:10939   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":10919:10937   */\n      tag_396\n      tag_397\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":10832:10939   */\n    tag_395:\n        /* \"#utility.yul\":10963:10964   */\n      dup3\n        /* \"#utility.yul\":10960:10961   */\n      dup3\n        /* \"#utility.yul\":10956:10965   */\n      add\n        /* \"#utility.yul\":10949:10965   */\n      swap1\n      pop\n        /* \"#utility.yul\":10666:10971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10977:11162   */\n    tag_221:\n        /* \"#utility.yul\":11017:11018   */\n      0x00\n        /* \"#utility.yul\":11034:11054   */\n      tag_399\n        /* \"#utility.yul\":11052:11053   */\n      dup3\n        /* \"#utility.yul\":11034:11054   */\n      tag_360\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":11029:11054   */\n      swap2\n      pop\n        /* \"#utility.yul\":11068:11088   */\n      tag_400\n        /* \"#utility.yul\":11086:11087   */\n      dup4\n        /* \"#utility.yul\":11068:11088   */\n      tag_360\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":11063:11088   */\n      swap3\n      pop\n        /* \"#utility.yul\":11107:11108   */\n      dup3\n        /* \"#utility.yul\":11097:11132   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":11112:11130   */\n      tag_402\n      tag_403\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":11097:11132   */\n    tag_401:\n        /* \"#utility.yul\":11154:11155   */\n      dup3\n        /* \"#utility.yul\":11151:11152   */\n      dup3\n        /* \"#utility.yul\":11147:11156   */\n      div\n        /* \"#utility.yul\":11142:11156   */\n      swap1\n      pop\n        /* \"#utility.yul\":10977:11162   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11168:11359   */\n    tag_229:\n        /* \"#utility.yul\":11208:11212   */\n      0x00\n        /* \"#utility.yul\":11228:11248   */\n      tag_405\n        /* \"#utility.yul\":11246:11247   */\n      dup3\n        /* \"#utility.yul\":11228:11248   */\n      tag_360\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":11223:11248   */\n      swap2\n      pop\n        /* \"#utility.yul\":11262:11282   */\n      tag_406\n        /* \"#utility.yul\":11280:11281   */\n      dup4\n        /* \"#utility.yul\":11262:11282   */\n      tag_360\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":11257:11282   */\n      swap3\n      pop\n        /* \"#utility.yul\":11301:11302   */\n      dup3\n        /* \"#utility.yul\":11298:11299   */\n      dup3\n        /* \"#utility.yul\":11295:11303   */\n      lt\n        /* \"#utility.yul\":11292:11326   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":11306:11324   */\n      tag_408\n      tag_397\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":11292:11326   */\n    tag_407:\n        /* \"#utility.yul\":11351:11352   */\n      dup3\n        /* \"#utility.yul\":11348:11349   */\n      dup3\n        /* \"#utility.yul\":11344:11353   */\n      sub\n        /* \"#utility.yul\":11336:11353   */\n      swap1\n      pop\n        /* \"#utility.yul\":11168:11359   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11365:11461   */\n    tag_328:\n        /* \"#utility.yul\":11402:11409   */\n      0x00\n        /* \"#utility.yul\":11431:11455   */\n      tag_410\n        /* \"#utility.yul\":11449:11454   */\n      dup3\n        /* \"#utility.yul\":11431:11455   */\n      tag_411\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":11420:11455   */\n      swap1\n      pop\n        /* \"#utility.yul\":11365:11461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11467:11557   */\n    tag_332:\n        /* \"#utility.yul\":11501:11508   */\n      0x00\n        /* \"#utility.yul\":11544:11549   */\n      dup2\n        /* \"#utility.yul\":11537:11550   */\n      iszero\n        /* \"#utility.yul\":11530:11551   */\n      iszero\n        /* \"#utility.yul\":11519:11551   */\n      swap1\n      pop\n        /* \"#utility.yul\":11467:11557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11563:11712   */\n    tag_413:\n        /* \"#utility.yul\":11599:11606   */\n      0x00\n        /* \"#utility.yul\":11639:11705   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11632:11637   */\n      dup3\n        /* \"#utility.yul\":11628:11706   */\n      and\n        /* \"#utility.yul\":11617:11706   */\n      swap1\n      pop\n        /* \"#utility.yul\":11563:11712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11718:11844   */\n    tag_411:\n        /* \"#utility.yul\":11755:11762   */\n      0x00\n        /* \"#utility.yul\":11795:11837   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11788:11793   */\n      dup3\n        /* \"#utility.yul\":11784:11838   */\n      and\n        /* \"#utility.yul\":11773:11838   */\n      swap1\n      pop\n        /* \"#utility.yul\":11718:11844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11850:11927   */\n    tag_360:\n        /* \"#utility.yul\":11887:11894   */\n      0x00\n        /* \"#utility.yul\":11916:11921   */\n      dup2\n        /* \"#utility.yul\":11905:11921   */\n      swap1\n      pop\n        /* \"#utility.yul\":11850:11927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11933:12087   */\n    tag_251:\n        /* \"#utility.yul\":12017:12023   */\n      dup3\n        /* \"#utility.yul\":12012:12015   */\n      dup2\n        /* \"#utility.yul\":12007:12010   */\n      dup4\n        /* \"#utility.yul\":11994:12024   */\n      calldatacopy\n        /* \"#utility.yul\":12079:12080   */\n      0x00\n        /* \"#utility.yul\":12070:12076   */\n      dup4\n        /* \"#utility.yul\":12065:12068   */\n      dup4\n        /* \"#utility.yul\":12061:12077   */\n      add\n        /* \"#utility.yul\":12054:12081   */\n      mstore\n        /* \"#utility.yul\":11933:12087   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12093:12400   */\n    tag_340:\n        /* \"#utility.yul\":12161:12162   */\n      0x00\n        /* \"#utility.yul\":12171:12284   */\n    tag_419:\n        /* \"#utility.yul\":12185:12191   */\n      dup4\n        /* \"#utility.yul\":12182:12183   */\n      dup2\n        /* \"#utility.yul\":12179:12192   */\n      lt\n        /* \"#utility.yul\":12171:12284   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":12270:12271   */\n      dup1\n        /* \"#utility.yul\":12265:12268   */\n      dup3\n        /* \"#utility.yul\":12261:12272   */\n      add\n        /* \"#utility.yul\":12255:12273   */\n      mload\n        /* \"#utility.yul\":12251:12252   */\n      dup2\n        /* \"#utility.yul\":12246:12249   */\n      dup5\n        /* \"#utility.yul\":12242:12253   */\n      add\n        /* \"#utility.yul\":12235:12274   */\n      mstore\n        /* \"#utility.yul\":12207:12209   */\n      0x20\n        /* \"#utility.yul\":12204:12205   */\n      dup2\n        /* \"#utility.yul\":12200:12210   */\n      add\n        /* \"#utility.yul\":12195:12210   */\n      swap1\n      pop\n        /* \"#utility.yul\":12171:12284   */\n      jump(tag_419)\n    tag_421:\n        /* \"#utility.yul\":12302:12308   */\n      dup4\n        /* \"#utility.yul\":12299:12300   */\n      dup2\n        /* \"#utility.yul\":12296:12309   */\n      gt\n        /* \"#utility.yul\":12293:12394   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":12382:12383   */\n      0x00\n        /* \"#utility.yul\":12373:12379   */\n      dup5\n        /* \"#utility.yul\":12368:12371   */\n      dup5\n        /* \"#utility.yul\":12364:12380   */\n      add\n        /* \"#utility.yul\":12357:12384   */\n      mstore\n        /* \"#utility.yul\":12293:12394   */\n    tag_422:\n        /* \"#utility.yul\":12142:12400   */\n      pop\n        /* \"#utility.yul\":12093:12400   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12406:12726   */\n    tag_87:\n        /* \"#utility.yul\":12450:12456   */\n      0x00\n        /* \"#utility.yul\":12487:12488   */\n      0x02\n        /* \"#utility.yul\":12481:12485   */\n      dup3\n        /* \"#utility.yul\":12477:12489   */\n      div\n        /* \"#utility.yul\":12467:12489   */\n      swap1\n      pop\n        /* \"#utility.yul\":12534:12535   */\n      0x01\n        /* \"#utility.yul\":12528:12532   */\n      dup3\n        /* \"#utility.yul\":12524:12536   */\n      and\n        /* \"#utility.yul\":12555:12573   */\n      dup1\n        /* \"#utility.yul\":12545:12626   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":12611:12615   */\n      0x7f\n        /* \"#utility.yul\":12603:12609   */\n      dup3\n        /* \"#utility.yul\":12599:12616   */\n      and\n        /* \"#utility.yul\":12589:12616   */\n      swap2\n      pop\n        /* \"#utility.yul\":12545:12626   */\n    tag_424:\n        /* \"#utility.yul\":12673:12675   */\n      0x20\n        /* \"#utility.yul\":12665:12671   */\n      dup3\n        /* \"#utility.yul\":12662:12676   */\n      lt\n        /* \"#utility.yul\":12642:12660   */\n      dup2\n        /* \"#utility.yul\":12639:12677   */\n      eq\n        /* \"#utility.yul\":12636:12720   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":12692:12710   */\n      tag_426\n      tag_427\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":12636:12720   */\n    tag_425:\n        /* \"#utility.yul\":12457:12726   */\n      pop\n        /* \"#utility.yul\":12406:12726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12732:13013   */\n    tag_381:\n        /* \"#utility.yul\":12815:12842   */\n      tag_429\n        /* \"#utility.yul\":12837:12841   */\n      dup3\n        /* \"#utility.yul\":12815:12842   */\n      tag_342\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":12807:12813   */\n      dup2\n        /* \"#utility.yul\":12803:12843   */\n      add\n        /* \"#utility.yul\":12945:12951   */\n      dup2\n        /* \"#utility.yul\":12933:12943   */\n      dup2\n        /* \"#utility.yul\":12930:12952   */\n      lt\n        /* \"#utility.yul\":12909:12927   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12897:12907   */\n      dup3\n        /* \"#utility.yul\":12894:12928   */\n      gt\n        /* \"#utility.yul\":12891:12953   */\n      or\n        /* \"#utility.yul\":12888:12976   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":12956:12974   */\n      tag_431\n      tag_224\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":12888:12976   */\n    tag_430:\n        /* \"#utility.yul\":12996:13006   */\n      dup1\n        /* \"#utility.yul\":12992:12994   */\n      0x40\n        /* \"#utility.yul\":12985:13007   */\n      mstore\n        /* \"#utility.yul\":12775:13013   */\n      pop\n        /* \"#utility.yul\":12732:13013   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13019:13252   */\n    tag_219:\n        /* \"#utility.yul\":13058:13061   */\n      0x00\n        /* \"#utility.yul\":13081:13105   */\n      tag_433\n        /* \"#utility.yul\":13099:13104   */\n      dup3\n        /* \"#utility.yul\":13081:13105   */\n      tag_360\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":13072:13105   */\n      swap2\n      pop\n        /* \"#utility.yul\":13127:13193   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13120:13125   */\n      dup3\n        /* \"#utility.yul\":13117:13194   */\n      eq\n        /* \"#utility.yul\":13114:13217   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":13197:13215   */\n      tag_435\n      tag_397\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":13114:13217   */\n    tag_434:\n        /* \"#utility.yul\":13244:13245   */\n      0x01\n        /* \"#utility.yul\":13237:13242   */\n      dup3\n        /* \"#utility.yul\":13233:13246   */\n      add\n        /* \"#utility.yul\":13226:13246   */\n      swap1\n      pop\n        /* \"#utility.yul\":13019:13252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13258:13434   */\n    tag_231:\n        /* \"#utility.yul\":13290:13291   */\n      0x00\n        /* \"#utility.yul\":13307:13327   */\n      tag_437\n        /* \"#utility.yul\":13325:13326   */\n      dup3\n        /* \"#utility.yul\":13307:13327   */\n      tag_360\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":13302:13327   */\n      swap2\n      pop\n        /* \"#utility.yul\":13341:13361   */\n      tag_438\n        /* \"#utility.yul\":13359:13360   */\n      dup4\n        /* \"#utility.yul\":13341:13361   */\n      tag_360\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13336:13361   */\n      swap3\n      pop\n        /* \"#utility.yul\":13380:13381   */\n      dup3\n        /* \"#utility.yul\":13370:13405   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":13385:13403   */\n      tag_440\n      tag_403\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":13370:13405   */\n    tag_439:\n        /* \"#utility.yul\":13426:13427   */\n      dup3\n        /* \"#utility.yul\":13423:13424   */\n      dup3\n        /* \"#utility.yul\":13419:13428   */\n      mod\n        /* \"#utility.yul\":13414:13428   */\n      swap1\n      pop\n        /* \"#utility.yul\":13258:13434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13440:13620   */\n    tag_397:\n        /* \"#utility.yul\":13488:13565   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13485:13486   */\n      0x00\n        /* \"#utility.yul\":13478:13566   */\n      mstore\n        /* \"#utility.yul\":13585:13589   */\n      0x11\n        /* \"#utility.yul\":13582:13583   */\n      0x04\n        /* \"#utility.yul\":13575:13590   */\n      mstore\n        /* \"#utility.yul\":13609:13613   */\n      0x24\n        /* \"#utility.yul\":13606:13607   */\n      0x00\n        /* \"#utility.yul\":13599:13614   */\n      revert\n        /* \"#utility.yul\":13626:13806   */\n    tag_403:\n        /* \"#utility.yul\":13674:13751   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13671:13672   */\n      0x00\n        /* \"#utility.yul\":13664:13752   */\n      mstore\n        /* \"#utility.yul\":13771:13775   */\n      0x12\n        /* \"#utility.yul\":13768:13769   */\n      0x04\n        /* \"#utility.yul\":13761:13776   */\n      mstore\n        /* \"#utility.yul\":13795:13799   */\n      0x24\n        /* \"#utility.yul\":13792:13793   */\n      0x00\n        /* \"#utility.yul\":13785:13800   */\n      revert\n        /* \"#utility.yul\":13812:13992   */\n    tag_427:\n        /* \"#utility.yul\":13860:13937   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13857:13858   */\n      0x00\n        /* \"#utility.yul\":13850:13938   */\n      mstore\n        /* \"#utility.yul\":13957:13961   */\n      0x22\n        /* \"#utility.yul\":13954:13955   */\n      0x04\n        /* \"#utility.yul\":13947:13962   */\n      mstore\n        /* \"#utility.yul\":13981:13985   */\n      0x24\n        /* \"#utility.yul\":13978:13979   */\n      0x00\n        /* \"#utility.yul\":13971:13986   */\n      revert\n        /* \"#utility.yul\":13998:14178   */\n    tag_236:\n        /* \"#utility.yul\":14046:14123   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14043:14044   */\n      0x00\n        /* \"#utility.yul\":14036:14124   */\n      mstore\n        /* \"#utility.yul\":14143:14147   */\n      0x32\n        /* \"#utility.yul\":14140:14141   */\n      0x04\n        /* \"#utility.yul\":14133:14148   */\n      mstore\n        /* \"#utility.yul\":14167:14171   */\n      0x24\n        /* \"#utility.yul\":14164:14165   */\n      0x00\n        /* \"#utility.yul\":14157:14172   */\n      revert\n        /* \"#utility.yul\":14184:14364   */\n    tag_224:\n        /* \"#utility.yul\":14232:14309   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14229:14230   */\n      0x00\n        /* \"#utility.yul\":14222:14310   */\n      mstore\n        /* \"#utility.yul\":14329:14333   */\n      0x41\n        /* \"#utility.yul\":14326:14327   */\n      0x04\n        /* \"#utility.yul\":14319:14334   */\n      mstore\n        /* \"#utility.yul\":14353:14357   */\n      0x24\n        /* \"#utility.yul\":14350:14351   */\n      0x00\n        /* \"#utility.yul\":14343:14358   */\n      revert\n        /* \"#utility.yul\":14370:14487   */\n    tag_271:\n        /* \"#utility.yul\":14479:14480   */\n      0x00\n        /* \"#utility.yul\":14476:14477   */\n      dup1\n        /* \"#utility.yul\":14469:14481   */\n      revert\n        /* \"#utility.yul\":14493:14610   */\n    tag_249:\n        /* \"#utility.yul\":14602:14603   */\n      0x00\n        /* \"#utility.yul\":14599:14600   */\n      dup1\n        /* \"#utility.yul\":14592:14604   */\n      revert\n        /* \"#utility.yul\":14616:14733   */\n    tag_301:\n        /* \"#utility.yul\":14725:14726   */\n      0x00\n        /* \"#utility.yul\":14722:14723   */\n      dup1\n        /* \"#utility.yul\":14715:14727   */\n      revert\n        /* \"#utility.yul\":14739:14856   */\n    tag_280:\n        /* \"#utility.yul\":14848:14849   */\n      0x00\n        /* \"#utility.yul\":14845:14846   */\n      dup1\n        /* \"#utility.yul\":14838:14850   */\n      revert\n        /* \"#utility.yul\":14862:14964   */\n    tag_342:\n        /* \"#utility.yul\":14903:14909   */\n      0x00\n        /* \"#utility.yul\":14954:14956   */\n      0x1f\n        /* \"#utility.yul\":14950:14957   */\n      not\n        /* \"#utility.yul\":14945:14947   */\n      0x1f\n        /* \"#utility.yul\":14938:14943   */\n      dup4\n        /* \"#utility.yul\":14934:14948   */\n      add\n        /* \"#utility.yul\":14930:14958   */\n      and\n        /* \"#utility.yul\":14920:14958   */\n      swap1\n      pop\n        /* \"#utility.yul\":14862:14964   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14970:15092   */\n    tag_255:\n        /* \"#utility.yul\":15043:15067   */\n      tag_452\n        /* \"#utility.yul\":15061:15066   */\n      dup2\n        /* \"#utility.yul\":15043:15067   */\n      tag_328\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":15036:15041   */\n      dup2\n        /* \"#utility.yul\":15033:15068   */\n      eq\n        /* \"#utility.yul\":15023:15086   */\n      tag_453\n      jumpi\n        /* \"#utility.yul\":15082:15083   */\n      0x00\n        /* \"#utility.yul\":15079:15080   */\n      dup1\n        /* \"#utility.yul\":15072:15084   */\n      revert\n        /* \"#utility.yul\":15023:15086   */\n    tag_453:\n        /* \"#utility.yul\":14970:15092   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15098:15214   */\n    tag_259:\n        /* \"#utility.yul\":15168:15189   */\n      tag_455\n        /* \"#utility.yul\":15183:15188   */\n      dup2\n        /* \"#utility.yul\":15168:15189   */\n      tag_332\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":15161:15166   */\n      dup2\n        /* \"#utility.yul\":15158:15190   */\n      eq\n        /* \"#utility.yul\":15148:15208   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":15204:15205   */\n      0x00\n        /* \"#utility.yul\":15201:15202   */\n      dup1\n        /* \"#utility.yul\":15194:15206   */\n      revert\n        /* \"#utility.yul\":15148:15208   */\n    tag_456:\n        /* \"#utility.yul\":15098:15214   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15220:15340   */\n    tag_263:\n        /* \"#utility.yul\":15292:15315   */\n      tag_458\n        /* \"#utility.yul\":15309:15314   */\n      dup2\n        /* \"#utility.yul\":15292:15315   */\n      tag_413\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":15285:15290   */\n      dup2\n        /* \"#utility.yul\":15282:15316   */\n      eq\n        /* \"#utility.yul\":15272:15334   */\n      tag_459\n      jumpi\n        /* \"#utility.yul\":15330:15331   */\n      0x00\n        /* \"#utility.yul\":15327:15328   */\n      dup1\n        /* \"#utility.yul\":15320:15332   */\n      revert\n        /* \"#utility.yul\":15272:15334   */\n    tag_459:\n        /* \"#utility.yul\":15220:15340   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15346:15468   */\n    tag_276:\n        /* \"#utility.yul\":15419:15443   */\n      tag_461\n        /* \"#utility.yul\":15437:15442   */\n      dup2\n        /* \"#utility.yul\":15419:15443   */\n      tag_360\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":15412:15417   */\n      dup2\n        /* \"#utility.yul\":15409:15444   */\n      eq\n        /* \"#utility.yul\":15399:15462   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":15458:15459   */\n      0x00\n        /* \"#utility.yul\":15455:15456   */\n      dup1\n        /* \"#utility.yul\":15448:15460   */\n      revert\n        /* \"#utility.yul\":15399:15462   */\n    tag_462:\n        /* \"#utility.yul\":15346:15468   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ce069e97304c16f9459b6a443fa88d03efa61632c61e1bc89d982b1d90c02f6964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_122": {
									"entryPoint": null,
									"id": 122,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_startTokenId_131": {
									"entryPoint": 161,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 342,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_memory": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 910,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 957,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4422:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:9"
															},
															"nodeType": "YulIf",
															"src": "262:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:9",
														"type": ""
													}
												],
												"src": "7:421:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:9"
															},
															"nodeType": "YulIf",
															"src": "531:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:9",
														"type": ""
													}
												],
												"src": "448:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "950:1041:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "996:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "998:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "998:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "998:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "971:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "980:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "967:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "967:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "992:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "963:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "963:32:9"
															},
															"nodeType": "YulIf",
															"src": "960:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1089:291:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1104:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1128:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1139:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1124:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1124:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1118:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1118:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1108:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1189:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1191:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1191:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1191:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1161:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1169:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1158:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1158:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "1155:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1286:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1342:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1353:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1338:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1338:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1296:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1296:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1286:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1390:292:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1405:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1429:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1440:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1425:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1425:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1419:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1419:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1409:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1491:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1493:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1493:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1493:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1463:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1471:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1460:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1460:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "1457:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1588:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1644:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1655:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1640:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1640:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1664:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1598:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1598:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1588:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1692:292:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1707:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1731:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1742:2:9",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1727:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1727:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1721:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1721:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1711:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1793:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1795:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1795:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1795:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1773:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1762:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1762:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "1759:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1890:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1946:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1957:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1942:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1942:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1966:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1900:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1900:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1890:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "904:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "915:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "927:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "935:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "943:6:9",
														"type": ""
													}
												],
												"src": "809:1182:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2038:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2048:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2058:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2058:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2048:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2107:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2115:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2087:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2087:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2022:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2031:6:9",
														"type": ""
													}
												],
												"src": "1997:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2172:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2182:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2198:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2192:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2182:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2165:6:9",
														"type": ""
													}
												],
												"src": "2132:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2280:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2385:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2387:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2387:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2387:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2357:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2365:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2354:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2354:30:9"
															},
															"nodeType": "YulIf",
															"src": "2351:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2417:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2447:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2425:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2417:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2491:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2503:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2509:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2499:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2499:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2491:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2264:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2275:4:9",
														"type": ""
													}
												],
												"src": "2213:308:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2576:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2586:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2595:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2590:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2655:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2680:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2685:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2676:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2676:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2699:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2704:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2695:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2695:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2689:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2689:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2669:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2669:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2669:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2616:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2619:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2613:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2613:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2627:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2629:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2638:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2641:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2634:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2634:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2629:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2609:3:9",
																"statements": []
															},
															"src": "2605:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2752:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2802:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2807:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2798:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2798:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2816:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2791:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2791:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2791:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2733:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2736:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2730:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2730:13:9"
															},
															"nodeType": "YulIf",
															"src": "2727:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2558:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2563:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2568:6:9",
														"type": ""
													}
												],
												"src": "2527:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2891:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2901:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2915:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2921:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2911:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2911:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2901:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2932:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2962:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2968:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2958:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2958:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2936:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3009:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3023:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3037:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3045:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3033:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3033:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3023:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2989:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2982:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2982:26:9"
															},
															"nodeType": "YulIf",
															"src": "2979:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3112:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "3126:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3126:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3126:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3076:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3099:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3107:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3096:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3096:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3073:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:38:9"
															},
															"nodeType": "YulIf",
															"src": "3070:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2875:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2884:6:9",
														"type": ""
													}
												],
												"src": "2840:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3209:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3219:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3241:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3271:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3249:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3249:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3237:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3223:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3388:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3390:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3390:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3390:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3331:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3343:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3328:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3328:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3367:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3379:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3364:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3364:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3325:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3325:62:9"
															},
															"nodeType": "YulIf",
															"src": "3322:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3426:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3430:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3419:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3419:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3419:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3195:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3203:4:9",
														"type": ""
													}
												],
												"src": "3166:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3481:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3498:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3501:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3491:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3491:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3491:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3595:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3598:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3619:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3622:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3612:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3612:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3612:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3453:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3667:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3684:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3687:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3677:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3677:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3677:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3781:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3784:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3774:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3774:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3774:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3805:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3808:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3798:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3798:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3798:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3639:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3914:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3931:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3934:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3924:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3924:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3924:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3825:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4037:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4054:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4057:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4047:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4047:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3948:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4160:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4177:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4180:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4170:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4170:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4170:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4071:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4283:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4300:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4303:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4293:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4293:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4293:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4194:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4365:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4375:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4393:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4400:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4389:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4389:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4409:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4405:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4405:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4385:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4385:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4375:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4348:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4358:6:9",
														"type": ""
													}
												],
												"src": "4317:102:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620024d7380380620024d78339818101604052810190620000379190620001d4565b82600290805190602001906200004f929190620000a6565b50816003908051906020019062000068929190620000a6565b50806004908051906020019062000081929190620000a6565b5062000092620000a160201b60201c565b60008190555050505062000411565b600090565b828054620000b49062000322565b90600052602060002090601f016020900481019282620000d8576000855562000124565b82601f10620000f357805160ff191683800117855562000124565b8280016001018555821562000124579182015b828111156200012357825182559160200191906001019062000106565b5b50905062000133919062000137565b5090565b5b808211156200015257600081600090555060010162000138565b5090565b60006200016d6200016784620002b6565b6200028d565b9050828152602081018484840111156200018c576200018b620003f1565b5b62000199848285620002ec565b509392505050565b600082601f830112620001b957620001b8620003ec565b5b8151620001cb84826020860162000156565b91505092915050565b600080600060608486031215620001f057620001ef620003fb565b5b600084015167ffffffffffffffff811115620002115762000210620003f6565b5b6200021f86828701620001a1565b935050602084015167ffffffffffffffff811115620002435762000242620003f6565b5b6200025186828701620001a1565b925050604084015167ffffffffffffffff811115620002755762000274620003f6565b5b6200028386828701620001a1565b9150509250925092565b600062000299620002ac565b9050620002a7828262000358565b919050565b6000604051905090565b600067ffffffffffffffff821115620002d457620002d3620003bd565b5b620002df8262000400565b9050602081019050919050565b60005b838110156200030c578082015181840152602081019050620002ef565b838111156200031c576000848401525b50505050565b600060028204905060018216806200033b57607f821691505b602082108114156200035257620003516200038e565b5b50919050565b620003638262000400565b810181811067ffffffffffffffff82111715620003855762000384620003bd565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6120b680620004216000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806318160ddd1461018957806323b872dd146101a757806342842e0e146101c3576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906119f3565b6102f5565b6040516101169190611bd5565b60405180910390f35b6101276103d7565b6040516101349190611bf0565b60405180910390f35b61015760048036038101906101529190611a4d565b610469565b6040516101649190611b6e565b60405180910390f35b610187600480360381019061018291906119b3565b6104e5565b005b6101916105f0565b60405161019e9190611c12565b60405180910390f35b6101c160048036038101906101bc919061189d565b610607565b005b6101dd60048036038101906101d8919061189d565b610617565b005b6101f960048036038101906101f49190611a4d565b610637565b6040516102069190611b6e565b60405180910390f35b61022960048036038101906102249190611830565b61064d565b6040516102369190611c12565b60405180910390f35b61024761071d565b6040516102549190611bf0565b60405180910390f35b61027760048036038101906102729190611973565b6107af565b005b610293600480360381019061028e91906118f0565b610927565b005b6102af60048036038101906102aa9190611a4d565b6109a3565b6040516102bc9190611bf0565b60405180910390f35b6102df60048036038101906102da919061185d565b610a42565b6040516102ec9190611bd5565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c057507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103d057506103cf82610ad6565b5b9050919050565b6060600280546103e690611e37565b80601f016020809104026020016040519081016040528092919081815260200182805461041290611e37565b801561045f5780601f106104345761010080835404028352916020019161045f565b820191906000526020600020905b81548152906001019060200180831161044257829003601f168201915b5050505050905090565b600061047482610b40565b6104aa576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104f082610637565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610558576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610577610b8e565b73ffffffffffffffffffffffffffffffffffffffff16141580156105a957506105a7816105a2610b8e565b610a42565b155b156105e0576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105eb838383610b96565b505050565b60006105fa610c48565b6001546000540303905090565b610612838383610c4d565b505050565b61063283838360405180602001604052806000815250610927565b505050565b600061064282611103565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106b5576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b60606003805461072c90611e37565b80601f016020809104026020016040519081016040528092919081815260200182805461075890611e37565b80156107a55780601f1061077a576101008083540402835291602001916107a5565b820191906000526020600020905b81548152906001019060200180831161078857829003601f168201915b5050505050905090565b6107b7610b8e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561081c576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060086000610829610b8e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166108d6610b8e565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161091b9190611bd5565b60405180910390a35050565b610932848484610c4d565b6109518373ffffffffffffffffffffffffffffffffffffffff16611392565b80156109665750610964848484846113b5565b155b1561099d576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60606109ae82610b40565b6109e4576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109ee611515565b9050600081511415610a0f5760405180602001604052806000815250610a3a565b80610a19846115a7565b604051602001610a2a929190611b4a565b6040516020818303038152906040525b915050919050565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600081610b4b610c48565b11158015610b5a575060005482105b8015610b87575060056000838152602001908152602001600020600001601c9054906101000a900460ff16155b9050919050565b600033905090565b826007600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600090565b6000610c5882611103565b90508373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614610cc3576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16610ce4610b8e565b73ffffffffffffffffffffffffffffffffffffffff161480610d135750610d1285610d0d610b8e565b610a42565b5b80610d585750610d21610b8e565b73ffffffffffffffffffffffffffffffffffffffff16610d4084610469565b73ffffffffffffffffffffffffffffffffffffffff16145b905080610d91576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610df8576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e058585856001611708565b610e1160008487610b96565b6001600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600560008581526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060006001850190506000600560008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561109157600054821461109057878160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084602001518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b505050828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46110fc858585600161170e565b5050505050565b61110b611714565b600082905080611119610c48565b11158015611128575060005481105b1561135b576000600560008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050806040015161135957600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461123d57809250505061138d565b5b60011561135857818060019003925050600560008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461135357809250505061138d565b61123e565b5b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026113db610b8e565b8786866040518563ffffffff1660e01b81526004016113fd9493929190611b89565b602060405180830381600087803b15801561141757600080fd5b505af192505050801561144857506040513d601f19601f820116820180604052508101906114459190611a20565b60015b6114c2573d8060008114611478576040519150601f19603f3d011682016040523d82523d6000602084013e61147d565b606091505b506000815114156114ba576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b60606004805461152490611e37565b80601f016020809104026020016040519081016040528092919081815260200182805461155090611e37565b801561159d5780601f106115725761010080835404028352916020019161159d565b820191906000526020600020905b81548152906001019060200180831161158057829003601f168201915b5050505050905090565b606060008214156115ef576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611703565b600082905060005b6000821461162157808061160a90611e9a565b915050600a8261161a9190611d1c565b91506115f7565b60008167ffffffffffffffff81111561163d5761163c611fd0565b5b6040519080825280601f01601f19166020018201604052801561166f5781602001600182028036833780820191505090505b5090505b600085146116fc576001826116889190611d4d565b9150600a856116979190611ee3565b60306116a39190611cc6565b60f81b8183815181106116b9576116b8611fa1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856116f59190611d1c565b9450611673565b8093505050505b919050565b50505050565b50505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681526020016000151581525090565b600061176a61176584611c52565b611c2d565b90508281526020810184848401111561178657611785612004565b5b611791848285611df5565b509392505050565b6000813590506117a881612024565b92915050565b6000813590506117bd8161203b565b92915050565b6000813590506117d281612052565b92915050565b6000815190506117e781612052565b92915050565b600082601f83011261180257611801611fff565b5b8135611812848260208601611757565b91505092915050565b60008135905061182a81612069565b92915050565b6000602082840312156118465761184561200e565b5b600061185484828501611799565b91505092915050565b600080604083850312156118745761187361200e565b5b600061188285828601611799565b925050602061189385828601611799565b9150509250929050565b6000806000606084860312156118b6576118b561200e565b5b60006118c486828701611799565b93505060206118d586828701611799565b92505060406118e68682870161181b565b9150509250925092565b6000806000806080858703121561190a5761190961200e565b5b600061191887828801611799565b945050602061192987828801611799565b935050604061193a8782880161181b565b925050606085013567ffffffffffffffff81111561195b5761195a612009565b5b611967878288016117ed565b91505092959194509250565b6000806040838503121561198a5761198961200e565b5b600061199885828601611799565b92505060206119a9858286016117ae565b9150509250929050565b600080604083850312156119ca576119c961200e565b5b60006119d885828601611799565b92505060206119e98582860161181b565b9150509250929050565b600060208284031215611a0957611a0861200e565b5b6000611a17848285016117c3565b91505092915050565b600060208284031215611a3657611a3561200e565b5b6000611a44848285016117d8565b91505092915050565b600060208284031215611a6357611a6261200e565b5b6000611a718482850161181b565b91505092915050565b611a8381611d81565b82525050565b611a9281611d93565b82525050565b6000611aa382611c83565b611aad8185611c99565b9350611abd818560208601611e04565b611ac681612013565b840191505092915050565b6000611adc82611c8e565b611ae68185611caa565b9350611af6818560208601611e04565b611aff81612013565b840191505092915050565b6000611b1582611c8e565b611b1f8185611cbb565b9350611b2f818560208601611e04565b80840191505092915050565b611b4481611deb565b82525050565b6000611b568285611b0a565b9150611b628284611b0a565b91508190509392505050565b6000602082019050611b836000830184611a7a565b92915050565b6000608082019050611b9e6000830187611a7a565b611bab6020830186611a7a565b611bb86040830185611b3b565b8181036060830152611bca8184611a98565b905095945050505050565b6000602082019050611bea6000830184611a89565b92915050565b60006020820190508181036000830152611c0a8184611ad1565b905092915050565b6000602082019050611c276000830184611b3b565b92915050565b6000611c37611c48565b9050611c438282611e69565b919050565b6000604051905090565b600067ffffffffffffffff821115611c6d57611c6c611fd0565b5b611c7682612013565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611cd182611deb565b9150611cdc83611deb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d1157611d10611f14565b5b828201905092915050565b6000611d2782611deb565b9150611d3283611deb565b925082611d4257611d41611f43565b5b828204905092915050565b6000611d5882611deb565b9150611d6383611deb565b925082821015611d7657611d75611f14565b5b828203905092915050565b6000611d8c82611dcb565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611e22578082015181840152602081019050611e07565b83811115611e31576000848401525b50505050565b60006002820490506001821680611e4f57607f821691505b60208210811415611e6357611e62611f72565b5b50919050565b611e7282612013565b810181811067ffffffffffffffff82111715611e9157611e90611fd0565b5b80604052505050565b6000611ea582611deb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ed857611ed7611f14565b5b600182019050919050565b6000611eee82611deb565b9150611ef983611deb565b925082611f0957611f08611f43565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61202d81611d81565b811461203857600080fd5b50565b61204481611d93565b811461204f57600080fd5b50565b61205b81611d9f565b811461206657600080fd5b50565b61207281611deb565b811461207d57600080fd5b5056fea2646970667358221220ce069e97304c16f9459b6a443fa88d03efa61632c61e1bc89d982b1d90c02f6964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x24D7 CODESIZE SUB DUP1 PUSH3 0x24D7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1D4 JUMP JUMPDEST DUP3 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0xA6 JUMP JUMPDEST POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0xA6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x81 SWAP3 SWAP2 SWAP1 PUSH3 0xA6 JUMP JUMPDEST POP PUSH3 0x92 PUSH3 0xA1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP PUSH3 0x411 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xB4 SWAP1 PUSH3 0x322 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xD8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x124 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xF3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x124 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x124 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x123 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x106 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x133 SWAP2 SWAP1 PUSH3 0x137 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x152 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x138 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x16D PUSH3 0x167 DUP5 PUSH3 0x2B6 JUMP JUMPDEST PUSH3 0x28D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x18C JUMPI PUSH3 0x18B PUSH3 0x3F1 JUMP JUMPDEST JUMPDEST PUSH3 0x199 DUP5 DUP3 DUP6 PUSH3 0x2EC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1B9 JUMPI PUSH3 0x1B8 PUSH3 0x3EC JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1CB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x156 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1F0 JUMPI PUSH3 0x1EF PUSH3 0x3FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x211 JUMPI PUSH3 0x210 PUSH3 0x3F6 JUMP JUMPDEST JUMPDEST PUSH3 0x21F DUP7 DUP3 DUP8 ADD PUSH3 0x1A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x243 JUMPI PUSH3 0x242 PUSH3 0x3F6 JUMP JUMPDEST JUMPDEST PUSH3 0x251 DUP7 DUP3 DUP8 ADD PUSH3 0x1A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x275 JUMPI PUSH3 0x274 PUSH3 0x3F6 JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP7 DUP3 DUP8 ADD PUSH3 0x1A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x299 PUSH3 0x2AC JUMP JUMPDEST SWAP1 POP PUSH3 0x2A7 DUP3 DUP3 PUSH3 0x358 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2D4 JUMPI PUSH3 0x2D3 PUSH3 0x3BD JUMP JUMPDEST JUMPDEST PUSH3 0x2DF DUP3 PUSH3 0x400 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x30C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2EF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x31C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x33B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x352 JUMPI PUSH3 0x351 PUSH3 0x38E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x363 DUP3 PUSH3 0x400 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x385 JUMPI PUSH3 0x384 PUSH3 0x3BD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20B6 DUP1 PUSH3 0x421 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST PUSH2 0x617 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C0 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3D0 JUMPI POP PUSH2 0x3CF DUP3 PUSH2 0xAD6 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3E6 SWAP1 PUSH2 0x1E37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0x1E37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x434 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x442 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x474 DUP3 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F0 DUP3 PUSH2 0x637 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH32 0x943F7B8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x577 PUSH2 0xB8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x5A9 JUMPI POP PUSH2 0x5A7 DUP2 PUSH2 0x5A2 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EB DUP4 DUP4 DUP4 PUSH2 0xB96 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FA PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x612 DUP4 DUP4 DUP4 PUSH2 0xC4D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x927 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x642 DUP3 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x72C SWAP1 PUSH2 0x1E37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x758 SWAP1 PUSH2 0x1E37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x77A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x788 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7B7 PUSH2 0xB8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x81C JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x829 PUSH2 0xB8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8D6 PUSH2 0xB8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x932 DUP5 DUP5 DUP5 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x951 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1392 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x966 JUMPI POP PUSH2 0x964 DUP5 DUP5 DUP5 DUP5 PUSH2 0x13B5 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9AE DUP3 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x9E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9EE PUSH2 0x1515 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA3A JUMP JUMPDEST DUP1 PUSH2 0xA19 DUP5 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA2A SWAP3 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xB4B PUSH2 0xC48 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xB5A JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xB87 JUMPI POP PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC58 DUP3 PUSH2 0x1103 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCE4 PUSH2 0xB8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD13 JUMPI POP PUSH2 0xD12 DUP6 PUSH2 0xD0D PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xD58 JUMPI POP PUSH2 0xD21 PUSH2 0xB8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD40 DUP5 PUSH2 0x469 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0xD91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE05 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1708 JUMP JUMPDEST PUSH2 0xE11 PUSH1 0x0 DUP5 DUP8 PUSH2 0xB96 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1091 JUMPI PUSH1 0x0 SLOAD DUP3 EQ PUSH2 0x1090 JUMPI DUP8 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10FC DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x170E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x110B PUSH2 0x1714 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH2 0x1119 PUSH2 0xC48 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0x1128 JUMPI POP PUSH1 0x0 SLOAD DUP2 LT JUMPDEST ISZERO PUSH2 0x135B JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x1359 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x123D JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x138D JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1358 JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1353 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x138D JUMP JUMPDEST PUSH2 0x123E JUMP JUMPDEST JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x13DB PUSH2 0xB8E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1448 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1445 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14C2 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1478 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x147D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x14BA JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1524 SWAP1 PUSH2 0x1E37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1550 SWAP1 PUSH2 0x1E37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x159D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1572 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x159D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1580 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x15EF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1621 JUMPI DUP1 DUP1 PUSH2 0x160A SWAP1 PUSH2 0x1E9A JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x161A SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST SWAP2 POP PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x163D JUMPI PUSH2 0x163C PUSH2 0x1FD0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x166F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x16FC JUMPI PUSH1 0x1 DUP3 PUSH2 0x1688 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1697 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x16A3 SWAP2 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x16B9 JUMPI PUSH2 0x16B8 PUSH2 0x1FA1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x16F5 SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST SWAP5 POP PUSH2 0x1673 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176A PUSH2 0x1765 DUP5 PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1786 JUMPI PUSH2 0x1785 PUSH2 0x2004 JUMP JUMPDEST JUMPDEST PUSH2 0x1791 DUP5 DUP3 DUP6 PUSH2 0x1DF5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17A8 DUP2 PUSH2 0x2024 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17BD DUP2 PUSH2 0x203B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D2 DUP2 PUSH2 0x2052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x17E7 DUP2 PUSH2 0x2052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1802 JUMPI PUSH2 0x1801 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1812 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1757 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x182A DUP2 PUSH2 0x2069 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1846 JUMPI PUSH2 0x1845 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1854 DUP5 DUP3 DUP6 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1874 JUMPI PUSH2 0x1873 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1882 DUP6 DUP3 DUP7 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1893 DUP6 DUP3 DUP7 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18B6 JUMPI PUSH2 0x18B5 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18C4 DUP7 DUP3 DUP8 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18D5 DUP7 DUP3 DUP8 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18E6 DUP7 DUP3 DUP8 ADD PUSH2 0x181B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x190A JUMPI PUSH2 0x1909 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1918 DUP8 DUP3 DUP9 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1929 DUP8 DUP3 DUP9 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x193A DUP8 DUP3 DUP9 ADD PUSH2 0x181B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x195B JUMPI PUSH2 0x195A PUSH2 0x2009 JUMP JUMPDEST JUMPDEST PUSH2 0x1967 DUP8 DUP3 DUP9 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x198A JUMPI PUSH2 0x1989 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1998 DUP6 DUP3 DUP7 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19A9 DUP6 DUP3 DUP7 ADD PUSH2 0x17AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19CA JUMPI PUSH2 0x19C9 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19D8 DUP6 DUP3 DUP7 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19E9 DUP6 DUP3 DUP7 ADD PUSH2 0x181B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A09 JUMPI PUSH2 0x1A08 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A17 DUP5 DUP3 DUP6 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A36 JUMPI PUSH2 0x1A35 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A44 DUP5 DUP3 DUP6 ADD PUSH2 0x17D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A63 JUMPI PUSH2 0x1A62 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A71 DUP5 DUP3 DUP6 ADD PUSH2 0x181B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A83 DUP2 PUSH2 0x1D81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A92 DUP2 PUSH2 0x1D93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA3 DUP3 PUSH2 0x1C83 JUMP JUMPDEST PUSH2 0x1AAD DUP2 DUP6 PUSH2 0x1C99 JUMP JUMPDEST SWAP4 POP PUSH2 0x1ABD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x1AC6 DUP2 PUSH2 0x2013 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADC DUP3 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x1AE6 DUP2 DUP6 PUSH2 0x1CAA JUMP JUMPDEST SWAP4 POP PUSH2 0x1AF6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x1AFF DUP2 PUSH2 0x2013 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B15 DUP3 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x1B1F DUP2 DUP6 PUSH2 0x1CBB JUMP JUMPDEST SWAP4 POP PUSH2 0x1B2F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E04 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B44 DUP2 PUSH2 0x1DEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B56 DUP3 DUP6 PUSH2 0x1B0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B62 DUP3 DUP5 PUSH2 0x1B0A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B9E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x1BAB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x1BB8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B3B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1BCA DUP2 DUP5 PUSH2 0x1A98 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BEA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C0A DUP2 DUP5 PUSH2 0x1AD1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C27 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C37 PUSH2 0x1C48 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C43 DUP3 DUP3 PUSH2 0x1E69 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C6D JUMPI PUSH2 0x1C6C PUSH2 0x1FD0 JUMP JUMPDEST JUMPDEST PUSH2 0x1C76 DUP3 PUSH2 0x2013 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD1 DUP3 PUSH2 0x1DEB JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDC DUP4 PUSH2 0x1DEB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1D11 JUMPI PUSH2 0x1D10 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D27 DUP3 PUSH2 0x1DEB JUMP JUMPDEST SWAP2 POP PUSH2 0x1D32 DUP4 PUSH2 0x1DEB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D42 JUMPI PUSH2 0x1D41 PUSH2 0x1F43 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D58 DUP3 PUSH2 0x1DEB JUMP JUMPDEST SWAP2 POP PUSH2 0x1D63 DUP4 PUSH2 0x1DEB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x1D75 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8C DUP3 PUSH2 0x1DCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E22 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E07 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E31 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E4F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1E63 JUMPI PUSH2 0x1E62 PUSH2 0x1F72 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E72 DUP3 PUSH2 0x2013 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E91 JUMPI PUSH2 0x1E90 PUSH2 0x1FD0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA5 DUP3 PUSH2 0x1DEB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1ED8 JUMPI PUSH2 0x1ED7 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EEE DUP3 PUSH2 0x1DEB JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF9 DUP4 PUSH2 0x1DEB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F09 JUMPI PUSH2 0x1F08 PUSH2 0x1F43 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x202D DUP2 PUSH2 0x1D81 JUMP JUMPDEST DUP2 EQ PUSH2 0x2038 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2044 DUP2 PUSH2 0x1D93 JUMP JUMPDEST DUP2 EQ PUSH2 0x204F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x205B DUP2 PUSH2 0x1D9F JUMP JUMPDEST DUP2 EQ PUSH2 0x2066 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2072 DUP2 PUSH2 0x1DEB JUMP JUMPDEST DUP2 EQ PUSH2 0x207D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE MOD SWAP15 SWAP8 ADDRESS 0x4C AND 0xF9 GASLIMIT SWAP12 PUSH11 0x443FA88D03EFA61632C61E SHL 0xC8 SWAP14 SWAP9 0x2B SAR SWAP1 0xC0 0x2F PUSH10 0x64736F6C634300080700 CALLER ",
							"sourceMap": "1464:20419:0:-:0;;;3400:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3494:5;3486;:13;;;;;;;;;;;;:::i;:::-;;3519:7;3509;:17;;;;;;;;;;;;:::i;:::-;;3543:4;3536;:11;;;;;;;;;;;;:::i;:::-;;3573:15;:13;;;:15;;:::i;:::-;3557:13;:31;;;;3400:195;;;1464:20419;;3687:90;3743:7;3687:90;:::o;1464:20419::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:9:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:1182::-;927:6;935;943;992:2;980:9;971:7;967:23;963:32;960:119;;;998:79;;:::i;:::-;960:119;1139:1;1128:9;1124:17;1118:24;1169:18;1161:6;1158:30;1155:117;;;1191:79;;:::i;:::-;1155:117;1296:74;1362:7;1353:6;1342:9;1338:22;1296:74;:::i;:::-;1286:84;;1089:291;1440:2;1429:9;1425:18;1419:25;1471:18;1463:6;1460:30;1457:117;;;1493:79;;:::i;:::-;1457:117;1598:74;1664:7;1655:6;1644:9;1640:22;1598:74;:::i;:::-;1588:84;;1390:292;1742:2;1731:9;1727:18;1721:25;1773:18;1765:6;1762:30;1759:117;;;1795:79;;:::i;:::-;1759:117;1900:74;1966:7;1957:6;1946:9;1942:22;1900:74;:::i;:::-;1890:84;;1692:292;809:1182;;;;;:::o;1997:129::-;2031:6;2058:20;;:::i;:::-;2048:30;;2087:33;2115:4;2107:6;2087:33;:::i;:::-;1997:129;;;:::o;2132:75::-;2165:6;2198:2;2192:9;2182:19;;2132:75;:::o;2213:308::-;2275:4;2365:18;2357:6;2354:30;2351:56;;;2387:18;;:::i;:::-;2351:56;2425:29;2447:6;2425:29;:::i;:::-;2417:37;;2509:4;2503;2499:15;2491:23;;2213:308;;;:::o;2527:307::-;2595:1;2605:113;2619:6;2616:1;2613:13;2605:113;;;2704:1;2699:3;2695:11;2689:18;2685:1;2680:3;2676:11;2669:39;2641:2;2638:1;2634:10;2629:15;;2605:113;;;2736:6;2733:1;2730:13;2727:101;;;2816:1;2807:6;2802:3;2798:16;2791:27;2727:101;2576:258;2527:307;;;:::o;2840:320::-;2884:6;2921:1;2915:4;2911:12;2901:22;;2968:1;2962:4;2958:12;2989:18;2979:81;;3045:4;3037:6;3033:17;3023:27;;2979:81;3107:2;3099:6;3096:14;3076:18;3073:38;3070:84;;;3126:18;;:::i;:::-;3070:84;2891:269;2840:320;;;:::o;3166:281::-;3249:27;3271:4;3249:27;:::i;:::-;3241:6;3237:40;3379:6;3367:10;3364:22;3343:18;3331:10;3328:34;3325:62;3322:88;;;3390:18;;:::i;:::-;3322:88;3430:10;3426:2;3419:22;3209:238;3166:281;;:::o;3453:180::-;3501:77;3498:1;3491:88;3598:4;3595:1;3588:15;3622:4;3619:1;3612:15;3639:180;3687:77;3684:1;3677:88;3784:4;3781:1;3774:15;3808:4;3805:1;3798:15;3825:117;3934:1;3931;3924:12;3948:117;4057:1;4054;4047:12;4071:117;4180:1;4177;4170:12;4194:117;4303:1;4300;4293:12;4317:102;4358:6;4409:2;4405:7;4400:2;4393:5;4389:14;4385:28;4375:38;;4317:102;;;:::o;1464:20419:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1327": {
									"entryPoint": 5902,
									"id": 1327,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1246": {
									"entryPoint": 2966,
									"id": 1246,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_443": {
									"entryPoint": 5397,
									"id": 443,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1314": {
									"entryPoint": 5896,
									"id": 1314,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1301": {
									"entryPoint": 5045,
									"id": 1301,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_660": {
									"entryPoint": 2880,
									"id": 660,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_1796": {
									"entryPoint": 2958,
									"id": 1796,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownershipOf_356": {
									"entryPoint": 4355,
									"id": 356,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_131": {
									"entryPoint": 3144,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_1029": {
									"entryPoint": 3149,
									"id": 1029,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_489": {
									"entryPoint": 1253,
									"id": 489,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_218": {
									"entryPoint": 1613,
									"id": 218,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_511": {
									"entryPoint": 1129,
									"id": 511,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_563": {
									"entryPoint": 2626,
									"id": 563,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1507": {
									"entryPoint": 5010,
									"id": 1507,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_381": {
									"entryPoint": 983,
									"id": 381,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_371": {
									"entryPoint": 1591,
									"id": 371,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_600": {
									"entryPoint": 1559,
									"id": 600,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_636": {
									"entryPoint": 2343,
									"id": 636,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_545": {
									"entryPoint": 1967,
									"id": 545,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_190": {
									"entryPoint": 757,
									"id": 190,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2032": {
									"entryPoint": 2774,
									"id": 2032,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_391": {
									"entryPoint": 1821,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1891": {
									"entryPoint": 5543,
									"id": 1891,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_434": {
									"entryPoint": 2467,
									"id": 434,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_146": {
									"entryPoint": 1520,
									"id": 146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_581": {
									"entryPoint": 1543,
									"id": 581,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5975,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 6104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6986,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7049,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7240,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 7669,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 7684,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 7907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7956,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8003,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8097,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8144,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8196,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8201,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8206,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 8228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15471:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:9"
															},
															"nodeType": "YulIf",
															"src": "249:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:9",
														"type": ""
													}
												],
												"src": "7:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:9",
														"type": ""
													}
												],
												"src": "423:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "617:84:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "627:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "649:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "636:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "665:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "665:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "603:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:9",
														"type": ""
													}
												],
												"src": "568:133:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "758:86:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "768:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "790:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "777:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "768:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "832:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "806:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "806:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "736:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "744:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "752:5:9",
														"type": ""
													}
												],
												"src": "707:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "912:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "922:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "937:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "931:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "922:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "979:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "953:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "953:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "953:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "890:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "898:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "906:5:9",
														"type": ""
													}
												],
												"src": "850:141:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1071:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1120:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1122:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1122:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1122:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1099:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1107:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1095:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1095:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1114:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1091:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1084:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:35:9"
															},
															"nodeType": "YulIf",
															"src": "1081:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1212:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1239:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1226:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1216:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1255:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1315:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1323:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1330:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1338:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1264:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1255:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1049:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1057:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1065:5:9",
														"type": ""
													}
												],
												"src": "1010:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1406:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1416:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1438:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1425:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1425:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1416:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1481:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1454:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1454:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1384:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1392:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1400:5:9",
														"type": ""
													}
												],
												"src": "1354:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1565:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1611:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1613:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1613:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1613:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1586:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1595:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1582:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1582:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1578:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1578:32:9"
															},
															"nodeType": "YulIf",
															"src": "1575:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1704:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1719:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1733:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1723:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1748:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1783:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1794:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1779:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1779:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1803:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1758:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1758:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1748:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1535:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1546:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1558:6:9",
														"type": ""
													}
												],
												"src": "1499:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1917:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1963:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1965:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1965:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1938:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1947:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1934:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1959:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1930:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1930:32:9"
															},
															"nodeType": "YulIf",
															"src": "1927:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2056:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2071:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2085:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2075:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2100:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2135:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2146:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2131:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2131:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2155:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2110:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2110:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2100:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2183:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2198:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2202:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2228:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2263:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2274:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2259:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2259:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2283:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2238:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2238:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2228:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1879:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1890:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1902:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1910:6:9",
														"type": ""
													}
												],
												"src": "1834:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2414:519:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2460:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2462:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2435:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2444:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2431:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2431:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2427:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:32:9"
															},
															"nodeType": "YulIf",
															"src": "2424:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2553:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2568:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2582:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2572:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2597:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2632:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2643:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2628:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2628:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2607:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2597:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2680:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2695:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2709:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2699:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2725:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2760:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2771:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2756:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2756:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2780:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2735:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2735:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2725:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2808:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2823:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2837:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2827:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2853:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2888:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2899:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2884:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2863:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2853:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2368:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2379:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2391:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2399:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2407:6:9",
														"type": ""
													}
												],
												"src": "2314:619:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:817:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3112:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3114:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3114:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3114:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:33:9"
															},
															"nodeType": "YulIf",
															"src": "3075:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3205:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3220:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3234:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3224:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3249:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3284:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3295:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3280:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3280:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3304:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3259:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3259:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3249:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3332:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3347:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3361:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3351:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3377:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3412:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3423:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3408:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3408:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3432:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3387:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3387:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3377:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3460:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3475:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3489:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3479:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3505:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3540:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3551:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3536:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3536:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3560:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3515:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3505:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3588:287:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3603:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3634:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3645:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3630:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3630:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3617:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3617:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3607:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3696:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3698:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3698:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3698:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3668:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3676:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3665:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3665:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "3662:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3793:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3837:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3848:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3833:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3833:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3857:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3803:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3803:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3793:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3011:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3022:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3034:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3042:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3050:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3058:6:9",
														"type": ""
													}
												],
												"src": "2939:943:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3968:388:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4014:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4016:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4016:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4016:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3989:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3998:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3985:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3985:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4010:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3981:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:32:9"
															},
															"nodeType": "YulIf",
															"src": "3978:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4107:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4122:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4136:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4126:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4151:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4186:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4197:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4182:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4182:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4206:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4161:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4161:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4151:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4234:115:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4249:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4263:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4253:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4279:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4311:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4322:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4307:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4307:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4331:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4289:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4289:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4279:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3941:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3953:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3961:6:9",
														"type": ""
													}
												],
												"src": "3888:468:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4445:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4491:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4493:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4493:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4493:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4466:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4475:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4462:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4462:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4487:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:32:9"
															},
															"nodeType": "YulIf",
															"src": "4455:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4584:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4599:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4613:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4603:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4628:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4663:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4674:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4659:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4659:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4683:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4638:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4628:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4711:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4726:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4740:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4730:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4756:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4791:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4802:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4787:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4787:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4811:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4766:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4766:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4756:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4407:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4418:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4430:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4438:6:9",
														"type": ""
													}
												],
												"src": "4362:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4907:262:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4953:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4955:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4955:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4955:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4928:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4937:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4924:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4949:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4920:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4920:32:9"
															},
															"nodeType": "YulIf",
															"src": "4917:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "5046:116:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5061:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5075:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5065:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5090:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5124:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5135:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5120:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5120:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5144:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5100:19:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5100:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5090:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4877:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4888:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4900:6:9",
														"type": ""
													}
												],
												"src": "4842:327:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5251:273:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5297:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5299:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5299:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5299:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5272:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5268:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5268:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5293:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5264:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5264:32:9"
															},
															"nodeType": "YulIf",
															"src": "5261:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "5390:127:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5405:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5419:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5409:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5434:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5479:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5490:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5475:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5475:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5499:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5444:30:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5444:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5434:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5221:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5232:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5244:6:9",
														"type": ""
													}
												],
												"src": "5175:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5596:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5642:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5644:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5644:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5644:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5617:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5626:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5613:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5613:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5638:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5609:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5609:32:9"
															},
															"nodeType": "YulIf",
															"src": "5606:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "5735:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5750:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5764:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5754:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5779:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5814:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5825:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5810:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5810:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5834:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5789:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5789:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5779:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5566:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5577:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5589:6:9",
														"type": ""
													}
												],
												"src": "5530:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5930:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5947:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5970:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5952:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5952:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5940:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5940:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5940:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5918:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5925:3:9",
														"type": ""
													}
												],
												"src": "5865:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6048:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6065:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6085:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6070:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6070:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6058:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6036:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6043:3:9",
														"type": ""
													}
												],
												"src": "5989:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6194:270:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6204:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6250:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6218:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6208:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6265:77:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6330:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6335:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6272:57:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:70:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6265:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6377:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6384:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6373:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6373:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6391:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6396:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6351:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6351:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6351:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6412:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6423:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6450:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6428:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6428:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6419:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6419:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6412:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6175:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6182:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6190:3:9",
														"type": ""
													}
												],
												"src": "6104:360:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6562:272:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6572:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6619:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6586:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6586:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6576:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6634:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6700:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6705:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6641:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6641:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6634:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6747:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6754:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6743:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6761:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6766:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6721:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6721:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6721:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6782:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6793:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6820:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6798:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6789:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6782:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6543:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6550:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6558:3:9",
														"type": ""
													}
												],
												"src": "6470:364:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6950:267:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6960:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7007:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6974:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6974:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6964:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7022:96:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7106:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7111:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7029:76:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7029:89:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7022:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7153:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7160:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7149:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7149:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7167:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7172:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7127:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7127:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7127:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7188:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7199:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7204:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6931:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6938:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6946:3:9",
														"type": ""
													}
												],
												"src": "6840:377:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7288:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7305:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7328:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7310:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7310:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7298:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7298:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7298:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7276:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7283:3:9",
														"type": ""
													}
												],
												"src": "7223:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7531:251:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7542:102:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7631:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7640:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7549:81:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7549:95:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7542:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7654:102:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7743:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7752:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7661:81:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7661:95:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7654:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7766:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7773:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7766:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7502:3:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7508:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7516:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7527:3:9",
														"type": ""
													}
												],
												"src": "7347:435:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7886:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7896:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7908:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7919:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7904:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7904:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7896:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7976:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7989:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8000:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7985:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7985:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7932:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7932:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7932:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7858:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7870:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7881:4:9",
														"type": ""
													}
												],
												"src": "7788:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8216:440:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8226:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8238:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8249:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8234:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8226:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8307:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8320:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8331:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8316:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8316:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8263:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8263:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8263:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8388:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8401:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8412:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8397:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8397:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8344:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8344:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8344:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8470:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8483:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8494:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8479:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8479:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8426:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8426:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8426:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8519:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8530:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8515:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8515:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8539:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8545:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8535:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8535:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8508:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8508:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8508:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8565:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8635:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8644:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8573:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8573:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8565:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8164:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8176:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8184:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8192:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8200:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8211:4:9",
														"type": ""
													}
												],
												"src": "8016:640:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8754:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8764:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8776:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8787:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8772:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8764:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8838:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8851:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8862:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8847:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8847:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8800:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8800:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8800:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8726:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8738:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8749:4:9",
														"type": ""
													}
												],
												"src": "8662:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8996:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9006:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9018:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9029:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9014:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9006:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9053:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9064:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9049:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9049:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9072:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9078:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9068:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9068:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9042:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9042:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9042:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9098:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9170:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9179:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9106:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9106:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9098:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8968:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8980:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8991:4:9",
														"type": ""
													}
												],
												"src": "8878:313:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9295:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9305:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9317:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9328:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9313:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9305:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9385:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9398:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9409:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9394:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9394:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9341:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9341:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9341:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9267:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9279:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9290:4:9",
														"type": ""
													}
												],
												"src": "9197:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9466:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9476:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "9486:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9476:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9535:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9543:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "9515:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9515:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9515:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9450:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9459:6:9",
														"type": ""
													}
												],
												"src": "9425:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9600:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9610:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9626:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9620:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9620:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9610:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9593:6:9",
														"type": ""
													}
												],
												"src": "9560:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9707:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9812:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9814:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9814:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9814:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9784:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9792:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9781:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9781:30:9"
															},
															"nodeType": "YulIf",
															"src": "9778:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9844:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9874:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "9852:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9852:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9844:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9918:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9930:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9936:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9926:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9926:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9918:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9691:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9702:4:9",
														"type": ""
													}
												],
												"src": "9641:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10012:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10023:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10039:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10033:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10033:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10023:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9995:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10005:6:9",
														"type": ""
													}
												],
												"src": "9954:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10117:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10128:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10144:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10138:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10138:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10128:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10100:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10110:6:9",
														"type": ""
													}
												],
												"src": "10058:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10258:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10275:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10280:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10268:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10268:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10268:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10296:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10315:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10320:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10311:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10311:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10296:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10230:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10235:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10246:11:9",
														"type": ""
													}
												],
												"src": "10163:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10433:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10450:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10455:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10443:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10443:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10443:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10471:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10490:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10495:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10486:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10486:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10471:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10405:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10410:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10421:11:9",
														"type": ""
													}
												],
												"src": "10337:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10626:34:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10636:18:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10651:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10636:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10598:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10603:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10614:11:9",
														"type": ""
													}
												],
												"src": "10512:148:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10710:261:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10720:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10743:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10725:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10725:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10720:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10754:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10777:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10759:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10759:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10754:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10917:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10919:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10919:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10919:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10838:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10845:66:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10913:1:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10841:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10841:74:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10835:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10835:81:9"
															},
															"nodeType": "YulIf",
															"src": "10832:107:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10949:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10960:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10963:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10956:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10956:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10949:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10697:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10700:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10706:3:9",
														"type": ""
													}
												],
												"src": "10666:305:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11019:143:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11029:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11052:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11034:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11034:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11029:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11063:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11086:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11068:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11068:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11063:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11110:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11112:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11112:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11112:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11107:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11100:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11100:9:9"
															},
															"nodeType": "YulIf",
															"src": "11097:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11142:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11151:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11154:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11147:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11147:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11142:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11008:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11011:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11017:1:9",
														"type": ""
													}
												],
												"src": "10977:185:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11213:146:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11223:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11246:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11228:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11228:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11223:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11257:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11280:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11262:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11262:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11257:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11304:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11306:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11306:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11306:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11298:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11301:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11295:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11295:8:9"
															},
															"nodeType": "YulIf",
															"src": "11292:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11336:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11348:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11351:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11344:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11344:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11336:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11199:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11202:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11208:4:9",
														"type": ""
													}
												],
												"src": "11168:191:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11410:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11420:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11449:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11431:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11431:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11420:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11392:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11402:7:9",
														"type": ""
													}
												],
												"src": "11365:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11509:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11519:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11544:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11537:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11537:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11530:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11530:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11519:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11491:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11501:7:9",
														"type": ""
													}
												],
												"src": "11467:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11607:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11617:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11632:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11639:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11628:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11628:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11617:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11589:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11599:7:9",
														"type": ""
													}
												],
												"src": "11563:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11763:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11773:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11788:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11795:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11784:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11784:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11773:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11745:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11755:7:9",
														"type": ""
													}
												],
												"src": "11718:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11895:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11905:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11916:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11905:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11877:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11887:7:9",
														"type": ""
													}
												],
												"src": "11850:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11984:103:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "12007:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "12012:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12017:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "11994:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11994:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11994:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "12065:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12070:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12061:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12061:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12079:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12054:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12054:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12054:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11966:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11971:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11976:6:9",
														"type": ""
													}
												],
												"src": "11933:154:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12142:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12152:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12161:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12156:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12221:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12246:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12251:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12242:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12242:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "12265:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12270:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12261:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12261:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12255:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12255:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12235:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12235:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12235:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12182:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12185:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12179:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12179:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12193:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12195:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12204:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12207:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12200:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12200:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12195:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12175:3:9",
																"statements": []
															},
															"src": "12171:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12318:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12368:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12373:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12364:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12364:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12382:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12357:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12357:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12357:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12299:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12302:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12296:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12296:13:9"
															},
															"nodeType": "YulIf",
															"src": "12293:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12124:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "12129:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12134:6:9",
														"type": ""
													}
												],
												"src": "12093:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12457:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12467:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12481:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12487:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12477:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12477:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12467:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12498:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12528:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12534:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12524:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12524:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12502:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12575:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12589:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "12603:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12611:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12599:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12599:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12589:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12555:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12548:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12548:26:9"
															},
															"nodeType": "YulIf",
															"src": "12545:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12678:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "12692:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12692:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12692:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12642:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12665:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12673:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12662:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12662:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12639:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12639:38:9"
															},
															"nodeType": "YulIf",
															"src": "12636:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12441:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12450:6:9",
														"type": ""
													}
												],
												"src": "12406:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12775:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12785:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "12807:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "12837:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12815:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12815:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12803:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12803:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "12789:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12954:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12956:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12956:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12956:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12897:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12909:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12894:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12894:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12933:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12945:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12930:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12930:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12891:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12891:62:9"
															},
															"nodeType": "YulIf",
															"src": "12888:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12992:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "12996:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12985:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12985:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12985:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12761:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12769:4:9",
														"type": ""
													}
												],
												"src": "12732:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13062:190:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13072:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13099:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13081:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13081:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13072:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13195:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13197:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13197:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13197:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13120:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13127:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13117:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13117:77:9"
															},
															"nodeType": "YulIf",
															"src": "13114:103:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13226:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13237:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13244:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13233:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13233:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13226:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13048:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13058:3:9",
														"type": ""
													}
												],
												"src": "13019:233:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13292:142:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13302:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13325:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13307:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13307:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13302:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13336:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13359:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13341:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13341:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13336:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13383:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "13385:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13385:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13385:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13380:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13373:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13373:9:9"
															},
															"nodeType": "YulIf",
															"src": "13370:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13414:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13423:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13426:1:9"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "13419:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13419:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13414:1:9"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13281:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13284:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13290:1:9",
														"type": ""
													}
												],
												"src": "13258:176:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13468:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13485:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13488:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13478:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13478:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13478:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13582:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13585:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13575:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13575:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13575:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13606:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13609:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13599:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13599:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13599:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13440:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13654:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13671:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13674:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13664:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13664:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13664:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13768:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13771:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13761:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13761:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13761:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13792:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13795:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13785:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13785:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13785:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "13626:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13840:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13857:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13860:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13850:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13850:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13850:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13954:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13957:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13947:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13947:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13947:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13978:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13981:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13971:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13971:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13971:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "13812:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14026:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14043:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14046:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14036:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14036:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14036:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14140:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14143:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14133:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14133:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14133:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14164:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14167:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14157:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14157:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14157:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "13998:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14212:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14229:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14232:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14222:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14222:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14222:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14326:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14329:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14319:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14319:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14319:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14350:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14353:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14343:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14343:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14343:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14184:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14459:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14476:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14479:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14469:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14469:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14469:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "14370:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14582:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14599:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14602:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14592:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14592:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14592:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "14493:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14705:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14722:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14725:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14715:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14715:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14715:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "14616:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14828:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14845:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14848:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14838:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14838:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14838:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "14739:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14910:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14920:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14938:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14945:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14934:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14934:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14954:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14950:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14950:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14930:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14930:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "14920:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14893:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "14903:6:9",
														"type": ""
													}
												],
												"src": "14862:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15013:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15070:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15079:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15082:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15072:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15072:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15072:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15036:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15061:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "15043:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15043:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15033:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15033:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15026:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15026:43:9"
															},
															"nodeType": "YulIf",
															"src": "15023:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15006:5:9",
														"type": ""
													}
												],
												"src": "14970:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15138:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15192:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15201:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15204:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15194:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15194:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15194:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15161:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15183:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "15168:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15168:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15158:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15158:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15151:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15151:40:9"
															},
															"nodeType": "YulIf",
															"src": "15148:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15131:5:9",
														"type": ""
													}
												],
												"src": "15098:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15262:78:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15318:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15327:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15330:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15320:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15320:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15320:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15285:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15309:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "15292:16:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15292:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15282:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15282:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15275:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15275:42:9"
															},
															"nodeType": "YulIf",
															"src": "15272:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15255:5:9",
														"type": ""
													}
												],
												"src": "15220:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15389:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15446:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15455:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15458:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15448:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15448:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15448:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15412:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15437:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15419:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15419:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15409:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15409:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15402:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15402:43:9"
															},
															"nodeType": "YulIf",
															"src": "15399:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15382:5:9",
														"type": ""
													}
												],
												"src": "15346:122:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806318160ddd1461018957806323b872dd146101a757806342842e0e146101c3576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906119f3565b6102f5565b6040516101169190611bd5565b60405180910390f35b6101276103d7565b6040516101349190611bf0565b60405180910390f35b61015760048036038101906101529190611a4d565b610469565b6040516101649190611b6e565b60405180910390f35b610187600480360381019061018291906119b3565b6104e5565b005b6101916105f0565b60405161019e9190611c12565b60405180910390f35b6101c160048036038101906101bc919061189d565b610607565b005b6101dd60048036038101906101d8919061189d565b610617565b005b6101f960048036038101906101f49190611a4d565b610637565b6040516102069190611b6e565b60405180910390f35b61022960048036038101906102249190611830565b61064d565b6040516102369190611c12565b60405180910390f35b61024761071d565b6040516102549190611bf0565b60405180910390f35b61027760048036038101906102729190611973565b6107af565b005b610293600480360381019061028e91906118f0565b610927565b005b6102af60048036038101906102aa9190611a4d565b6109a3565b6040516102bc9190611bf0565b60405180910390f35b6102df60048036038101906102da919061185d565b610a42565b6040516102ec9190611bd5565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c057507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103d057506103cf82610ad6565b5b9050919050565b6060600280546103e690611e37565b80601f016020809104026020016040519081016040528092919081815260200182805461041290611e37565b801561045f5780601f106104345761010080835404028352916020019161045f565b820191906000526020600020905b81548152906001019060200180831161044257829003601f168201915b5050505050905090565b600061047482610b40565b6104aa576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104f082610637565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610558576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610577610b8e565b73ffffffffffffffffffffffffffffffffffffffff16141580156105a957506105a7816105a2610b8e565b610a42565b155b156105e0576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105eb838383610b96565b505050565b60006105fa610c48565b6001546000540303905090565b610612838383610c4d565b505050565b61063283838360405180602001604052806000815250610927565b505050565b600061064282611103565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106b5576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b60606003805461072c90611e37565b80601f016020809104026020016040519081016040528092919081815260200182805461075890611e37565b80156107a55780601f1061077a576101008083540402835291602001916107a5565b820191906000526020600020905b81548152906001019060200180831161078857829003601f168201915b5050505050905090565b6107b7610b8e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561081c576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060086000610829610b8e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166108d6610b8e565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161091b9190611bd5565b60405180910390a35050565b610932848484610c4d565b6109518373ffffffffffffffffffffffffffffffffffffffff16611392565b80156109665750610964848484846113b5565b155b1561099d576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60606109ae82610b40565b6109e4576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109ee611515565b9050600081511415610a0f5760405180602001604052806000815250610a3a565b80610a19846115a7565b604051602001610a2a929190611b4a565b6040516020818303038152906040525b915050919050565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600081610b4b610c48565b11158015610b5a575060005482105b8015610b87575060056000838152602001908152602001600020600001601c9054906101000a900460ff16155b9050919050565b600033905090565b826007600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600090565b6000610c5882611103565b90508373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614610cc3576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16610ce4610b8e565b73ffffffffffffffffffffffffffffffffffffffff161480610d135750610d1285610d0d610b8e565b610a42565b5b80610d585750610d21610b8e565b73ffffffffffffffffffffffffffffffffffffffff16610d4084610469565b73ffffffffffffffffffffffffffffffffffffffff16145b905080610d91576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610df8576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e058585856001611708565b610e1160008487610b96565b6001600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600560008581526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060006001850190506000600560008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561109157600054821461109057878160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084602001518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b505050828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46110fc858585600161170e565b5050505050565b61110b611714565b600082905080611119610c48565b11158015611128575060005481105b1561135b576000600560008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050806040015161135957600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461123d57809250505061138d565b5b60011561135857818060019003925050600560008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461135357809250505061138d565b61123e565b5b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026113db610b8e565b8786866040518563ffffffff1660e01b81526004016113fd9493929190611b89565b602060405180830381600087803b15801561141757600080fd5b505af192505050801561144857506040513d601f19601f820116820180604052508101906114459190611a20565b60015b6114c2573d8060008114611478576040519150601f19603f3d011682016040523d82523d6000602084013e61147d565b606091505b506000815114156114ba576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b60606004805461152490611e37565b80601f016020809104026020016040519081016040528092919081815260200182805461155090611e37565b801561159d5780601f106115725761010080835404028352916020019161159d565b820191906000526020600020905b81548152906001019060200180831161158057829003601f168201915b5050505050905090565b606060008214156115ef576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611703565b600082905060005b6000821461162157808061160a90611e9a565b915050600a8261161a9190611d1c565b91506115f7565b60008167ffffffffffffffff81111561163d5761163c611fd0565b5b6040519080825280601f01601f19166020018201604052801561166f5781602001600182028036833780820191505090505b5090505b600085146116fc576001826116889190611d4d565b9150600a856116979190611ee3565b60306116a39190611cc6565b60f81b8183815181106116b9576116b8611fa1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856116f59190611d1c565b9450611673565b8093505050505b919050565b50505050565b50505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681526020016000151581525090565b600061176a61176584611c52565b611c2d565b90508281526020810184848401111561178657611785612004565b5b611791848285611df5565b509392505050565b6000813590506117a881612024565b92915050565b6000813590506117bd8161203b565b92915050565b6000813590506117d281612052565b92915050565b6000815190506117e781612052565b92915050565b600082601f83011261180257611801611fff565b5b8135611812848260208601611757565b91505092915050565b60008135905061182a81612069565b92915050565b6000602082840312156118465761184561200e565b5b600061185484828501611799565b91505092915050565b600080604083850312156118745761187361200e565b5b600061188285828601611799565b925050602061189385828601611799565b9150509250929050565b6000806000606084860312156118b6576118b561200e565b5b60006118c486828701611799565b93505060206118d586828701611799565b92505060406118e68682870161181b565b9150509250925092565b6000806000806080858703121561190a5761190961200e565b5b600061191887828801611799565b945050602061192987828801611799565b935050604061193a8782880161181b565b925050606085013567ffffffffffffffff81111561195b5761195a612009565b5b611967878288016117ed565b91505092959194509250565b6000806040838503121561198a5761198961200e565b5b600061199885828601611799565b92505060206119a9858286016117ae565b9150509250929050565b600080604083850312156119ca576119c961200e565b5b60006119d885828601611799565b92505060206119e98582860161181b565b9150509250929050565b600060208284031215611a0957611a0861200e565b5b6000611a17848285016117c3565b91505092915050565b600060208284031215611a3657611a3561200e565b5b6000611a44848285016117d8565b91505092915050565b600060208284031215611a6357611a6261200e565b5b6000611a718482850161181b565b91505092915050565b611a8381611d81565b82525050565b611a9281611d93565b82525050565b6000611aa382611c83565b611aad8185611c99565b9350611abd818560208601611e04565b611ac681612013565b840191505092915050565b6000611adc82611c8e565b611ae68185611caa565b9350611af6818560208601611e04565b611aff81612013565b840191505092915050565b6000611b1582611c8e565b611b1f8185611cbb565b9350611b2f818560208601611e04565b80840191505092915050565b611b4481611deb565b82525050565b6000611b568285611b0a565b9150611b628284611b0a565b91508190509392505050565b6000602082019050611b836000830184611a7a565b92915050565b6000608082019050611b9e6000830187611a7a565b611bab6020830186611a7a565b611bb86040830185611b3b565b8181036060830152611bca8184611a98565b905095945050505050565b6000602082019050611bea6000830184611a89565b92915050565b60006020820190508181036000830152611c0a8184611ad1565b905092915050565b6000602082019050611c276000830184611b3b565b92915050565b6000611c37611c48565b9050611c438282611e69565b919050565b6000604051905090565b600067ffffffffffffffff821115611c6d57611c6c611fd0565b5b611c7682612013565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611cd182611deb565b9150611cdc83611deb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d1157611d10611f14565b5b828201905092915050565b6000611d2782611deb565b9150611d3283611deb565b925082611d4257611d41611f43565b5b828204905092915050565b6000611d5882611deb565b9150611d6383611deb565b925082821015611d7657611d75611f14565b5b828203905092915050565b6000611d8c82611dcb565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611e22578082015181840152602081019050611e07565b83811115611e31576000848401525b50505050565b60006002820490506001821680611e4f57607f821691505b60208210811415611e6357611e62611f72565b5b50919050565b611e7282612013565b810181811067ffffffffffffffff82111715611e9157611e90611fd0565b5b80604052505050565b6000611ea582611deb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ed857611ed7611f14565b5b600182019050919050565b6000611eee82611deb565b9150611ef983611deb565b925082611f0957611f08611f43565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61202d81611d81565b811461203857600080fd5b50565b61204481611d93565b811461204f57600080fd5b50565b61205b81611d9f565b811461206657600080fd5b50565b61207281611deb565b811461207d57600080fd5b5056fea2646970667358221220ce069e97304c16f9459b6a443fa88d03efa61632c61e1bc89d982b1d90c02f6964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23F JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C3 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST PUSH2 0x617 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C0 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3D0 JUMPI POP PUSH2 0x3CF DUP3 PUSH2 0xAD6 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3E6 SWAP1 PUSH2 0x1E37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0x1E37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x434 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x442 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x474 DUP3 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F0 DUP3 PUSH2 0x637 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH32 0x943F7B8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x577 PUSH2 0xB8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x5A9 JUMPI POP PUSH2 0x5A7 DUP2 PUSH2 0x5A2 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EB DUP4 DUP4 DUP4 PUSH2 0xB96 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FA PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x612 DUP4 DUP4 DUP4 PUSH2 0xC4D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x927 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x642 DUP3 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x72C SWAP1 PUSH2 0x1E37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x758 SWAP1 PUSH2 0x1E37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x77A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x788 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7B7 PUSH2 0xB8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x81C JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x829 PUSH2 0xB8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8D6 PUSH2 0xB8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x932 DUP5 DUP5 DUP5 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x951 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1392 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x966 JUMPI POP PUSH2 0x964 DUP5 DUP5 DUP5 DUP5 PUSH2 0x13B5 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9AE DUP3 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x9E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9EE PUSH2 0x1515 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA3A JUMP JUMPDEST DUP1 PUSH2 0xA19 DUP5 PUSH2 0x15A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA2A SWAP3 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xB4B PUSH2 0xC48 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xB5A JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xB87 JUMPI POP PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC58 DUP3 PUSH2 0x1103 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCE4 PUSH2 0xB8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD13 JUMPI POP PUSH2 0xD12 DUP6 PUSH2 0xD0D PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xD58 JUMPI POP PUSH2 0xD21 PUSH2 0xB8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD40 DUP5 PUSH2 0x469 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0xD91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE05 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1708 JUMP JUMPDEST PUSH2 0xE11 PUSH1 0x0 DUP5 DUP8 PUSH2 0xB96 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1091 JUMPI PUSH1 0x0 SLOAD DUP3 EQ PUSH2 0x1090 JUMPI DUP8 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10FC DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x170E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x110B PUSH2 0x1714 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH2 0x1119 PUSH2 0xC48 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0x1128 JUMPI POP PUSH1 0x0 SLOAD DUP2 LT JUMPDEST ISZERO PUSH2 0x135B JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x1359 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x123D JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x138D JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1358 JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1353 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x138D JUMP JUMPDEST PUSH2 0x123E JUMP JUMPDEST JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x13DB PUSH2 0xB8E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1448 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1445 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14C2 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1478 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x147D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x14BA JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1524 SWAP1 PUSH2 0x1E37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1550 SWAP1 PUSH2 0x1E37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x159D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1572 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x159D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1580 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x15EF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1621 JUMPI DUP1 DUP1 PUSH2 0x160A SWAP1 PUSH2 0x1E9A JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x161A SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST SWAP2 POP PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x163D JUMPI PUSH2 0x163C PUSH2 0x1FD0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x166F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x16FC JUMPI PUSH1 0x1 DUP3 PUSH2 0x1688 SWAP2 SWAP1 PUSH2 0x1D4D JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1697 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x16A3 SWAP2 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x16B9 JUMPI PUSH2 0x16B8 PUSH2 0x1FA1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x16F5 SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST SWAP5 POP PUSH2 0x1673 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176A PUSH2 0x1765 DUP5 PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1786 JUMPI PUSH2 0x1785 PUSH2 0x2004 JUMP JUMPDEST JUMPDEST PUSH2 0x1791 DUP5 DUP3 DUP6 PUSH2 0x1DF5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17A8 DUP2 PUSH2 0x2024 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17BD DUP2 PUSH2 0x203B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D2 DUP2 PUSH2 0x2052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x17E7 DUP2 PUSH2 0x2052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1802 JUMPI PUSH2 0x1801 PUSH2 0x1FFF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1812 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1757 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x182A DUP2 PUSH2 0x2069 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1846 JUMPI PUSH2 0x1845 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1854 DUP5 DUP3 DUP6 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1874 JUMPI PUSH2 0x1873 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1882 DUP6 DUP3 DUP7 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1893 DUP6 DUP3 DUP7 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18B6 JUMPI PUSH2 0x18B5 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18C4 DUP7 DUP3 DUP8 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18D5 DUP7 DUP3 DUP8 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18E6 DUP7 DUP3 DUP8 ADD PUSH2 0x181B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x190A JUMPI PUSH2 0x1909 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1918 DUP8 DUP3 DUP9 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1929 DUP8 DUP3 DUP9 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x193A DUP8 DUP3 DUP9 ADD PUSH2 0x181B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x195B JUMPI PUSH2 0x195A PUSH2 0x2009 JUMP JUMPDEST JUMPDEST PUSH2 0x1967 DUP8 DUP3 DUP9 ADD PUSH2 0x17ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x198A JUMPI PUSH2 0x1989 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1998 DUP6 DUP3 DUP7 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19A9 DUP6 DUP3 DUP7 ADD PUSH2 0x17AE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19CA JUMPI PUSH2 0x19C9 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19D8 DUP6 DUP3 DUP7 ADD PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19E9 DUP6 DUP3 DUP7 ADD PUSH2 0x181B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A09 JUMPI PUSH2 0x1A08 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A17 DUP5 DUP3 DUP6 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A36 JUMPI PUSH2 0x1A35 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A44 DUP5 DUP3 DUP6 ADD PUSH2 0x17D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A63 JUMPI PUSH2 0x1A62 PUSH2 0x200E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A71 DUP5 DUP3 DUP6 ADD PUSH2 0x181B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A83 DUP2 PUSH2 0x1D81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A92 DUP2 PUSH2 0x1D93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA3 DUP3 PUSH2 0x1C83 JUMP JUMPDEST PUSH2 0x1AAD DUP2 DUP6 PUSH2 0x1C99 JUMP JUMPDEST SWAP4 POP PUSH2 0x1ABD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x1AC6 DUP2 PUSH2 0x2013 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADC DUP3 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x1AE6 DUP2 DUP6 PUSH2 0x1CAA JUMP JUMPDEST SWAP4 POP PUSH2 0x1AF6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x1AFF DUP2 PUSH2 0x2013 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B15 DUP3 PUSH2 0x1C8E JUMP JUMPDEST PUSH2 0x1B1F DUP2 DUP6 PUSH2 0x1CBB JUMP JUMPDEST SWAP4 POP PUSH2 0x1B2F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E04 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B44 DUP2 PUSH2 0x1DEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B56 DUP3 DUP6 PUSH2 0x1B0A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B62 DUP3 DUP5 PUSH2 0x1B0A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B9E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x1BAB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x1BB8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B3B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1BCA DUP2 DUP5 PUSH2 0x1A98 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BEA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C0A DUP2 DUP5 PUSH2 0x1AD1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C27 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C37 PUSH2 0x1C48 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C43 DUP3 DUP3 PUSH2 0x1E69 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C6D JUMPI PUSH2 0x1C6C PUSH2 0x1FD0 JUMP JUMPDEST JUMPDEST PUSH2 0x1C76 DUP3 PUSH2 0x2013 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD1 DUP3 PUSH2 0x1DEB JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDC DUP4 PUSH2 0x1DEB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1D11 JUMPI PUSH2 0x1D10 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D27 DUP3 PUSH2 0x1DEB JUMP JUMPDEST SWAP2 POP PUSH2 0x1D32 DUP4 PUSH2 0x1DEB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D42 JUMPI PUSH2 0x1D41 PUSH2 0x1F43 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D58 DUP3 PUSH2 0x1DEB JUMP JUMPDEST SWAP2 POP PUSH2 0x1D63 DUP4 PUSH2 0x1DEB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x1D75 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8C DUP3 PUSH2 0x1DCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E22 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E07 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E31 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E4F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1E63 JUMPI PUSH2 0x1E62 PUSH2 0x1F72 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E72 DUP3 PUSH2 0x2013 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E91 JUMPI PUSH2 0x1E90 PUSH2 0x1FD0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA5 DUP3 PUSH2 0x1DEB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1ED8 JUMPI PUSH2 0x1ED7 PUSH2 0x1F14 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EEE DUP3 PUSH2 0x1DEB JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF9 DUP4 PUSH2 0x1DEB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F09 JUMPI PUSH2 0x1F08 PUSH2 0x1F43 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x202D DUP2 PUSH2 0x1D81 JUMP JUMPDEST DUP2 EQ PUSH2 0x2038 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2044 DUP2 PUSH2 0x1D93 JUMP JUMPDEST DUP2 EQ PUSH2 0x204F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x205B DUP2 PUSH2 0x1D9F JUMP JUMPDEST DUP2 EQ PUSH2 0x2066 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2072 DUP2 PUSH2 0x1DEB JUMP JUMPDEST DUP2 EQ PUSH2 0x207D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE MOD SWAP15 SWAP8 ADDRESS 0x4C AND 0xF9 GASLIMIT SWAP12 PUSH11 0x443FA88D03EFA61632C61E SHL 0xC8 SWAP14 SWAP9 0x2B SAR SWAP1 0xC0 0x2F PUSH10 0x64736F6C634300080700 CALLER ",
							"sourceMap": "1464:20419:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4635:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7663:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9123:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8700:362;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3906:297;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9962:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10192:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7478:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4994:203;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7825:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9390:282;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10437:359;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7993:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9738:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4635:300;4737:4;4787:25;4772:40;;;:11;:40;;;;:104;;;;4843:33;4828:48;;;:11;:48;;;;4772:104;:156;;;;4892:36;4916:11;4892:23;:36::i;:::-;4772:156;4753:175;;4635:300;;;:::o;7663:98::-;7717:13;7749:5;7742:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7663:98;:::o;9123:200::-;9191:7;9215:16;9223:7;9215;:16::i;:::-;9210:64;;9240:34;;;;;;;;;;;;;;9210:64;9292:15;:24;9308:7;9292:24;;;;;;;;;;;;;;;;;;;;;9285:31;;9123:200;;;:::o;8700:362::-;8772:13;8788:24;8804:7;8788:15;:24::i;:::-;8772:40;;8832:5;8826:11;;:2;:11;;;8822:48;;;8846:24;;;;;;;;;;;;;;8822:48;8901:5;8885:21;;:12;:10;:12::i;:::-;:21;;;;:63;;;;;8911:37;8928:5;8935:12;:10;:12::i;:::-;8911:16;:37::i;:::-;8910:38;8885:63;8881:136;;;8971:35;;;;;;;;;;;;;;8881:136;9027:28;9036:2;9040:7;9049:5;9027:8;:28::i;:::-;8762:300;8700:362;;:::o;3906:297::-;3950:7;4171:15;:13;:15::i;:::-;4156:12;;4140:13;;:28;:46;4133:53;;3906:297;:::o;9962:164::-;10091:28;10101:4;10107:2;10111:7;10091:9;:28::i;:::-;9962:164;;;:::o;10192:179::-;10325:39;10342:4;10348:2;10352:7;10325:39;;;;;;;;;;;;:16;:39::i;:::-;10192:179;;;:::o;7478:123::-;7542:7;7568:21;7581:7;7568:12;:21::i;:::-;:26;;;7561:33;;7478:123;;;:::o;4994:203::-;5058:7;5098:1;5081:19;;:5;:19;;;5077:60;;;5109:28;;;;;;;;;;;;;;5077:60;5162:12;:19;5175:5;5162:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;5154:36;;5147:43;;4994:203;;;:::o;7825:102::-;7881:13;7913:7;7906:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7825:102;:::o;9390:282::-;9500:12;:10;:12::i;:::-;9488:24;;:8;:24;;;9484:54;;;9521:17;;;;;;;;;;;;;;9484:54;9594:8;9549:18;:32;9568:12;:10;:12::i;:::-;9549:32;;;;;;;;;;;;;;;:42;9582:8;9549:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;9646:8;9617:48;;9632:12;:10;:12::i;:::-;9617:48;;;9656:8;9617:48;;;;;;:::i;:::-;;;;;;;;9390:282;;:::o;10437:359::-;10598:28;10608:4;10614:2;10618:7;10598:9;:28::i;:::-;10640:15;:2;:13;;;:15::i;:::-;:76;;;;;10660:56;10691:4;10697:2;10701:7;10710:5;10660:30;:56::i;:::-;10659:57;10640:76;10636:154;;;10739:40;;;;;;;;;;;;;;10636:154;10437:359;;;;:::o;7993:313::-;8066:13;8096:16;8104:7;8096;:16::i;:::-;8091:59;;8121:29;;;;;;;;;;;;;;8091:59;8161:21;8185:10;:8;:10::i;:::-;8161:34;;8237:1;8218:7;8212:21;:26;;:87;;;;;;;;;;;;;;;;;8265:7;8274:18;:7;:16;:18::i;:::-;8248:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8212:87;8205:94;;;7993:313;;;:::o;9738:162::-;9835:4;9858:18;:25;9877:5;9858:25;;;;;;;;;;;;;;;:35;9884:8;9858:35;;;;;;;;;;;;;;;;;;;;;;;;;9851:42;;9738:162;;;;:::o;829:155:7:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;11042:172:0:-;11099:4;11141:7;11122:15;:13;:15::i;:::-;:26;;:53;;;;;11162:13;;11152:7;:23;11122:53;:85;;;;;11180:11;:20;11192:7;11180:20;;;;;;;;;;;:27;;;;;;;;;;;;11179:28;11122:85;11115:92;;11042:172;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;18982:189:0:-;19119:2;19092:15;:24;19108:7;19092:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;19156:7;19152:2;19136:28;;19145:5;19136:28;;;;;;;;;;;;18982:189;;;:::o;3687:90::-;3743:7;3687:90;:::o;14052:2082::-;14162:35;14200:21;14213:7;14200:12;:21::i;:::-;14162:59;;14258:4;14236:26;;:13;:18;;;:26;;;14232:67;;14271:28;;;;;;;;;;;;;;14232:67;14310:22;14352:4;14336:20;;:12;:10;:12::i;:::-;:20;;;:72;;;;14372:36;14389:4;14395:12;:10;:12::i;:::-;14372:16;:36::i;:::-;14336:72;:124;;;;14448:12;:10;:12::i;:::-;14424:36;;:20;14436:7;14424:11;:20::i;:::-;:36;;;14336:124;14310:151;;14477:17;14472:66;;14503:35;;;;;;;;;;;;;;14472:66;14566:1;14552:16;;:2;:16;;;14548:52;;;14577:23;;;;;;;;;;;;;;14548:52;14611:43;14633:4;14639:2;14643:7;14652:1;14611:21;:43::i;:::-;14716:35;14733:1;14737:7;14746:4;14716:8;:35::i;:::-;15071:1;15041:12;:18;15054:4;15041:18;;;;;;;;;;;;;;;:26;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15114:1;15086:12;:16;15099:2;15086:16;;;;;;;;;;;;;;;:24;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15130:31;15164:11;:20;15176:7;15164:20;;;;;;;;;;;15130:54;;15214:2;15198:8;:13;;;:18;;;;;;;;;;;;;;;;;;15263:15;15230:8;:23;;;:49;;;;;;;;;;;;;;;;;;15527:19;15559:1;15549:7;:11;15527:33;;15574:31;15608:11;:24;15620:11;15608:24;;;;;;;;;;;15574:58;;15675:1;15650:27;;:8;:13;;;;;;;;;;;;:27;;;15646:377;;;15857:13;;15842:11;:28;15838:171;;15910:4;15894:8;:13;;;:20;;;;;;;;;;;;;;;;;;15962:13;:28;;;15936:8;:23;;;:54;;;;;;;;;;;;;;;;;;15838:171;15646:377;15017:1016;;;16067:7;16063:2;16048:27;;16057:4;16048:27;;;;;;;;;;;;16085:42;16106:4;16112:2;16116:7;16125:1;16085:20;:42::i;:::-;14152:1982;;14052:2082;;;:::o;6337:1084::-;6399:21;;:::i;:::-;6432:12;6447:7;6432:22;;6512:4;6493:15;:13;:15::i;:::-;:23;;:47;;;;;6527:13;;6520:4;:20;6493:47;6489:868;;;6560:31;6594:11;:17;6606:4;6594:17;;;;;;;;;;;6560:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6634:9;:16;;;6629:714;;6704:1;6678:28;;:9;:14;;;:28;;;6674:99;;6741:9;6734:16;;;;;;6674:99;7070:255;7077:4;7070:255;;;7109:6;;;;;;;;7153:11;:17;7165:4;7153:17;;;;;;;;;;;7141:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7226:1;7200:28;;:9;:14;;;:28;;;7196:107;;7267:9;7260:16;;;;;;7196:107;7070:255;;;6629:714;6542:815;6489:868;7383:31;;;;;;;;;;;;;;6337:1084;;;;:::o;1175:320:4:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;19652:650:0:-;19810:4;19846:2;19830:36;;;19867:12;:10;:12::i;:::-;19881:4;19887:7;19896:5;19830:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;19826:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20078:1;20061:6;:13;:18;20057:229;;;20106:40;;;;;;;;;;;;;;20057:229;20246:6;20240:13;20231:6;20227:2;20223:15;20216:38;19826:470;19958:45;;;19948:55;;;:6;:55;;;;19941:62;;;19652:650;;;;;;:::o;8547:94::-;8598:13;8630:4;8623:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8547:94;:::o;328:703:6:-;384:13;610:1;601:5;:10;597:51;;;627:10;;;;;;;;;;;;;;;;;;;;;597:51;657:12;672:5;657:20;;687:14;711:75;726:1;718:4;:9;711:75;;743:8;;;;;:::i;:::-;;;;773:2;765:10;;;;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;795:39;;844:150;860:1;851:5;:10;844:150;;887:1;877:11;;;;;:::i;:::-;;;953:2;945:5;:10;;;;:::i;:::-;932:2;:24;;;;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;981:2;972:11;;;;;:::i;:::-;;;844:150;;;1017:6;1003:21;;;;;328:703;;;;:::o;20933:154:0:-;;;;;:::o;21728:153::-;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:410:9:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;707:137;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;850:141;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:122;;1122:79;;:::i;:::-;1081:122;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;1010:338;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1354:139;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:119;;;1613:79;;:::i;:::-;1575:119;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1499:329;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:119;;;1965:79;;:::i;:::-;1927:119;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1834:474;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:119;;;2462:79;;:::i;:::-;2424:119;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2314:619;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:120;;;3114:79;;:::i;:::-;3075:120;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:117;;;3698:79;;:::i;:::-;3662:117;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;2939:943;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3888:468;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:119;;;4493:79;;:::i;:::-;4455:119;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4362:474;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:119;;;4955:79;;:::i;:::-;4917:119;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4842:327;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:119;;;5299:79;;:::i;:::-;5261:119;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5175:349;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:119;;;5644:79;;:::i;:::-;5606:119;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5530:329;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5865:118;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;5989:109;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;6104:360;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;6470:364;;;;:::o;6840:377::-;6946:3;6974:39;7007:5;6974:39;:::i;:::-;7029:89;7111:6;7106:3;7029:89;:::i;:::-;7022:96;;7127:52;7172:6;7167:3;7160:4;7153:5;7149:16;7127:52;:::i;:::-;7204:6;7199:3;7195:16;7188:23;;6950:267;6840:377;;;;:::o;7223:118::-;7310:24;7328:5;7310:24;:::i;:::-;7305:3;7298:37;7223:118;;:::o;7347:435::-;7527:3;7549:95;7640:3;7631:6;7549:95;:::i;:::-;7542:102;;7661:95;7752:3;7743:6;7661:95;:::i;:::-;7654:102;;7773:3;7766:10;;7347:435;;;;;:::o;7788:222::-;7881:4;7919:2;7908:9;7904:18;7896:26;;7932:71;8000:1;7989:9;7985:17;7976:6;7932:71;:::i;:::-;7788:222;;;;:::o;8016:640::-;8211:4;8249:3;8238:9;8234:19;8226:27;;8263:71;8331:1;8320:9;8316:17;8307:6;8263:71;:::i;:::-;8344:72;8412:2;8401:9;8397:18;8388:6;8344:72;:::i;:::-;8426;8494:2;8483:9;8479:18;8470:6;8426:72;:::i;:::-;8545:9;8539:4;8535:20;8530:2;8519:9;8515:18;8508:48;8573:76;8644:4;8635:6;8573:76;:::i;:::-;8565:84;;8016:640;;;;;;;:::o;8662:210::-;8749:4;8787:2;8776:9;8772:18;8764:26;;8800:65;8862:1;8851:9;8847:17;8838:6;8800:65;:::i;:::-;8662:210;;;;:::o;8878:313::-;8991:4;9029:2;9018:9;9014:18;9006:26;;9078:9;9072:4;9068:20;9064:1;9053:9;9049:17;9042:47;9106:78;9179:4;9170:6;9106:78;:::i;:::-;9098:86;;8878:313;;;;:::o;9197:222::-;9290:4;9328:2;9317:9;9313:18;9305:26;;9341:71;9409:1;9398:9;9394:17;9385:6;9341:71;:::i;:::-;9197:222;;;;:::o;9425:129::-;9459:6;9486:20;;:::i;:::-;9476:30;;9515:33;9543:4;9535:6;9515:33;:::i;:::-;9425:129;;;:::o;9560:75::-;9593:6;9626:2;9620:9;9610:19;;9560:75;:::o;9641:307::-;9702:4;9792:18;9784:6;9781:30;9778:56;;;9814:18;;:::i;:::-;9778:56;9852:29;9874:6;9852:29;:::i;:::-;9844:37;;9936:4;9930;9926:15;9918:23;;9641:307;;;:::o;9954:98::-;10005:6;10039:5;10033:12;10023:22;;9954:98;;;:::o;10058:99::-;10110:6;10144:5;10138:12;10128:22;;10058:99;;;:::o;10163:168::-;10246:11;10280:6;10275:3;10268:19;10320:4;10315:3;10311:14;10296:29;;10163:168;;;;:::o;10337:169::-;10421:11;10455:6;10450:3;10443:19;10495:4;10490:3;10486:14;10471:29;;10337:169;;;;:::o;10512:148::-;10614:11;10651:3;10636:18;;10512:148;;;;:::o;10666:305::-;10706:3;10725:20;10743:1;10725:20;:::i;:::-;10720:25;;10759:20;10777:1;10759:20;:::i;:::-;10754:25;;10913:1;10845:66;10841:74;10838:1;10835:81;10832:107;;;10919:18;;:::i;:::-;10832:107;10963:1;10960;10956:9;10949:16;;10666:305;;;;:::o;10977:185::-;11017:1;11034:20;11052:1;11034:20;:::i;:::-;11029:25;;11068:20;11086:1;11068:20;:::i;:::-;11063:25;;11107:1;11097:35;;11112:18;;:::i;:::-;11097:35;11154:1;11151;11147:9;11142:14;;10977:185;;;;:::o;11168:191::-;11208:4;11228:20;11246:1;11228:20;:::i;:::-;11223:25;;11262:20;11280:1;11262:20;:::i;:::-;11257:25;;11301:1;11298;11295:8;11292:34;;;11306:18;;:::i;:::-;11292:34;11351:1;11348;11344:9;11336:17;;11168:191;;;;:::o;11365:96::-;11402:7;11431:24;11449:5;11431:24;:::i;:::-;11420:35;;11365:96;;;:::o;11467:90::-;11501:7;11544:5;11537:13;11530:21;11519:32;;11467:90;;;:::o;11563:149::-;11599:7;11639:66;11632:5;11628:78;11617:89;;11563:149;;;:::o;11718:126::-;11755:7;11795:42;11788:5;11784:54;11773:65;;11718:126;;;:::o;11850:77::-;11887:7;11916:5;11905:16;;11850:77;;;:::o;11933:154::-;12017:6;12012:3;12007;11994:30;12079:1;12070:6;12065:3;12061:16;12054:27;11933:154;;;:::o;12093:307::-;12161:1;12171:113;12185:6;12182:1;12179:13;12171:113;;;12270:1;12265:3;12261:11;12255:18;12251:1;12246:3;12242:11;12235:39;12207:2;12204:1;12200:10;12195:15;;12171:113;;;12302:6;12299:1;12296:13;12293:101;;;12382:1;12373:6;12368:3;12364:16;12357:27;12293:101;12142:258;12093:307;;;:::o;12406:320::-;12450:6;12487:1;12481:4;12477:12;12467:22;;12534:1;12528:4;12524:12;12555:18;12545:81;;12611:4;12603:6;12599:17;12589:27;;12545:81;12673:2;12665:6;12662:14;12642:18;12639:38;12636:84;;;12692:18;;:::i;:::-;12636:84;12457:269;12406:320;;;:::o;12732:281::-;12815:27;12837:4;12815:27;:::i;:::-;12807:6;12803:40;12945:6;12933:10;12930:22;12909:18;12897:10;12894:34;12891:62;12888:88;;;12956:18;;:::i;:::-;12888:88;12996:10;12992:2;12985:22;12775:238;12732:281;;:::o;13019:233::-;13058:3;13081:24;13099:5;13081:24;:::i;:::-;13072:33;;13127:66;13120:5;13117:77;13114:103;;;13197:18;;:::i;:::-;13114:103;13244:1;13237:5;13233:13;13226:20;;13019:233;;;:::o;13258:176::-;13290:1;13307:20;13325:1;13307:20;:::i;:::-;13302:25;;13341:20;13359:1;13341:20;:::i;:::-;13336:25;;13380:1;13370:35;;13385:18;;:::i;:::-;13370:35;13426:1;13423;13419:9;13414:14;;13258:176;;;;:::o;13440:180::-;13488:77;13485:1;13478:88;13585:4;13582:1;13575:15;13609:4;13606:1;13599:15;13626:180;13674:77;13671:1;13664:88;13771:4;13768:1;13761:15;13795:4;13792:1;13785:15;13812:180;13860:77;13857:1;13850:88;13957:4;13954:1;13947:15;13981:4;13978:1;13971:15;13998:180;14046:77;14043:1;14036:88;14143:4;14140:1;14133:15;14167:4;14164:1;14157:15;14184:180;14232:77;14229:1;14222:88;14329:4;14326:1;14319:15;14353:4;14350:1;14343:15;14370:117;14479:1;14476;14469:12;14493:117;14602:1;14599;14592:12;14616:117;14725:1;14722;14715:12;14739:117;14848:1;14845;14838:12;14862:102;14903:6;14954:2;14950:7;14945:2;14938:5;14934:14;14930:28;14920:38;;14862:102;;;:::o;14970:122::-;15043:24;15061:5;15043:24;:::i;:::-;15036:5;15033:35;15023:63;;15082:1;15079;15072:12;15023:63;14970:122;:::o;15098:116::-;15168:21;15183:5;15168:21;:::i;:::-;15161:5;15158:32;15148:60;;15204:1;15201;15194:12;15148:60;15098:116;:::o;15220:120::-;15292:23;15309:5;15292:23;:::i;:::-;15285:5;15282:34;15272:62;;15330:1;15327;15320:12;15272:62;15220:120;:::o;15346:122::-;15419:24;15437:5;15419:24;:::i;:::-;15412:5;15409:35;15399:63;;15458:1;15455;15448:12;15399:63;15346:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1674800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2972",
								"getApproved(uint256)": "7458",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "797",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4621",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_approve(address,uint256,address)": "26292",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4499",
								"_getAux(address)": "infinite",
								"_mint(address,uint256,bytes memory,bool)": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_startTokenId()": "15",
								"_totalMinted()": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3494,
									"end": 3499,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3486,
									"end": 3491,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3486,
									"end": 3499,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3486,
									"end": 3499,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3486,
									"end": 3499,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3486,
									"end": 3499,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3486,
									"end": 3499,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3486,
									"end": 3499,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3486,
									"end": 3499,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3486,
									"end": 3499,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3486,
									"end": 3499,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3486,
									"end": 3499,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3486,
									"end": 3499,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3486,
									"end": 3499,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3486,
									"end": 3499,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3486,
									"end": 3499,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3486,
									"end": 3499,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3486,
									"end": 3499,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3519,
									"end": 3526,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3509,
									"end": 3516,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3509,
									"end": 3526,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3509,
									"end": 3526,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3509,
									"end": 3526,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3509,
									"end": 3526,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3509,
									"end": 3526,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3509,
									"end": 3526,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3509,
									"end": 3526,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3509,
									"end": 3526,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3509,
									"end": 3526,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3509,
									"end": 3526,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3509,
									"end": 3526,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3509,
									"end": 3526,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3509,
									"end": 3526,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3509,
									"end": 3526,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3509,
									"end": 3526,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3509,
									"end": 3526,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3543,
									"end": 3547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3536,
									"end": 3540,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3536,
									"end": 3547,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3536,
									"end": 3547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3536,
									"end": 3547,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3536,
									"end": 3547,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3536,
									"end": 3547,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3536,
									"end": 3547,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3536,
									"end": 3547,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3536,
									"end": 3547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 3536,
									"end": 3547,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3536,
									"end": 3547,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3536,
									"end": 3547,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3536,
									"end": 3547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3536,
									"end": 3547,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3536,
									"end": 3547,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 3536,
									"end": 3547,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3536,
									"end": 3547,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3573,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 3573,
									"end": 3586,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3573,
									"end": 3586,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3573,
									"end": 3586,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3573,
									"end": 3588,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3573,
									"end": 3588,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3573,
									"end": 3588,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3573,
									"end": 3588,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 3573,
									"end": 3588,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3570,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3557,
									"end": 3588,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3588,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3588,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3557,
									"end": 3588,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3400,
									"end": 3595,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3687,
									"end": 3777,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3687,
									"end": 3777,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3743,
									"end": 3750,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3687,
									"end": 3777,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3687,
									"end": 3777,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1991,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 809,
									"end": 1991,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 927,
									"end": 933,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 935,
									"end": 941,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 943,
									"end": 949,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 992,
									"end": 994,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 980,
									"end": 989,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 971,
									"end": 978,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 967,
									"end": 990,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 963,
									"end": 995,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 960,
									"end": 1079,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 960,
									"end": 1079,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 960,
									"end": 1079,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 960,
									"end": 1079,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 960,
									"end": 1079,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1139,
									"end": 1140,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1128,
									"end": 1137,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1124,
									"end": 1141,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1118,
									"end": 1142,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1187,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1161,
									"end": 1167,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1158,
									"end": 1188,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 1272,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 1272,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1155,
									"end": 1272,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1191,
									"end": 1270,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1191,
									"end": 1270,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1191,
									"end": 1270,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1191,
									"end": 1270,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1191,
									"end": 1270,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 1272,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1155,
									"end": 1272,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1296,
									"end": 1370,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1296,
									"end": 1370,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1296,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1286,
									"end": 1370,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1286,
									"end": 1370,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1089,
									"end": 1380,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1440,
									"end": 1442,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1438,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1425,
									"end": 1443,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1419,
									"end": 1444,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1471,
									"end": 1489,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1463,
									"end": 1469,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1460,
									"end": 1490,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1457,
									"end": 1574,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1457,
									"end": 1574,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1457,
									"end": 1574,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1493,
									"end": 1572,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1493,
									"end": 1572,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1493,
									"end": 1572,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1493,
									"end": 1572,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1493,
									"end": 1572,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1457,
									"end": 1574,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1457,
									"end": 1574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1598,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1664,
									"end": 1671,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1655,
									"end": 1661,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1644,
									"end": 1653,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1640,
									"end": 1662,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1598,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1598,
									"end": 1672,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1598,
									"end": 1672,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1598,
									"end": 1672,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1588,
									"end": 1672,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1588,
									"end": 1672,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1390,
									"end": 1682,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1742,
									"end": 1744,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1731,
									"end": 1740,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1727,
									"end": 1745,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 1746,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1773,
									"end": 1791,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1765,
									"end": 1771,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1762,
									"end": 1792,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1876,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1876,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1759,
									"end": 1876,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1795,
									"end": 1874,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1795,
									"end": 1874,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1795,
									"end": 1874,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1795,
									"end": 1874,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1795,
									"end": 1874,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1876,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1759,
									"end": 1876,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1900,
									"end": 1974,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1966,
									"end": 1973,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1957,
									"end": 1963,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 1955,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 1964,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1900,
									"end": 1974,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1900,
									"end": 1974,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1900,
									"end": 1974,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1900,
									"end": 1974,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1890,
									"end": 1974,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1890,
									"end": 1974,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1692,
									"end": 1984,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1991,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1991,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1991,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1991,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1991,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 809,
									"end": 1991,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1997,
									"end": 2126,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1997,
									"end": 2126,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2031,
									"end": 2037,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2058,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2058,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2058,
									"end": 2078,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2058,
									"end": 2078,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2058,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2048,
									"end": 2078,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2048,
									"end": 2078,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2087,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2115,
									"end": 2119,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2107,
									"end": 2113,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2087,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 2087,
									"end": 2120,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2087,
									"end": 2120,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2087,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1997,
									"end": 2126,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1997,
									"end": 2126,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1997,
									"end": 2126,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1997,
									"end": 2126,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2132,
									"end": 2207,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2132,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2165,
									"end": 2171,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2198,
									"end": 2200,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2192,
									"end": 2201,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2132,
									"end": 2207,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2132,
									"end": 2207,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2213,
									"end": 2521,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 2213,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2275,
									"end": 2279,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2365,
									"end": 2383,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2357,
									"end": 2363,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2354,
									"end": 2384,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2351,
									"end": 2407,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2351,
									"end": 2407,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2351,
									"end": 2407,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2387,
									"end": 2405,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2387,
									"end": 2405,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 2387,
									"end": 2405,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2387,
									"end": 2405,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2387,
									"end": 2405,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2351,
									"end": 2407,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2351,
									"end": 2407,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2425,
									"end": 2454,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2447,
									"end": 2453,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2425,
									"end": 2454,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2425,
									"end": 2454,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2425,
									"end": 2454,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2425,
									"end": 2454,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2417,
									"end": 2454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2417,
									"end": 2454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2509,
									"end": 2513,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2503,
									"end": 2507,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2499,
									"end": 2514,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2521,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2521,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2521,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2521,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2527,
									"end": 2834,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 2527,
									"end": 2834,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2595,
									"end": 2596,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2619,
									"end": 2625,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2616,
									"end": 2617,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2613,
									"end": 2626,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2704,
									"end": 2705,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2699,
									"end": 2702,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2695,
									"end": 2706,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2689,
									"end": 2707,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2685,
									"end": 2686,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2680,
									"end": 2683,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2676,
									"end": 2687,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2669,
									"end": 2708,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2641,
									"end": 2643,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2634,
									"end": 2644,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2629,
									"end": 2644,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2629,
									"end": 2644,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2605,
									"end": 2718,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2736,
									"end": 2742,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2733,
									"end": 2734,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2730,
									"end": 2743,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2727,
									"end": 2828,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2727,
									"end": 2828,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2727,
									"end": 2828,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2816,
									"end": 2817,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2807,
									"end": 2813,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2802,
									"end": 2805,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2798,
									"end": 2814,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2791,
									"end": 2818,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2727,
									"end": 2828,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2727,
									"end": 2828,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2576,
									"end": 2834,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2527,
									"end": 2834,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2527,
									"end": 2834,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2527,
									"end": 2834,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2527,
									"end": 2834,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2840,
									"end": 3160,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2840,
									"end": 3160,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2884,
									"end": 2890,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2921,
									"end": 2922,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2915,
									"end": 2919,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2911,
									"end": 2923,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 2901,
									"end": 2923,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2901,
									"end": 2923,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2968,
									"end": 2969,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2962,
									"end": 2966,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2958,
									"end": 2970,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2989,
									"end": 3007,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2979,
									"end": 3060,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 2979,
									"end": 3060,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3045,
									"end": 3049,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 3037,
									"end": 3043,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3033,
									"end": 3050,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3023,
									"end": 3050,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3023,
									"end": 3050,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2979,
									"end": 3060,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 2979,
									"end": 3060,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3107,
									"end": 3109,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3096,
									"end": 3110,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3076,
									"end": 3094,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3073,
									"end": 3111,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3070,
									"end": 3154,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3070,
									"end": 3154,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 3070,
									"end": 3154,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3126,
									"end": 3144,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 3126,
									"end": 3144,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 3126,
									"end": 3144,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3126,
									"end": 3144,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 3126,
									"end": 3144,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3070,
									"end": 3154,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 3070,
									"end": 3154,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2891,
									"end": 3160,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2840,
									"end": 3160,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2840,
									"end": 3160,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2840,
									"end": 3160,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2840,
									"end": 3160,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 3166,
									"end": 3447,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3166,
									"end": 3447,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3249,
									"end": 3276,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3271,
									"end": 3275,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3249,
									"end": 3276,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 3249,
									"end": 3276,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3249,
									"end": 3276,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3249,
									"end": 3276,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3241,
									"end": 3247,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3277,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3367,
									"end": 3377,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3364,
									"end": 3386,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3343,
									"end": 3361,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3331,
									"end": 3341,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3328,
									"end": 3362,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3325,
									"end": 3387,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3322,
									"end": 3410,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3322,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3322,
									"end": 3410,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3390,
									"end": 3408,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3322,
									"end": 3410,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3322,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3430,
									"end": 3440,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3426,
									"end": 3428,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3419,
									"end": 3441,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3209,
									"end": 3447,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3166,
									"end": 3447,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3166,
									"end": 3447,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3166,
									"end": 3447,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 3453,
									"end": 3633,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 3453,
									"end": 3633,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3501,
									"end": 3578,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3498,
									"end": 3499,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3491,
									"end": 3579,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3598,
									"end": 3602,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3595,
									"end": 3596,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3588,
									"end": 3603,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3622,
									"end": 3626,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3619,
									"end": 3620,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3612,
									"end": 3627,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3639,
									"end": 3819,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 3639,
									"end": 3819,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3687,
									"end": 3764,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3684,
									"end": 3685,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3677,
									"end": 3765,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3784,
									"end": 3788,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 3781,
									"end": 3782,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3774,
									"end": 3789,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3808,
									"end": 3812,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3805,
									"end": 3806,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3798,
									"end": 3813,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3825,
									"end": 3942,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 3825,
									"end": 3942,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3934,
									"end": 3935,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3931,
									"end": 3932,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3924,
									"end": 3936,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3948,
									"end": 4065,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 3948,
									"end": 4065,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4057,
									"end": 4058,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4054,
									"end": 4055,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4047,
									"end": 4059,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 4071,
									"end": 4188,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 4071,
									"end": 4188,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4180,
									"end": 4181,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4177,
									"end": 4178,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4170,
									"end": 4182,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 4194,
									"end": 4311,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 4194,
									"end": 4311,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4303,
									"end": 4304,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4300,
									"end": 4301,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4293,
									"end": 4305,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 4317,
									"end": 4419,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 4317,
									"end": 4419,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4358,
									"end": 4364,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4409,
									"end": 4411,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4405,
									"end": 4412,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4400,
									"end": 4402,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4393,
									"end": 4398,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4389,
									"end": 4403,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4385,
									"end": 4413,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4375,
									"end": 4413,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4375,
									"end": 4413,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4317,
									"end": 4419,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4317,
									"end": 4419,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4317,
									"end": 4419,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4317,
									"end": 4419,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1464,
									"end": 21883,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ce069e97304c16f9459b6a443fa88d03efa61632c61e1bc89d982b1d90c02f6964736f6c63430008070033",
									".code": [
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1464,
											"end": 21883,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4812,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4772,
											"end": 4812,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4772,
											"end": 4812,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4812,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4772,
											"end": 4812,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4812,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4772,
											"end": 4876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4828,
											"end": 4876,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4828,
											"end": 4876,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4828,
											"end": 4876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4828,
											"end": 4839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4828,
											"end": 4876,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4828,
											"end": 4876,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4828,
											"end": 4876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4828,
											"end": 4876,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4876,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4772,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4772,
											"end": 4928,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4916,
											"end": 4927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4892,
											"end": 4928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4892,
											"end": 4928,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4892,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4772,
											"end": 4928,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4772,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4935,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7749,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7761,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9191,
											"end": 9198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9215,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9223,
											"end": 9230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9215,
											"end": 9222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9215,
											"end": 9231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9215,
											"end": 9231,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9215,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9210,
											"end": 9274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9240,
											"end": 9274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9240,
											"end": 9274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9240,
											"end": 9274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9240,
											"end": 9274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9274,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9274,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9210,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9307,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9308,
											"end": 9315,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9285,
											"end": 9316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9285,
											"end": 9316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9323,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8772,
											"end": 8785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8788,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 8804,
											"end": 8811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8788,
											"end": 8803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 8788,
											"end": 8812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8788,
											"end": 8812,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 8788,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8772,
											"end": 8812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8772,
											"end": 8812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8832,
											"end": 8837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8826,
											"end": 8837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8826,
											"end": 8837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8826,
											"end": 8828,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8826,
											"end": 8837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8826,
											"end": 8837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8826,
											"end": 8837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8822,
											"end": 8870,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8822,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8822,
											"end": 8870,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 8870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8846,
											"end": 8870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 8870,
											"name": "PUSH",
											"source": 0,
											"value": "943F7B8C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8846,
											"end": 8870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 8870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 8870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8846,
											"end": 8870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 8870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8846,
											"end": 8870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 8870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 8870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 8870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 8870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8846,
											"end": 8870,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8822,
											"end": 8870,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8822,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8885,
											"end": 8906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8885,
											"end": 8906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8885,
											"end": 8897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 8885,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8885,
											"end": 8897,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8885,
											"end": 8897,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 8885,
											"end": 8897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8885,
											"end": 8906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8885,
											"end": 8906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8885,
											"end": 8906,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8885,
											"end": 8906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8911,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 8928,
											"end": 8933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8935,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 8935,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8935,
											"end": 8947,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8935,
											"end": 8947,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 8935,
											"end": 8947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8911,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8911,
											"end": 8948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8911,
											"end": 8948,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 8911,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8910,
											"end": 8948,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 8885,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 8881,
											"end": 9017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8971,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8971,
											"end": 9006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8971,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8971,
											"end": 9006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8971,
											"end": 9006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8971,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8971,
											"end": 9006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8971,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8971,
											"end": 9006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8971,
											"end": 9006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8971,
											"end": 9006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8971,
											"end": 9006,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8971,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8971,
											"end": 9006,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9017,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 8881,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9027,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9036,
											"end": 9038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9040,
											"end": 9047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9054,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9027,
											"end": 9035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9027,
											"end": 9055,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9027,
											"end": 9055,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9027,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8762,
											"end": 9062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 9062,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3950,
											"end": 3957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4171,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4171,
											"end": 4186,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4186,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4171,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4156,
											"end": 4168,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4156,
											"end": 4168,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4140,
											"end": 4153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4153,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4140,
											"end": 4168,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4140,
											"end": 4186,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4133,
											"end": 4186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4133,
											"end": 4186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 4203,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10091,
											"end": 10119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10101,
											"end": 10105,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10107,
											"end": 10109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10111,
											"end": 10118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10091,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10091,
											"end": 10119,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10091,
											"end": 10119,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10091,
											"end": 10119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9962,
											"end": 10126,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10325,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10342,
											"end": 10346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10348,
											"end": 10350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10352,
											"end": 10359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10325,
											"end": 10364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10325,
											"end": 10364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10325,
											"end": 10364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10325,
											"end": 10364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10325,
											"end": 10364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10325,
											"end": 10364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10325,
											"end": 10364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10325,
											"end": 10364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10325,
											"end": 10364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10325,
											"end": 10364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10325,
											"end": 10364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10325,
											"end": 10364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10325,
											"end": 10341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 10325,
											"end": 10364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10325,
											"end": 10364,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10325,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10192,
											"end": 10371,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7542,
											"end": 7549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 7581,
											"end": 7588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7568,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7568,
											"end": 7589,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7568,
											"end": 7589,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 7568,
											"end": 7589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7568,
											"end": 7594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7568,
											"end": 7594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7561,
											"end": 7594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7561,
											"end": 7594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7601,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5081,
											"end": 5100,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5081,
											"end": 5100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5081,
											"end": 5086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5081,
											"end": 5100,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5081,
											"end": 5100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5081,
											"end": 5100,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5137,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5077,
											"end": 5137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5109,
											"end": 5137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5137,
											"name": "PUSH",
											"source": 0,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5109,
											"end": 5137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5137,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5109,
											"end": 5137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5109,
											"end": 5137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5137,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5077,
											"end": 5137,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5077,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5174,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5175,
											"end": 5180,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5181,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5189,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5162,
											"end": 5189,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5189,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5162,
											"end": 5189,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5190,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5154,
											"end": 5190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5147,
											"end": 5190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5147,
											"end": 5190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5197,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7881,
											"end": 7894,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7913,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7927,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9500,
											"end": 9512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 9500,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9500,
											"end": 9512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9500,
											"end": 9512,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 9500,
											"end": 9512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9488,
											"end": 9512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9488,
											"end": 9512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9488,
											"end": 9496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9488,
											"end": 9512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9488,
											"end": 9512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9488,
											"end": 9512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 9484,
											"end": 9538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9521,
											"end": 9538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9521,
											"end": 9538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9521,
											"end": 9538,
											"name": "PUSH",
											"source": 0,
											"value": "B06307DB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9521,
											"end": 9538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9521,
											"end": 9538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9521,
											"end": 9538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9521,
											"end": 9538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9521,
											"end": 9538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9521,
											"end": 9538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9521,
											"end": 9538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9521,
											"end": 9538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9521,
											"end": 9538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9521,
											"end": 9538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9521,
											"end": 9538,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9484,
											"end": 9538,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 9484,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9594,
											"end": 9602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9567,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9549,
											"end": 9581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9568,
											"end": 9580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 9568,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9568,
											"end": 9580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9568,
											"end": 9580,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 9568,
											"end": 9580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9549,
											"end": 9581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9549,
											"end": 9581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9549,
											"end": 9581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9549,
											"end": 9581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9581,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9582,
											"end": 9590,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9549,
											"end": 9602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9646,
											"end": 9654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9632,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 9632,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9632,
											"end": 9644,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9632,
											"end": 9644,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 9632,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 9656,
											"end": 9664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9617,
											"end": 9665,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9390,
											"end": 9672,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10598,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 10608,
											"end": 10612,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 10616,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10598,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10598,
											"end": 10626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10598,
											"end": 10626,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 10598,
											"end": 10626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10640,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10640,
											"end": 10642,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10640,
											"end": 10653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10640,
											"end": 10653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10640,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 10640,
											"end": 10655,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10640,
											"end": 10655,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10640,
											"end": 10655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10640,
											"end": 10716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10640,
											"end": 10716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10640,
											"end": 10716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 10640,
											"end": 10716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10640,
											"end": 10716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10660,
											"end": 10716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 10691,
											"end": 10695,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10697,
											"end": 10699,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10701,
											"end": 10708,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10710,
											"end": 10715,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10660,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 10660,
											"end": 10716,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10660,
											"end": 10716,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 10660,
											"end": 10716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10659,
											"end": 10716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10640,
											"end": 10716,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 10640,
											"end": 10716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 10636,
											"end": 10790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10739,
											"end": 10779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10779,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10739,
											"end": 10779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10779,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10739,
											"end": 10779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10739,
											"end": 10779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10779,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10779,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10790,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 10636,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10796,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8066,
											"end": 8079,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8096,
											"end": 8112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 8104,
											"end": 8111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 8096,
											"end": 8112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8096,
											"end": 8112,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 8096,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8091,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 8091,
											"end": 8150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8121,
											"end": 8150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8150,
											"name": "PUSH",
											"source": 0,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8121,
											"end": 8150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8121,
											"end": 8150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8121,
											"end": 8150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8121,
											"end": 8150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8091,
											"end": 8150,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 8091,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8185,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 8185,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8185,
											"end": 8195,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8185,
											"end": 8195,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 8185,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8237,
											"end": 8238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8218,
											"end": 8225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8212,
											"end": 8233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8212,
											"end": 8238,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8212,
											"end": 8238,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8265,
											"end": 8272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8274,
											"end": 8281,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8248,
											"end": 8293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 8212,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 8306,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9835,
											"end": 9839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9858,
											"end": 9876,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9877,
											"end": 9882,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9858,
											"end": 9883,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9884,
											"end": 9892,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9851,
											"end": 9893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9738,
											"end": 9900,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11042,
											"end": 11214,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 11042,
											"end": 11214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11099,
											"end": 11103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11141,
											"end": 11148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 11122,
											"end": 11135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 11122,
											"end": 11137,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11122,
											"end": 11137,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 11122,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11148,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11148,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 11122,
											"end": 11175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 11175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11162,
											"end": 11175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11175,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11175,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 11122,
											"end": 11175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11207,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 11122,
											"end": 11207,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11191,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11192,
											"end": 11199,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11180,
											"end": 11207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11207,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 11180,
											"end": 11207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11207,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11207,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11180,
											"end": 11207,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11207,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11207,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11180,
											"end": 11207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11207,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11122,
											"end": 11207,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 11122,
											"end": 11207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11115,
											"end": 11207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11115,
											"end": 11207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11214,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18982,
											"end": 19171,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 18982,
											"end": 19171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19119,
											"end": 19121,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19107,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19092,
											"end": 19116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19108,
											"end": 19115,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19092,
											"end": 19116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19092,
											"end": 19116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19092,
											"end": 19116,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19156,
											"end": 19163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19152,
											"end": 19154,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19136,
											"end": 19164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19136,
											"end": 19164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19145,
											"end": 19150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19136,
											"end": 19164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19136,
											"end": 19164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19136,
											"end": 19164,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 19136,
											"end": 19164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19136,
											"end": 19164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19136,
											"end": 19164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19136,
											"end": 19164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19136,
											"end": 19164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19136,
											"end": 19164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19136,
											"end": 19164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19136,
											"end": 19164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19136,
											"end": 19164,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 18982,
											"end": 19171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18982,
											"end": 19171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18982,
											"end": 19171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18982,
											"end": 19171,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3687,
											"end": 3777,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3687,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3743,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3687,
											"end": 3777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3777,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14052,
											"end": 16134,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14052,
											"end": 16134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14162,
											"end": 14197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14200,
											"end": 14221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 14213,
											"end": 14220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14200,
											"end": 14212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14200,
											"end": 14221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14200,
											"end": 14221,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 14200,
											"end": 14221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14162,
											"end": 14221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14162,
											"end": 14221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14258,
											"end": 14262,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14236,
											"end": 14262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14236,
											"end": 14262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14236,
											"end": 14249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14236,
											"end": 14254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14236,
											"end": 14254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14236,
											"end": 14254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14236,
											"end": 14262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14236,
											"end": 14262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14236,
											"end": 14262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14232,
											"end": 14299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 14232,
											"end": 14299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14271,
											"end": 14299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14271,
											"end": 14299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14271,
											"end": 14299,
											"name": "PUSH",
											"source": 0,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14271,
											"end": 14299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14271,
											"end": 14299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14271,
											"end": 14299,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14271,
											"end": 14299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14271,
											"end": 14299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14271,
											"end": 14299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14271,
											"end": 14299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14271,
											"end": 14299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14271,
											"end": 14299,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14271,
											"end": 14299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14271,
											"end": 14299,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14232,
											"end": 14299,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 14232,
											"end": 14299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14352,
											"end": 14356,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14356,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14336,
											"end": 14356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 14336,
											"end": 14346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14336,
											"end": 14348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14336,
											"end": 14348,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 14336,
											"end": 14348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14356,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14336,
											"end": 14356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14356,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 14336,
											"end": 14408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14372,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 14389,
											"end": 14393,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14395,
											"end": 14407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 14395,
											"end": 14405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14395,
											"end": 14407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14395,
											"end": 14407,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 14395,
											"end": 14407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14372,
											"end": 14388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14372,
											"end": 14408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14372,
											"end": 14408,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 14372,
											"end": 14408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14408,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 14336,
											"end": 14408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 14336,
											"end": 14460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14448,
											"end": 14460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14448,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14448,
											"end": 14460,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14448,
											"end": 14460,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14448,
											"end": 14460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14424,
											"end": 14460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14424,
											"end": 14460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14424,
											"end": 14444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 14436,
											"end": 14443,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14424,
											"end": 14435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14424,
											"end": 14444,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14424,
											"end": 14444,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 14424,
											"end": 14444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14424,
											"end": 14460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14424,
											"end": 14460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14424,
											"end": 14460,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14460,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 14336,
											"end": 14460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14477,
											"end": 14494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14472,
											"end": 14538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14472,
											"end": 14538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14503,
											"end": 14538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14503,
											"end": 14538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14503,
											"end": 14538,
											"name": "PUSH",
											"source": 0,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14503,
											"end": 14538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14503,
											"end": 14538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14503,
											"end": 14538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14503,
											"end": 14538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14503,
											"end": 14538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14503,
											"end": 14538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14503,
											"end": 14538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14503,
											"end": 14538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14503,
											"end": 14538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14503,
											"end": 14538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14503,
											"end": 14538,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14472,
											"end": 14538,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14472,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14566,
											"end": 14567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14552,
											"end": 14568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14552,
											"end": 14568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14554,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14552,
											"end": 14568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14552,
											"end": 14568,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14548,
											"end": 14600,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14548,
											"end": 14600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 14548,
											"end": 14600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14577,
											"end": 14600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14577,
											"end": 14600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14577,
											"end": 14600,
											"name": "PUSH",
											"source": 0,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14577,
											"end": 14600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14577,
											"end": 14600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14577,
											"end": 14600,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14577,
											"end": 14600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14577,
											"end": 14600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14577,
											"end": 14600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14577,
											"end": 14600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14577,
											"end": 14600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14577,
											"end": 14600,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14577,
											"end": 14600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14577,
											"end": 14600,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14548,
											"end": 14600,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 14548,
											"end": 14600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14611,
											"end": 14654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14633,
											"end": 14637,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14639,
											"end": 14641,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14643,
											"end": 14650,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14652,
											"end": 14653,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14611,
											"end": 14632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 14611,
											"end": 14654,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14611,
											"end": 14654,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14611,
											"end": 14654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14716,
											"end": 14751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 14733,
											"end": 14734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14737,
											"end": 14744,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14746,
											"end": 14750,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14716,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14716,
											"end": 14751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14716,
											"end": 14751,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 14716,
											"end": 14751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15071,
											"end": 15072,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15041,
											"end": 15053,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15054,
											"end": 15058,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15041,
											"end": 15067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15114,
											"end": 15115,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15086,
											"end": 15098,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15086,
											"end": 15102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15099,
											"end": 15101,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15086,
											"end": 15102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15086,
											"end": 15102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15086,
											"end": 15102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15086,
											"end": 15102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15086,
											"end": 15102,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15086,
											"end": 15110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15086,
											"end": 15115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15130,
											"end": 15161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15164,
											"end": 15175,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15164,
											"end": 15184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15176,
											"end": 15183,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15164,
											"end": 15184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15164,
											"end": 15184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15164,
											"end": 15184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15164,
											"end": 15184,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15130,
											"end": 15184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15130,
											"end": 15184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15214,
											"end": 15216,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15198,
											"end": 15211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15198,
											"end": 15216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15263,
											"end": 15278,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15230,
											"end": 15253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15253,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15230,
											"end": 15279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15527,
											"end": 15546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15559,
											"end": 15560,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15549,
											"end": 15556,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15549,
											"end": 15560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15527,
											"end": 15560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15527,
											"end": 15560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15574,
											"end": 15605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15608,
											"end": 15619,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15608,
											"end": 15632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15620,
											"end": 15631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15608,
											"end": 15632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15608,
											"end": 15632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15608,
											"end": 15632,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15608,
											"end": 15632,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15608,
											"end": 15632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15608,
											"end": 15632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15608,
											"end": 15632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15608,
											"end": 15632,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15608,
											"end": 15632,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15608,
											"end": 15632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15608,
											"end": 15632,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15574,
											"end": 15632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15574,
											"end": 15632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15675,
											"end": 15676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15650,
											"end": 15677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15650,
											"end": 15677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15650,
											"end": 15658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15650,
											"end": 15663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15650,
											"end": 15663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15650,
											"end": 15663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15650,
											"end": 15663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15650,
											"end": 15663,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15650,
											"end": 15663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15650,
											"end": 15663,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15650,
											"end": 15663,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15650,
											"end": 15663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15650,
											"end": 15663,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15650,
											"end": 15663,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15650,
											"end": 15663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15650,
											"end": 15677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15650,
											"end": 15677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15650,
											"end": 15677,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15646,
											"end": 16023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15646,
											"end": 16023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 15646,
											"end": 16023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15857,
											"end": 15870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15857,
											"end": 15870,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15842,
											"end": 15853,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15842,
											"end": 15870,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 16009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 15838,
											"end": 16009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15910,
											"end": 15914,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15894,
											"end": 15907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15962,
											"end": 15975,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15962,
											"end": 15990,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15962,
											"end": 15990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15962,
											"end": 15990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15936,
											"end": 15959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15959,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15936,
											"end": 15990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 16009,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 15838,
											"end": 16009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15646,
											"end": 16023,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 15646,
											"end": 16023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15017,
											"end": 16033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15017,
											"end": 16033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15017,
											"end": 16033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16067,
											"end": 16074,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16063,
											"end": 16065,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16075,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16048,
											"end": 16075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16057,
											"end": 16061,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16075,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16048,
											"end": 16075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16075,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16048,
											"end": 16075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16048,
											"end": 16075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16048,
											"end": 16075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16075,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16075,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 16085,
											"end": 16127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16106,
											"end": 16110,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16112,
											"end": 16114,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16116,
											"end": 16123,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16125,
											"end": 16126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16085,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16085,
											"end": 16127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16085,
											"end": 16127,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16085,
											"end": 16127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14152,
											"end": 16134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14152,
											"end": 16134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 16134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 16134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 16134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14052,
											"end": 16134,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6337,
											"end": 7421,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 6337,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6399,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6399,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 6399,
											"end": 6420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6399,
											"end": 6420,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6399,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6447,
											"end": 6454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 6493,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 6493,
											"end": 6508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6516,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6516,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6540,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6493,
											"end": 6540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6540,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6520,
											"end": 6524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6520,
											"end": 6540,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6540,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6493,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6489,
											"end": 7357,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6489,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6489,
											"end": 7357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6594,
											"end": 6605,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6594,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6606,
											"end": 6610,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 6611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 6611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6594,
											"end": 6611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 6611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 6611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 6611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6594,
											"end": 6611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6594,
											"end": 6611,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6634,
											"end": 6643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6634,
											"end": 6650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6634,
											"end": 6650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6634,
											"end": 6650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 6629,
											"end": 7343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6678,
											"end": 6706,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6678,
											"end": 6706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6678,
											"end": 6692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6706,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6678,
											"end": 6706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6706,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 6674,
											"end": 6773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6734,
											"end": 6750,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6734,
											"end": 6750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6734,
											"end": 6750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6734,
											"end": 6750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6734,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 6734,
											"end": 6750,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6773,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 6674,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7070,
											"end": 7325,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7070,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7081,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7070,
											"end": 7325,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7070,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 7070,
											"end": 7325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7115,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7109,
											"end": 7115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7115,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7153,
											"end": 7164,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7153,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7165,
											"end": 7169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7153,
											"end": 7170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7153,
											"end": 7170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7153,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7153,
											"end": 7170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7153,
											"end": 7170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7153,
											"end": 7170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7153,
											"end": 7170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7153,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7153,
											"end": 7170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7153,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7153,
											"end": 7170,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7200,
											"end": 7228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7200,
											"end": 7228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7228,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7196,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 7196,
											"end": 7303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7267,
											"end": 7276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7276,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 7260,
											"end": 7276,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7196,
											"end": 7303,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 7196,
											"end": 7303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7070,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 7070,
											"end": 7325,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7070,
											"end": 7325,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 7070,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 7343,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 6629,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6542,
											"end": 7357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6489,
											"end": 7357,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6489,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7383,
											"end": 7414,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7383,
											"end": 7414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7383,
											"end": 7414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7383,
											"end": 7414,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7414,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7414,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 7421,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 6337,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 7421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 7421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 7421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6337,
											"end": 7421,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 19652,
											"end": 20302,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 19652,
											"end": 20302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19810,
											"end": 19814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19846,
											"end": 19848,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19830,
											"end": 19866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19866,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 19867,
											"end": 19879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 19867,
											"end": 19877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19867,
											"end": 19879,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19867,
											"end": 19879,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 19867,
											"end": 19879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19881,
											"end": 19885,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19894,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 19901,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 19830,
											"end": 19902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20078,
											"end": 20079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20061,
											"end": 20067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20074,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20061,
											"end": 20079,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20057,
											"end": 20286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20057,
											"end": 20286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 20057,
											"end": 20286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20106,
											"end": 20146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20106,
											"end": 20146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20106,
											"end": 20146,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20106,
											"end": 20146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20106,
											"end": 20146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20106,
											"end": 20146,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20106,
											"end": 20146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20106,
											"end": 20146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20106,
											"end": 20146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20106,
											"end": 20146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20106,
											"end": 20146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20106,
											"end": 20146,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20106,
											"end": 20146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20106,
											"end": 20146,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20057,
											"end": 20286,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 20057,
											"end": 20286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20246,
											"end": 20252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20231,
											"end": 20237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20227,
											"end": 20229,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20223,
											"end": 20238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20216,
											"end": 20254,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 19826,
											"end": 20296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19958,
											"end": 20003,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 19958,
											"end": 20003,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19958,
											"end": 20003,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 20003,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19948,
											"end": 20003,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 20003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 19954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 20003,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19948,
											"end": 20003,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 20003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 20003,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19941,
											"end": 20003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19941,
											"end": 20003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19941,
											"end": 20003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19652,
											"end": 20302,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19652,
											"end": 20302,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19652,
											"end": 20302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19652,
											"end": 20302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19652,
											"end": 20302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19652,
											"end": 20302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19652,
											"end": 20302,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8547,
											"end": 8641,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8547,
											"end": 8641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8598,
											"end": 8611,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8630,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8547,
											"end": 8641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8547,
											"end": 8641,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 384,
											"end": 397,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 606,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 601,
											"end": 611,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 597,
											"end": 648,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 657,
											"end": 669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 657,
											"end": 677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 657,
											"end": 677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 687,
											"end": 701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 726,
											"end": 727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 722,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 718,
											"end": 727,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 743,
											"end": 751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 765,
											"end": 775,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 795,
											"end": 834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 795,
											"end": 834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 860,
											"end": 861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 851,
											"end": 861,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 945,
											"end": 955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 919,
											"end": 958,
											"name": "PUSH",
											"source": 6,
											"value": "F8"
										},
										{
											"begin": 919,
											"end": 958,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 902,
											"end": 958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 972,
											"end": 983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 20933,
											"end": 21087,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 20933,
											"end": 21087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20933,
											"end": 21087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20933,
											"end": 21087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20933,
											"end": 21087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20933,
											"end": 21087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20933,
											"end": 21087,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21728,
											"end": 21881,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 21728,
											"end": 21881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21881,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "180"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 701,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 568,
											"end": 701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 611,
											"end": 616,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 655,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 636,
											"end": 656,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 627,
											"end": 656,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 627,
											"end": 656,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 665,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 665,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 701,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 568,
											"end": 701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 568,
											"end": 701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 701,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 707,
											"end": 844,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 707,
											"end": 844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 752,
											"end": 757,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 796,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 777,
											"end": 797,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 768,
											"end": 797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 768,
											"end": 797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 806,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 832,
											"end": 837,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 806,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 707,
											"end": 844,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 707,
											"end": 844,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 707,
											"end": 844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 707,
											"end": 844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 707,
											"end": 844,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 850,
											"end": 991,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 850,
											"end": 991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 906,
											"end": 911,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 931,
											"end": 944,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 922,
											"end": 944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 922,
											"end": 944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 953,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 979,
											"end": 984,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 953,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 850,
											"end": 991,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 850,
											"end": 991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 850,
											"end": 991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 850,
											"end": 991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 850,
											"end": 991,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1065,
											"end": 1070,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1117,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1105,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1112,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1118,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1226,
											"end": 1246,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 1338,
											"end": 1341,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1311,
											"end": 1328,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1255,
											"end": 1342,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1255,
											"end": 1342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1071,
											"end": 1348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1400,
											"end": 1405,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1445,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 1481,
											"end": 1486,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1558,
											"end": 1564,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1609,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1604,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1582,
											"end": 1605,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1610,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 1803,
											"end": 1810,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1794,
											"end": 1800,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1783,
											"end": 1792,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1902,
											"end": 1908,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1961,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1938,
											"end": 1945,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1934,
											"end": 1957,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1962,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2086,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 2155,
											"end": 2162,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2163,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2056,
											"end": 2173,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2281,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2228,
											"end": 2291,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2228,
											"end": 2291,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2458,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2435,
											"end": 2442,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2454,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2427,
											"end": 2459,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2649,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2641,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2553,
											"end": 2670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2709,
											"end": 2711,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2771,
											"end": 2777,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2769,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2756,
											"end": 2778,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2808,
											"end": 2926,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3048,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3050,
											"end": 3056,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3110,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3111,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 3304,
											"end": 3311,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3295,
											"end": 3301,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3293,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3280,
											"end": 3302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3361,
											"end": 3363,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3412,
											"end": 3421,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3450,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 3560,
											"end": 3567,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3557,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3549,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3536,
											"end": 3558,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3460,
											"end": 3578,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3645,
											"end": 3647,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3634,
											"end": 3643,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 3649,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3694,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3668,
											"end": 3674,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 3857,
											"end": 3864,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3848,
											"end": 3854,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3846,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3855,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3793,
											"end": 3865,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3793,
											"end": 3865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3588,
											"end": 3875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3967,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4012,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4007,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 3996,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3985,
											"end": 4008,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 4013,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4136,
											"end": 4137,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 4206,
											"end": 4213,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4197,
											"end": 4203,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4186,
											"end": 4195,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4182,
											"end": 4204,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4151,
											"end": 4214,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4151,
											"end": 4214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4107,
											"end": 4224,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 4331,
											"end": 4338,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4307,
											"end": 4329,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4339,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4444,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4489,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4475,
											"end": 4484,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4473,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4458,
											"end": 4490,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4613,
											"end": 4614,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 4683,
											"end": 4690,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4672,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4659,
											"end": 4681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4628,
											"end": 4691,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4628,
											"end": 4691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4584,
											"end": 4701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4740,
											"end": 4742,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 4811,
											"end": 4818,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4802,
											"end": 4808,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4791,
											"end": 4800,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4787,
											"end": 4809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4819,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4819,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4711,
											"end": 4829,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4900,
											"end": 4906,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4951,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4937,
											"end": 4946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4935,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4924,
											"end": 4947,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4920,
											"end": 4952,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5075,
											"end": 5076,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 5144,
											"end": 5151,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5135,
											"end": 5141,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5120,
											"end": 5142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5090,
											"end": 5152,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5090,
											"end": 5152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5046,
											"end": 5162,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5244,
											"end": 5250,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5281,
											"end": 5290,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5279,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5268,
											"end": 5291,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5264,
											"end": 5296,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5420,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 5499,
											"end": 5506,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5490,
											"end": 5496,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5475,
											"end": 5497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5434,
											"end": 5507,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5434,
											"end": 5507,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5390,
											"end": 5517,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5640,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5626,
											"end": 5635,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5624,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5613,
											"end": 5636,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5609,
											"end": 5641,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5764,
											"end": 5765,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 5834,
											"end": 5841,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5825,
											"end": 5831,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5814,
											"end": 5823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5810,
											"end": 5832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5779,
											"end": 5842,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5779,
											"end": 5842,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5735,
											"end": 5852,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 5970,
											"end": 5975,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5947,
											"end": 5950,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5977,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 6085,
											"end": 6090,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6092,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6190,
											"end": 6193,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 6250,
											"end": 6255,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 6335,
											"end": 6341,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6330,
											"end": 6333,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6265,
											"end": 6342,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6265,
											"end": 6342,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6391,
											"end": 6394,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6377,
											"end": 6382,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6373,
											"end": 6389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 6450,
											"end": 6456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6419,
											"end": 6458,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6412,
											"end": 6458,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6412,
											"end": 6458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6194,
											"end": 6464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6558,
											"end": 6561,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 6619,
											"end": 6624,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 6705,
											"end": 6711,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6700,
											"end": 6703,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6712,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 6766,
											"end": 6772,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6761,
											"end": 6764,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6758,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6747,
											"end": 6752,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6793,
											"end": 6796,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6828,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6828,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6782,
											"end": 6828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6562,
											"end": 6834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 7007,
											"end": 7012,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 7111,
											"end": 7117,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7106,
											"end": 7109,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7022,
											"end": 7118,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7022,
											"end": 7118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 7172,
											"end": 7178,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7167,
											"end": 7170,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7160,
											"end": 7164,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7153,
											"end": 7158,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7149,
											"end": 7165,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7204,
											"end": 7210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7199,
											"end": 7202,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7195,
											"end": 7211,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6950,
											"end": 7217,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 7328,
											"end": 7333,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7308,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7335,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7527,
											"end": 7530,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 7640,
											"end": 7643,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7631,
											"end": 7637,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7644,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7542,
											"end": 7644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 7752,
											"end": 7755,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7749,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7654,
											"end": 7756,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7654,
											"end": 7756,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7776,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7881,
											"end": 7885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7919,
											"end": 7921,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7908,
											"end": 7917,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7896,
											"end": 7922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7896,
											"end": 7922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 8000,
											"end": 8001,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 7998,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7985,
											"end": 8002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7976,
											"end": 7982,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8215,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8249,
											"end": 8252,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8238,
											"end": 8247,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8234,
											"end": 8253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8226,
											"end": 8253,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8226,
											"end": 8253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 8331,
											"end": 8332,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8320,
											"end": 8329,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8316,
											"end": 8333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8307,
											"end": 8313,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8410,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8388,
											"end": 8394,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 8494,
											"end": 8496,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8483,
											"end": 8492,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8479,
											"end": 8497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8470,
											"end": 8476,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8545,
											"end": 8554,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8539,
											"end": 8543,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8535,
											"end": 8555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8530,
											"end": 8532,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8519,
											"end": 8528,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8508,
											"end": 8556,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 8644,
											"end": 8648,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8635,
											"end": 8641,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8565,
											"end": 8649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8565,
											"end": 8649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8749,
											"end": 8753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8776,
											"end": 8785,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8772,
											"end": 8790,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8764,
											"end": 8790,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8764,
											"end": 8790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 8862,
											"end": 8863,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8851,
											"end": 8860,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8847,
											"end": 8864,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8838,
											"end": 8844,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8991,
											"end": 8995,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9029,
											"end": 9031,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9018,
											"end": 9027,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9014,
											"end": 9032,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9006,
											"end": 9032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9006,
											"end": 9032,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9078,
											"end": 9087,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9072,
											"end": 9076,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9068,
											"end": 9088,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9064,
											"end": 9065,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9062,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9042,
											"end": 9089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 9179,
											"end": 9183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9170,
											"end": 9176,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9098,
											"end": 9184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9098,
											"end": 9184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9290,
											"end": 9294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9328,
											"end": 9330,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9317,
											"end": 9326,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9313,
											"end": 9331,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9305,
											"end": 9331,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9305,
											"end": 9331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 9409,
											"end": 9410,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9398,
											"end": 9407,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9394,
											"end": 9411,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9385,
											"end": 9391,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9459,
											"end": 9465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9476,
											"end": 9506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9476,
											"end": 9506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 9543,
											"end": 9547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9535,
											"end": 9541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9626,
											"end": 9628,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9620,
											"end": 9629,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9629,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9706,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9792,
											"end": 9810,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9784,
											"end": 9790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9781,
											"end": 9811,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 9874,
											"end": 9880,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9844,
											"end": 9881,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9844,
											"end": 9881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9936,
											"end": 9940,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9930,
											"end": 9934,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9926,
											"end": 9941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9918,
											"end": 9941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9918,
											"end": 9941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10005,
											"end": 10011,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10033,
											"end": 10045,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10023,
											"end": 10045,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10023,
											"end": 10045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10149,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10138,
											"end": 10150,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10128,
											"end": 10150,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10128,
											"end": 10150,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10246,
											"end": 10257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10280,
											"end": 10286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10278,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10287,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10320,
											"end": 10324,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10315,
											"end": 10318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10311,
											"end": 10325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10296,
											"end": 10325,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10296,
											"end": 10325,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10421,
											"end": 10432,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10461,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10450,
											"end": 10453,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10443,
											"end": 10462,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10495,
											"end": 10499,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10490,
											"end": 10493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10486,
											"end": 10500,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10471,
											"end": 10500,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10471,
											"end": 10500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10614,
											"end": 10625,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10651,
											"end": 10654,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10636,
											"end": 10654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10636,
											"end": 10654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10666,
											"end": 10971,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 10666,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10706,
											"end": 10709,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10725,
											"end": 10745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 10743,
											"end": 10744,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10725,
											"end": 10745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 10725,
											"end": 10745,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10725,
											"end": 10745,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 10725,
											"end": 10745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10720,
											"end": 10745,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10720,
											"end": 10745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10759,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 10777,
											"end": 10778,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10759,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 10759,
											"end": 10779,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10759,
											"end": 10779,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 10759,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10913,
											"end": 10914,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10845,
											"end": 10911,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10841,
											"end": 10915,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10838,
											"end": 10839,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10835,
											"end": 10916,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10832,
											"end": 10939,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10832,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 10832,
											"end": 10939,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10832,
											"end": 10939,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 10832,
											"end": 10939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 10964,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10960,
											"end": 10961,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10956,
											"end": 10965,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10949,
											"end": 10965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10949,
											"end": 10965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10666,
											"end": 10971,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10666,
											"end": 10971,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10666,
											"end": 10971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10666,
											"end": 10971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10666,
											"end": 10971,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10977,
											"end": 11162,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 10977,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11017,
											"end": 11018,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11034,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 11052,
											"end": 11053,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11034,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 11034,
											"end": 11054,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11034,
											"end": 11054,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 11034,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11029,
											"end": 11054,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11029,
											"end": 11054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11068,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 11086,
											"end": 11087,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11068,
											"end": 11088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 11068,
											"end": 11088,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11068,
											"end": 11088,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 11068,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11063,
											"end": 11088,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11063,
											"end": 11088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11097,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 11097,
											"end": 11132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11112,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 11112,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 11112,
											"end": 11130,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11112,
											"end": 11130,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 11112,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11097,
											"end": 11132,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 11097,
											"end": 11132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11154,
											"end": 11155,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11151,
											"end": 11152,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11147,
											"end": 11156,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11142,
											"end": 11156,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11142,
											"end": 11156,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10977,
											"end": 11162,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10977,
											"end": 11162,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10977,
											"end": 11162,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10977,
											"end": 11162,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10977,
											"end": 11162,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11168,
											"end": 11359,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 11168,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11208,
											"end": 11212,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11228,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 11246,
											"end": 11247,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11228,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 11228,
											"end": 11248,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11228,
											"end": 11248,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 11228,
											"end": 11248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11223,
											"end": 11248,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11223,
											"end": 11248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11262,
											"end": 11282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 11280,
											"end": 11281,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11262,
											"end": 11282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 11262,
											"end": 11282,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11262,
											"end": 11282,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 11262,
											"end": 11282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11257,
											"end": 11282,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11257,
											"end": 11282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11301,
											"end": 11302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11298,
											"end": 11299,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11295,
											"end": 11303,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11292,
											"end": 11326,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11292,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 11292,
											"end": 11326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11292,
											"end": 11326,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 11292,
											"end": 11326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11351,
											"end": 11352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11349,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11344,
											"end": 11353,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11336,
											"end": 11353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11336,
											"end": 11353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11168,
											"end": 11359,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11168,
											"end": 11359,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11168,
											"end": 11359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11168,
											"end": 11359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11168,
											"end": 11359,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11365,
											"end": 11461,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 11365,
											"end": 11461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11402,
											"end": 11409,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11431,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 11449,
											"end": 11454,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11431,
											"end": 11455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 11431,
											"end": 11455,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11431,
											"end": 11455,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 11431,
											"end": 11455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11420,
											"end": 11455,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11420,
											"end": 11455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11365,
											"end": 11461,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11365,
											"end": 11461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11365,
											"end": 11461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11365,
											"end": 11461,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11467,
											"end": 11557,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 11467,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11501,
											"end": 11508,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11544,
											"end": 11549,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11537,
											"end": 11550,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11530,
											"end": 11551,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11519,
											"end": 11551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11519,
											"end": 11551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11467,
											"end": 11557,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11467,
											"end": 11557,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11467,
											"end": 11557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11467,
											"end": 11557,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11563,
											"end": 11712,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 11563,
											"end": 11712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11599,
											"end": 11606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11639,
											"end": 11705,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11632,
											"end": 11637,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11628,
											"end": 11706,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11617,
											"end": 11706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11617,
											"end": 11706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11563,
											"end": 11712,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11563,
											"end": 11712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11563,
											"end": 11712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11563,
											"end": 11712,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11718,
											"end": 11844,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 11718,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11755,
											"end": 11762,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11795,
											"end": 11837,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11788,
											"end": 11793,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11784,
											"end": 11838,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11773,
											"end": 11838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11773,
											"end": 11838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11718,
											"end": 11844,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11718,
											"end": 11844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11718,
											"end": 11844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11718,
											"end": 11844,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11850,
											"end": 11927,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 11850,
											"end": 11927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11887,
											"end": 11894,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11916,
											"end": 11921,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11905,
											"end": 11921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11905,
											"end": 11921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11850,
											"end": 11927,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11850,
											"end": 11927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11850,
											"end": 11927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11850,
											"end": 11927,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11933,
											"end": 12087,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 11933,
											"end": 12087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12017,
											"end": 12023,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12012,
											"end": 12015,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12007,
											"end": 12010,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11994,
											"end": 12024,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 12079,
											"end": 12080,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12070,
											"end": 12076,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12065,
											"end": 12068,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12061,
											"end": 12077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12054,
											"end": 12081,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11933,
											"end": 12087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11933,
											"end": 12087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11933,
											"end": 12087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11933,
											"end": 12087,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12093,
											"end": 12400,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 12093,
											"end": 12400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12161,
											"end": 12162,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12171,
											"end": 12284,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 12171,
											"end": 12284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12185,
											"end": 12191,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12182,
											"end": 12183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12179,
											"end": 12192,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12284,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 12171,
											"end": 12284,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12270,
											"end": 12271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12265,
											"end": 12268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12261,
											"end": 12272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12255,
											"end": 12273,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12251,
											"end": 12252,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12246,
											"end": 12249,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12242,
											"end": 12253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12207,
											"end": 12209,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12204,
											"end": 12205,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12200,
											"end": 12210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12195,
											"end": 12210,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12195,
											"end": 12210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 12171,
											"end": 12284,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12284,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 12171,
											"end": 12284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12308,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12299,
											"end": 12300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12296,
											"end": 12309,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12394,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 12293,
											"end": 12394,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12382,
											"end": 12383,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12373,
											"end": 12379,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12368,
											"end": 12371,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12364,
											"end": 12380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12357,
											"end": 12384,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12394,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 12293,
											"end": 12394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12142,
											"end": 12400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12093,
											"end": 12400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12093,
											"end": 12400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12093,
											"end": 12400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12093,
											"end": 12400,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12406,
											"end": 12726,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 12406,
											"end": 12726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12450,
											"end": 12456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12487,
											"end": 12488,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12481,
											"end": 12485,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12477,
											"end": 12489,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12467,
											"end": 12489,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12467,
											"end": 12489,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12534,
											"end": 12535,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12528,
											"end": 12532,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12524,
											"end": 12536,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12555,
											"end": 12573,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12545,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 12545,
											"end": 12626,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12615,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 12603,
											"end": 12609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12599,
											"end": 12616,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12589,
											"end": 12616,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12589,
											"end": 12616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12545,
											"end": 12626,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 12545,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12673,
											"end": 12675,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12665,
											"end": 12671,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12662,
											"end": 12676,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12642,
											"end": 12660,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12639,
											"end": 12677,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12636,
											"end": 12720,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12636,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 12636,
											"end": 12720,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12692,
											"end": 12710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 12692,
											"end": 12710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 12692,
											"end": 12710,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12692,
											"end": 12710,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 12692,
											"end": 12710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12636,
											"end": 12720,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 12636,
											"end": 12720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12457,
											"end": 12726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12406,
											"end": 12726,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12406,
											"end": 12726,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12406,
											"end": 12726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12406,
											"end": 12726,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12732,
											"end": 13013,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 12732,
											"end": 13013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12815,
											"end": 12842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 12837,
											"end": 12841,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12815,
											"end": 12842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 12815,
											"end": 12842,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12815,
											"end": 12842,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 12815,
											"end": 12842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12807,
											"end": 12813,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 12843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12945,
											"end": 12951,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12933,
											"end": 12943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12930,
											"end": 12952,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12909,
											"end": 12927,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12897,
											"end": 12907,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12894,
											"end": 12928,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12891,
											"end": 12953,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12888,
											"end": 12976,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12888,
											"end": 12976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 12888,
											"end": 12976,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12956,
											"end": 12974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 12956,
											"end": 12974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 12956,
											"end": 12974,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12956,
											"end": 12974,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 12956,
											"end": 12974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12888,
											"end": 12976,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 12888,
											"end": 12976,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12996,
											"end": 13006,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12992,
											"end": 12994,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12985,
											"end": 13007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12775,
											"end": 13013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12732,
											"end": 13013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12732,
											"end": 13013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12732,
											"end": 13013,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13019,
											"end": 13252,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 13019,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13058,
											"end": 13061,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13081,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 13099,
											"end": 13104,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13081,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 13081,
											"end": 13105,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13081,
											"end": 13105,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 13081,
											"end": 13105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13072,
											"end": 13105,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13072,
											"end": 13105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13127,
											"end": 13193,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13120,
											"end": 13125,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13117,
											"end": 13194,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13217,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 13114,
											"end": 13217,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13197,
											"end": 13215,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 13197,
											"end": 13215,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 13197,
											"end": 13215,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13197,
											"end": 13215,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 13197,
											"end": 13215,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13217,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 13114,
											"end": 13217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13244,
											"end": 13245,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13237,
											"end": 13242,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13233,
											"end": 13246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13226,
											"end": 13246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13226,
											"end": 13246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13019,
											"end": 13252,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13019,
											"end": 13252,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13019,
											"end": 13252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13019,
											"end": 13252,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13258,
											"end": 13434,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 13258,
											"end": 13434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13290,
											"end": 13291,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13307,
											"end": 13327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 13325,
											"end": 13326,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13307,
											"end": 13327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 13307,
											"end": 13327,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13307,
											"end": 13327,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 13307,
											"end": 13327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13302,
											"end": 13327,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13302,
											"end": 13327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13341,
											"end": 13361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 13359,
											"end": 13360,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13341,
											"end": 13361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 13341,
											"end": 13361,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13341,
											"end": 13361,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 13341,
											"end": 13361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13336,
											"end": 13361,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13336,
											"end": 13361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13380,
											"end": 13381,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13370,
											"end": 13405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 13370,
											"end": 13405,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13385,
											"end": 13403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 13385,
											"end": 13403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 13385,
											"end": 13403,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13385,
											"end": 13403,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 13385,
											"end": 13403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13370,
											"end": 13405,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 13370,
											"end": 13405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13426,
											"end": 13427,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13423,
											"end": 13424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13419,
											"end": 13428,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 13414,
											"end": 13428,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13414,
											"end": 13428,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13258,
											"end": 13434,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13258,
											"end": 13434,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13258,
											"end": 13434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13258,
											"end": 13434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13258,
											"end": 13434,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13440,
											"end": 13620,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 13440,
											"end": 13620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13565,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13485,
											"end": 13486,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13478,
											"end": 13566,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13585,
											"end": 13589,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 13582,
											"end": 13583,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13575,
											"end": 13590,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13609,
											"end": 13613,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13606,
											"end": 13607,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13599,
											"end": 13614,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13626,
											"end": 13806,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 13626,
											"end": 13806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13674,
											"end": 13751,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13671,
											"end": 13672,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13664,
											"end": 13752,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13771,
											"end": 13775,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 13768,
											"end": 13769,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13761,
											"end": 13776,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13795,
											"end": 13799,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13792,
											"end": 13793,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13785,
											"end": 13800,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13812,
											"end": 13992,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 13812,
											"end": 13992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13860,
											"end": 13937,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13857,
											"end": 13858,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13850,
											"end": 13938,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13957,
											"end": 13961,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 13954,
											"end": 13955,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13947,
											"end": 13962,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13981,
											"end": 13985,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13978,
											"end": 13979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13971,
											"end": 13986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13998,
											"end": 14178,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 13998,
											"end": 14178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14046,
											"end": 14123,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14043,
											"end": 14044,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14036,
											"end": 14124,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14143,
											"end": 14147,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 14140,
											"end": 14141,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14133,
											"end": 14148,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14167,
											"end": 14171,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14164,
											"end": 14165,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14157,
											"end": 14172,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14184,
											"end": 14364,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 14184,
											"end": 14364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14232,
											"end": 14309,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14229,
											"end": 14230,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14222,
											"end": 14310,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14329,
											"end": 14333,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 14326,
											"end": 14327,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14319,
											"end": 14334,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14353,
											"end": 14357,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14350,
											"end": 14351,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14343,
											"end": 14358,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14370,
											"end": 14487,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 14370,
											"end": 14487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14479,
											"end": 14480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14476,
											"end": 14477,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14469,
											"end": 14481,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14493,
											"end": 14610,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 14493,
											"end": 14610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14602,
											"end": 14603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14599,
											"end": 14600,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14592,
											"end": 14604,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14616,
											"end": 14733,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 14616,
											"end": 14733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14725,
											"end": 14726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14722,
											"end": 14723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14715,
											"end": 14727,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14739,
											"end": 14856,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 14739,
											"end": 14856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14848,
											"end": 14849,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14845,
											"end": 14846,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14838,
											"end": 14850,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14862,
											"end": 14964,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 14862,
											"end": 14964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14903,
											"end": 14909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14954,
											"end": 14956,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14950,
											"end": 14957,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14945,
											"end": 14947,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14938,
											"end": 14943,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14934,
											"end": 14948,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14930,
											"end": 14958,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14920,
											"end": 14958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14920,
											"end": 14958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14862,
											"end": 14964,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14862,
											"end": 14964,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14862,
											"end": 14964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14862,
											"end": 14964,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14970,
											"end": 15092,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 14970,
											"end": 15092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15043,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 15061,
											"end": 15066,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15043,
											"end": 15067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 15043,
											"end": 15067,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15043,
											"end": 15067,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 15043,
											"end": 15067,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15036,
											"end": 15041,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15033,
											"end": 15068,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15023,
											"end": 15086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 15023,
											"end": 15086,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15082,
											"end": 15083,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15079,
											"end": 15080,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15072,
											"end": 15084,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15023,
											"end": 15086,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 15023,
											"end": 15086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14970,
											"end": 15092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14970,
											"end": 15092,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15098,
											"end": 15214,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 15098,
											"end": 15214,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15168,
											"end": 15189,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 15183,
											"end": 15188,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15168,
											"end": 15189,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 15168,
											"end": 15189,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15168,
											"end": 15189,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 15168,
											"end": 15189,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15161,
											"end": 15166,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15158,
											"end": 15190,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15148,
											"end": 15208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 15148,
											"end": 15208,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15204,
											"end": 15205,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15201,
											"end": 15202,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15194,
											"end": 15206,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15148,
											"end": 15208,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 15148,
											"end": 15208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15098,
											"end": 15214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15098,
											"end": 15214,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15220,
											"end": 15340,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 15220,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15292,
											"end": 15315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 15309,
											"end": 15314,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15292,
											"end": 15315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 15292,
											"end": 15315,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15292,
											"end": 15315,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 15292,
											"end": 15315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15285,
											"end": 15290,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15282,
											"end": 15316,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15272,
											"end": 15334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 15272,
											"end": 15334,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15330,
											"end": 15331,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15327,
											"end": 15328,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15320,
											"end": 15332,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15272,
											"end": 15334,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 15272,
											"end": 15334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15220,
											"end": 15340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15220,
											"end": 15340,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15346,
											"end": 15468,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 15346,
											"end": 15468,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15419,
											"end": 15443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 15437,
											"end": 15442,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15419,
											"end": 15443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 15419,
											"end": 15443,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15419,
											"end": 15443,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 15419,
											"end": 15443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15412,
											"end": 15417,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15409,
											"end": 15444,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15399,
											"end": 15462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 15399,
											"end": 15462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15458,
											"end": 15459,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15455,
											"end": 15456,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15448,
											"end": 15460,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15399,
											"end": 15462,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 15399,
											"end": 15462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15346,
											"end": 15468,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15346,
											"end": 15468,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol\":{\"keccak256\":\"0xc1cf8be45e0ffaa206d750ec97eab2b0a8d244b5630ef1e7f71765f1c692e4e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://869216b307c371776aedbe1f7239a2dd1804c723f3807870558a1837ad51dc39\",\"dweb:/ipfs/QmbQqqKEgQzJkWDtQXCpLrM5g2EdC3ScUu8ZrnXkVP4Jp7\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122020dfdb4e03c4e2dc46236fe522d0afa372455a60aaebb9f9fa9e1af57e4e25c064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122020dfdb4e03c4e2dc46236fe522d0afa372455a60aaebb9f9fa9e1af57e4e25c064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xDF 0xDB 0x4E SUB 0xC4 0xE2 0xDC CHAINID 0x23 PUSH16 0xE522D0AFA372455A60AAEBB9F9FA9E1A CREATE2 PUSH31 0x4E25C064736F6C634300080700330000000000000000000000000000000000 ",
							"sourceMap": "146:1885:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122020dfdb4e03c4e2dc46236fe522d0afa372455a60aaebb9f9fa9e1af57e4e25c064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xDF 0xDB 0x4E SUB 0xC4 0xE2 0xDC CHAINID 0x23 PUSH16 0xE522D0AFA372455A60AAEBB9F9FA9E1A CREATE2 PUSH31 0x4E25C064736F6C634300080700330000000000000000000000000000000000 ",
							"sourceMap": "146:1885:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122020dfdb4e03c4e2dc46236fe522d0afa372455a60aaebb9f9fa9e1af57e4e25c064736f6c63430008070033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": ".deps/github/chiru-labs/ERC721A/contracts/ERC721A.sol",
					"exportedSymbols": {
						"Address": [
							1784
						],
						"ApprovalCallerNotOwnerNorApproved": [
							10
						],
						"ApprovalQueryForNonexistentToken": [
							12
						],
						"ApprovalToCurrentOwner": [
							16
						],
						"ApproveToCaller": [
							14
						],
						"BalanceQueryForZeroAddress": [
							18
						],
						"Context": [
							1806
						],
						"ERC165": [
							2033
						],
						"ERC721A": [
							1328
						],
						"IERC165": [
							2045
						],
						"IERC721": [
							1444
						],
						"IERC721Metadata": [
							1489
						],
						"IERC721Receiver": [
							1462
						],
						"MintToZeroAddress": [
							20
						],
						"MintZeroQuantity": [
							22
						],
						"OwnerQueryForNonexistentToken": [
							24
						],
						"Strings": [
							2009
						],
						"TransferCallerNotOwnerNorApproved": [
							26
						],
						"TransferFromIncorrectOwner": [
							28
						],
						"TransferToNonERC721ReceiverImplementer": [
							30
						],
						"TransferToZeroAddress": [
							32
						],
						"URIQueryForNonexistentToken": [
							34
						]
					},
					"id": 1329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "56:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 1445,
							"src": "81:58:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 1463,
							"src": "140:66:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 1490,
							"src": "207:77:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 1785,
							"src": "285:51:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 1807,
							"src": "337:51:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 2010,
							"src": "389:51:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 2034,
							"src": "441:64:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 10,
							"name": "ApprovalCallerNotOwnerNorApproved",
							"nameLocation": "513:33:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 9,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "546:2:0"
							},
							"src": "507:42:0"
						},
						{
							"id": 12,
							"name": "ApprovalQueryForNonexistentToken",
							"nameLocation": "556:32:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 11,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "588:2:0"
							},
							"src": "550:41:0"
						},
						{
							"id": 14,
							"name": "ApproveToCaller",
							"nameLocation": "598:15:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 13,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "613:2:0"
							},
							"src": "592:24:0"
						},
						{
							"id": 16,
							"name": "ApprovalToCurrentOwner",
							"nameLocation": "623:22:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 15,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "645:2:0"
							},
							"src": "617:31:0"
						},
						{
							"id": 18,
							"name": "BalanceQueryForZeroAddress",
							"nameLocation": "655:26:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 17,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "681:2:0"
							},
							"src": "649:35:0"
						},
						{
							"id": 20,
							"name": "MintToZeroAddress",
							"nameLocation": "691:17:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 19,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "708:2:0"
							},
							"src": "685:26:0"
						},
						{
							"id": 22,
							"name": "MintZeroQuantity",
							"nameLocation": "718:16:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 21,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "734:2:0"
							},
							"src": "712:25:0"
						},
						{
							"id": 24,
							"name": "OwnerQueryForNonexistentToken",
							"nameLocation": "744:29:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 23,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "773:2:0"
							},
							"src": "738:38:0"
						},
						{
							"id": 26,
							"name": "TransferCallerNotOwnerNorApproved",
							"nameLocation": "783:33:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 25,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "816:2:0"
							},
							"src": "777:42:0"
						},
						{
							"id": 28,
							"name": "TransferFromIncorrectOwner",
							"nameLocation": "826:26:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 27,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "852:2:0"
							},
							"src": "820:35:0"
						},
						{
							"id": 30,
							"name": "TransferToNonERC721ReceiverImplementer",
							"nameLocation": "862:38:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 29,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "900:2:0"
							},
							"src": "856:47:0"
						},
						{
							"id": 32,
							"name": "TransferToZeroAddress",
							"nameLocation": "910:21:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 31,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "931:2:0"
							},
							"src": "904:30:0"
						},
						{
							"id": 34,
							"name": "URIQueryForNonexistentToken",
							"nameLocation": "941:27:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 33,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "968:2:0"
							},
							"src": "935:36:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 36,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1806,
										"src": "1484:7:0"
									},
									"id": 37,
									"nodeType": "InheritanceSpecifier",
									"src": "1484:7:0"
								},
								{
									"baseName": {
										"id": 38,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2033,
										"src": "1493:6:0"
									},
									"id": 39,
									"nodeType": "InheritanceSpecifier",
									"src": "1493:6:0"
								},
								{
									"baseName": {
										"id": 40,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1444,
										"src": "1501:7:0"
									},
									"id": 41,
									"nodeType": "InheritanceSpecifier",
									"src": "1501:7:0"
								},
								{
									"baseName": {
										"id": 42,
										"name": "IERC721Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1489,
										"src": "1510:15:0"
									},
									"id": 43,
									"nodeType": "InheritanceSpecifier",
									"src": "1510:15:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 35,
								"nodeType": "StructuredDocumentation",
								"src": "973:490:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\n Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1328,
							"linearizedBaseContracts": [
								1328,
								1489,
								1444,
								2033,
								2045,
								1806
							],
							"name": "ERC721A",
							"nameLocation": "1473:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 46,
									"libraryName": {
										"id": 44,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1784,
										"src": "1538:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "1532:26:0",
									"typeName": {
										"id": 45,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1550:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 49,
									"libraryName": {
										"id": 47,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2009,
										"src": "1569:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "1563:26:0",
									"typeName": {
										"id": 48,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1581:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "ERC721A.TokenOwnership",
									"id": 56,
									"members": [
										{
											"constant": false,
											"id": 51,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1730:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 56,
											"src": "1722:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 50,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1722:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 53,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "1843:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 56,
											"src": "1836:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 52,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1836:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 55,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "1918:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 56,
											"src": "1913:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 54,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1913:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1660:14:0",
									"nodeType": "StructDefinition",
									"scope": 1328,
									"src": "1653:278:0",
									"visibility": "public"
								},
								{
									"canonicalName": "ERC721A.AddressData",
									"id": 65,
									"members": [
										{
											"constant": false,
											"id": 58,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "2086:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 65,
											"src": "2079:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 57,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2079:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 60,
											"mutability": "mutable",
											"name": "numberMinted",
											"nameLocation": "2185:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 65,
											"src": "2178:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 59,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2178:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 62,
											"mutability": "mutable",
											"name": "numberBurned",
											"nameLocation": "2289:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 65,
											"src": "2282:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 61,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2282:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 64,
											"mutability": "mutable",
											"name": "aux",
											"nameLocation": "2516:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 65,
											"src": "2509:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 63,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2509:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressData",
									"nameLocation": "2002:11:0",
									"nodeType": "StructDefinition",
									"scope": 1328,
									"src": "1995:531:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 67,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "2600:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "2583:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 66,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2583:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 69,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "2673:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "2656:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 68,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2656:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 71,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "2725:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "2710:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 70,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2710:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 73,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "2772:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "2757:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 72,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2757:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 75,
									"mutability": "mutable",
									"name": "_url",
									"nameLocation": "2818:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "2803:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 74,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2803:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 80,
									"mutability": "mutable",
									"name": "_ownerships",
									"nameLocation": "3045:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "3001:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$56_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
									},
									"typeName": {
										"id": 79,
										"keyType": {
											"id": 76,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3009:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3001:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$56_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
										},
										"valueType": {
											"id": 78,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 77,
												"name": "TokenOwnership",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 56,
												"src": "3020:14:0"
											},
											"referencedDeclaration": 56,
											"src": "3020:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
												"typeString": "struct ERC721A.TokenOwnership"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 85,
									"mutability": "mutable",
									"name": "_addressData",
									"nameLocation": "3148:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "3108:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$65_storage_$",
										"typeString": "mapping(address => struct ERC721A.AddressData)"
									},
									"typeName": {
										"id": 84,
										"keyType": {
											"id": 81,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3116:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3108:31:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$65_storage_$",
											"typeString": "mapping(address => struct ERC721A.AddressData)"
										},
										"valueType": {
											"id": 83,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 82,
												"name": "AddressData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 65,
												"src": "3127:11:0"
											},
											"referencedDeclaration": 65,
											"src": "3127:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressData_$65_storage_ptr",
												"typeString": "struct ERC721A.AddressData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 89,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "3252:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "3216:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 88,
										"keyType": {
											"id": 86,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3224:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3216:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 87,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3235:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 95,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "3375:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "3322:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 94,
										"keyType": {
											"id": 90,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3330:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3322:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 93,
											"keyType": {
												"id": 91,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3349:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3341:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 92,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3360:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "3476:119:0",
										"statements": [
											{
												"expression": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 104,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "3486:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 105,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "3494:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3486:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3486:13:0"
											},
											{
												"expression": {
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 108,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "3509:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 109,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "3519:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3509:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "3509:17:0"
											},
											{
												"expression": {
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 112,
														"name": "_url",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "3536:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 113,
														"name": "url_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "3543:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3536:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "3536:11:0"
											},
											{
												"expression": {
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 116,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "3557:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 117,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "3573:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3573:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3557:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "3557:31:0"
											}
										]
									},
									"id": 122,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "3426:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "3412:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 96,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3412:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "3447:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "3433:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 98,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3433:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "url_",
												"nameLocation": "3470:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "3456:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 100,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3456:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:64:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3476:0:0"
									},
									"scope": 1328,
									"src": "3400:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3752:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3769:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 127,
												"id": 129,
												"nodeType": "Return",
												"src": "3762:8:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "3601:81:0",
										"text": " To change the starting tokenId, please override this function."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "3696:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3709:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3743:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3742:9:0"
									},
									"scope": 1328,
									"src": "3687:90:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "3959:244:0",
										"statements": [
											{
												"id": 144,
												"nodeType": "UncheckedBlock",
												"src": "4109:88:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 137,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "4140:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 138,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 69,
																	"src": "4156:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4140:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 140,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 131,
																	"src": "4171:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4171:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4140:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 136,
														"id": 143,
														"nodeType": "Return",
														"src": "4133:53:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "3783:118:0",
										"text": " @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3915:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3926:2:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "3950:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3949:9:0"
									},
									"scope": 1328,
									"src": "3906:297:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "4347:221:0",
										"statements": [
											{
												"id": 157,
												"nodeType": "UncheckedBlock",
												"src": "4489:73:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "4520:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 153,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 131,
																	"src": "4536:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4536:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4520:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 151,
														"id": 156,
														"nodeType": "Return",
														"src": "4513:38:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "4209:77:0",
										"text": " Returns the total amount of tokens minted in the contract."
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "4300:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4312:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "4338:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4337:9:0"
									},
									"scope": 1328,
									"src": "4291:277:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2032,
										2044
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "4743:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 170,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "4772:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 172,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1444,
																			"src": "4792:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1444_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1444_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 171,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "4787:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4787:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1444",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "4787:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "4772:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 176,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "4828:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 178,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1489,
																			"src": "4848:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1489_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1489_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 177,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "4843:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4843:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1489",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "4843:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "4828:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4772:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 185,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "4916:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 183,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "4892:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721A_$1328_$",
																	"typeString": "type(contract super ERC721A)"
																}
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2032,
															"src": "4892:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4892:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4772:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 169,
												"id": 188,
												"nodeType": "Return",
												"src": "4753:175:0"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "4574:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "4644:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 166,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 164,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2033,
												"src": "4711:6:0"
											},
											{
												"id": 165,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2045,
												"src": "4719:7:0"
											}
										],
										"src": "4702:25:0"
									},
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4669:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "4662:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 161,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:20:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "4737:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4737:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4736:6:0"
									},
									"scope": 1328,
									"src": "4635:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1369
									],
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5067:130:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 199,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "5081:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5098:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 200,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5090:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5090:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5081:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 208,
												"nodeType": "IfStatement",
												"src": "5077:60:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 205,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "5109:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5109:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 207,
													"nodeType": "RevertStatement",
													"src": "5102:35:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 211,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "5162:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$65_storage_$",
																		"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																	}
																},
																"id": 213,
																"indexExpression": {
																	"id": 212,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "5175:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5162:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$65_storage",
																	"typeString": "struct ERC721A.AddressData storage ref"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 58,
															"src": "5162:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 209,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5154:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5154:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 198,
												"id": 216,
												"nodeType": "Return",
												"src": "5147:43:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "4941:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5003:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 195,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5040:8:0"
									},
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5021:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5013:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5013:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5012:15:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5058:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5057:9:0"
									},
									"scope": 1328,
									"src": "4994:203:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "5344:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 228,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "5369:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$65_storage_$",
																		"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																	}
																},
																"id": 230,
																"indexExpression": {
																	"id": 229,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "5382:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5369:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$65_storage",
																	"typeString": "struct ERC721A.AddressData storage ref"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "numberMinted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 60,
															"src": "5369:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5361:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 226,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5361:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5361:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 225,
												"id": 233,
												"nodeType": "Return",
												"src": "5354:48:0"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5203:66:0",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "5283:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5305:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "5297:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5296:15:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "5335:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5334:9:0"
									},
									"scope": 1328,
									"src": "5274:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "5572:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 245,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "5597:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$65_storage_$",
																		"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																	}
																},
																"id": 247,
																"indexExpression": {
																	"id": 246,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "5610:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5597:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$65_storage",
																	"typeString": "struct ERC721A.AddressData storage ref"
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "numberBurned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 62,
															"src": "5597:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5589:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5589:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5589:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 242,
												"id": 250,
												"nodeType": "Return",
												"src": "5582:48:0"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "5415:82:0",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "5511:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5533:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "5525:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5524:15:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "5563:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5562:9:0"
									},
									"scope": 1328,
									"src": "5502:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "5813:47:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 260,
															"name": "_addressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "5830:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$65_storage_$",
																"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
															}
														},
														"id": 262,
														"indexExpression": {
															"id": 261,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "5843:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5830:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressData_$65_storage",
															"typeString": "struct ERC721A.AddressData storage ref"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "aux",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 64,
													"src": "5830:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 259,
												"id": 264,
												"nodeType": "Return",
												"src": "5823:30:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "5643:102:0",
										"text": " Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "5759:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5775:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5767:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5766:15:0"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5805:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 257,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5805:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5804:8:0"
									},
									"scope": 1328,
									"src": "5750:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "6095:46:0",
										"statements": [
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 274,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "6105:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$65_storage_$",
																	"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																}
															},
															"id": 276,
															"indexExpression": {
																"id": 275,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "6118:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6105:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$65_storage",
																"typeString": "struct ERC721A.AddressData storage ref"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "aux",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "6105:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "aux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "6131:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6105:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "6105:29:0"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5866:171:0",
										"text": " Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "6051:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6067:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "6059:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6059:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "6081:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "6074:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 270,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6074:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6058:27:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6095:0:0"
									},
									"scope": 1328,
									"src": "6042:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "6422:999:0",
										"statements": [
											{
												"assignments": [
													292
												],
												"declarations": [
													{
														"constant": false,
														"id": 292,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "6440:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 355,
														"src": "6432:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 291,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6432:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"id": 293,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 285,
													"src": "6447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6432:22:0"
											},
											{
												"id": 351,
												"nodeType": "UncheckedBlock",
												"src": "6465:902:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 295,
																		"name": "_startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 131,
																		"src": "6493:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6493:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 297,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6512:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6493:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 299,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6520:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 300,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "6527:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6520:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6493:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 350,
														"nodeType": "IfStatement",
														"src": "6489:868:0",
														"trueBody": {
															"id": 349,
															"nodeType": "Block",
															"src": "6542:815:0",
															"statements": [
																{
																	"assignments": [
																		305
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 305,
																			"mutability": "mutable",
																			"name": "ownership",
																			"nameLocation": "6582:9:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 349,
																			"src": "6560:31:0",
																			"stateVariable": false,
																			"storageLocation": "memory",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
																				"typeString": "struct ERC721A.TokenOwnership"
																			},
																			"typeName": {
																				"id": 304,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 303,
																					"name": "TokenOwnership",
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 56,
																					"src": "6560:14:0"
																				},
																				"referencedDeclaration": 56,
																				"src": "6560:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																					"typeString": "struct ERC721A.TokenOwnership"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 309,
																	"initialValue": {
																		"baseExpression": {
																			"id": 306,
																			"name": "_ownerships",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 80,
																			"src": "6594:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$56_storage_$",
																				"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																			}
																		},
																		"id": 308,
																		"indexExpression": {
																			"id": 307,
																			"name": "curr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "6606:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6594:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenOwnership_$56_storage",
																			"typeString": "struct ERC721A.TokenOwnership storage ref"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "6560:51:0"
																},
																{
																	"condition": {
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "6633:17:0",
																		"subExpression": {
																			"expression": {
																				"id": 310,
																				"name": "ownership",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 305,
																				"src": "6634:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
																					"typeString": "struct ERC721A.TokenOwnership memory"
																				}
																			},
																			"id": 311,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "burned",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 55,
																			"src": "6634:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 348,
																	"nodeType": "IfStatement",
																	"src": "6629:714:0",
																	"trueBody": {
																		"id": 347,
																		"nodeType": "Block",
																		"src": "6652:691:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"id": 319,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 313,
																							"name": "ownership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 305,
																							"src": "6678:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 314,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 51,
																						"src": "6678:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"arguments": [
																							{
																								"hexValue": "30",
																								"id": 317,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6704:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								}
																							],
																							"id": 316,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "6696:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 315,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "6696:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 318,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6696:10:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "6678:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 323,
																				"nodeType": "IfStatement",
																				"src": "6674:99:0",
																				"trueBody": {
																					"id": 322,
																					"nodeType": "Block",
																					"src": "6708:65:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 320,
																								"name": "ownership",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 305,
																								"src": "6741:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
																									"typeString": "struct ERC721A.TokenOwnership memory"
																								}
																							},
																							"functionReturnParameters": 290,
																							"id": 321,
																							"nodeType": "Return",
																							"src": "6734:16:0"
																						}
																					]
																				}
																			},
																			{
																				"body": {
																					"id": 345,
																					"nodeType": "Block",
																					"src": "7083:242:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 326,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "--",
																								"prefix": false,
																								"src": "7109:6:0",
																								"subExpression": {
																									"id": 325,
																									"name": "curr",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 292,
																									"src": "7109:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 327,
																							"nodeType": "ExpressionStatement",
																							"src": "7109:6:0"
																						},
																						{
																							"expression": {
																								"id": 332,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 328,
																									"name": "ownership",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 305,
																									"src": "7141:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
																										"typeString": "struct ERC721A.TokenOwnership memory"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 329,
																										"name": "_ownerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 80,
																										"src": "7153:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$56_storage_$",
																											"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																										}
																									},
																									"id": 331,
																									"indexExpression": {
																										"id": 330,
																										"name": "curr",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 292,
																										"src": "7165:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "7153:17:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenOwnership_$56_storage",
																										"typeString": "struct ERC721A.TokenOwnership storage ref"
																									}
																								},
																								"src": "7141:29:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
																									"typeString": "struct ERC721A.TokenOwnership memory"
																								}
																							},
																							"id": 333,
																							"nodeType": "ExpressionStatement",
																							"src": "7141:29:0"
																						},
																						{
																							"condition": {
																								"commonType": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								"id": 340,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"id": 334,
																										"name": "ownership",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 305,
																										"src": "7200:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
																											"typeString": "struct ERC721A.TokenOwnership memory"
																										}
																									},
																									"id": 335,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "addr",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 51,
																									"src": "7200:14:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "!=",
																								"rightExpression": {
																									"arguments": [
																										{
																											"hexValue": "30",
																											"id": 338,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "7226:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											},
																											"value": "0"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											}
																										],
																										"id": 337,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "7218:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_address_$",
																											"typeString": "type(address)"
																										},
																										"typeName": {
																											"id": 336,
																											"name": "address",
																											"nodeType": "ElementaryTypeName",
																											"src": "7218:7:0",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 339,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "7218:10:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"src": "7200:28:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"id": 344,
																							"nodeType": "IfStatement",
																							"src": "7196:107:0",
																							"trueBody": {
																								"id": 343,
																								"nodeType": "Block",
																								"src": "7230:73:0",
																								"statements": [
																									{
																										"expression": {
																											"id": 341,
																											"name": "ownership",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 305,
																											"src": "7267:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
																												"typeString": "struct ERC721A.TokenOwnership memory"
																											}
																										},
																										"functionReturnParameters": 290,
																										"id": 342,
																										"nodeType": "Return",
																										"src": "7260:16:0"
																									}
																								]
																							}
																						}
																					]
																				},
																				"condition": {
																					"hexValue": "74727565",
																					"id": 324,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7077:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"id": 346,
																				"nodeType": "WhileStatement",
																				"src": "7070:255:0"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "7383:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7383:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "RevertStatement",
												"src": "7376:38:0"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "6147:185:0",
										"text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
									},
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "6346:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6367:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "6359:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:17:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "6399:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
													"typeString": "struct ERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 288,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 287,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 56,
														"src": "6399:14:0"
													},
													"referencedDeclaration": 56,
													"src": "6399:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
														"typeString": "struct ERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:23:0"
									},
									"scope": 1328,
									"src": "6337:1084:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1377
									],
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "7551:50:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 366,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "7581:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 365,
															"name": "_ownershipOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "7568:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$56_memory_ptr_$",
																"typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
															}
														},
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7568:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership memory"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 51,
													"src": "7568:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 364,
												"id": 369,
												"nodeType": "Return",
												"src": "7561:33:0"
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "7427:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "7487:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 361,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7524:8:0"
									},
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "7495:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7494:17:0"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "7542:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7542:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7541:9:0"
									},
									"scope": 1328,
									"src": "7478:123:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1474
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "7732:29:0",
										"statements": [
											{
												"expression": {
													"id": 378,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 71,
													"src": "7749:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 377,
												"id": 379,
												"nodeType": "Return",
												"src": "7742:12:0"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "7607:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7672:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 374,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7699:8:0"
									},
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7676:2:0"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "7717:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 375,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7717:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7716:15:0"
									},
									"scope": 1328,
									"src": "7663:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1480
									],
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "7896:31:0",
										"statements": [
											{
												"expression": {
													"id": 388,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 73,
													"src": "7913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 387,
												"id": 389,
												"nodeType": "Return",
												"src": "7906:14:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "7767:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7834:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 384,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7863:8:0"
									},
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7840:2:0"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "7881:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 385,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7881:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7880:15:0"
									},
									"scope": 1328,
									"src": "7825:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1488
									],
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "8081:225:0",
										"statements": [
											{
												"condition": {
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8095:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 401,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "8104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 400,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "8096:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8096:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 407,
												"nodeType": "IfStatement",
												"src": "8091:59:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 404,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "8121:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8121:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 406,
													"nodeType": "RevertStatement",
													"src": "8114:36:0"
												}
											},
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "8175:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "8161:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 408,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "8161:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "8185:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8185:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8161:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 415,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "8218:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8212:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 413,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "8212:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8212:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8212:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8237:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8212:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8297:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8212:87:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 424,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "8265:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 425,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "8274:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1891,
																			"src": "8274:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8274:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 422,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "8248:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "8248:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8248:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8241:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 420,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "8241:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8241:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 399,
												"id": 432,
												"nodeType": "Return",
												"src": "8205:94:0"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "7933:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8002:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 396,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8048:8:0"
									},
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "8011:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8010:17:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "8066:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 397,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8066:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8065:15:0"
									},
									"scope": 1328,
									"src": "7993:313:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "8613:28:0",
										"statements": [
											{
												"expression": {
													"id": 440,
													"name": "_url",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 75,
													"src": "8630:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 439,
												"id": 441,
												"nodeType": "Return",
												"src": "8623:11:0"
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "8312:230:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
									},
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "8556:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8564:2:0"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "8598:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8598:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8597:15:0"
									},
									"scope": 1328,
									"src": "8547:94:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1405
									],
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "8762:300:0",
										"statements": [
											{
												"assignments": [
													453
												],
												"declarations": [
													{
														"constant": false,
														"id": 453,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "8780:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 488,
														"src": "8772:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 452,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8772:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"arguments": [
														{
															"id": 456,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "8804:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 454,
															"name": "ERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "8788:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721A_$1328_$",
																"typeString": "type(contract ERC721A)"
															}
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 371,
														"src": "8788:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8788:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8772:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 459,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "8826:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 460,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "8832:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8826:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 465,
												"nodeType": "IfStatement",
												"src": "8822:48:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 462,
															"name": "ApprovalToCurrentOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "8846:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8846:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 464,
													"nodeType": "RevertStatement",
													"src": "8839:31:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 466,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1796,
																"src": "8885:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8885:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 468,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "8901:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "8885:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "8910:38:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 471,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "8928:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 472,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1796,
																		"src": "8935:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8935:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 470,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "8911:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8911:37:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8885:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 481,
												"nodeType": "IfStatement",
												"src": "8881:136:0",
												"trueBody": {
													"id": 480,
													"nodeType": "Block",
													"src": "8950:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 477,
																	"name": "ApprovalCallerNotOwnerNorApproved",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "8971:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8971:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 479,
															"nodeType": "RevertStatement",
															"src": "8964:42:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 483,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "9036:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 484,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "9040:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "9049:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 482,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "9027:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9027:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "9027:28:0"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "8649:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "8709:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 450,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8753:8:0"
									},
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8725:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "8717:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8737:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "8729:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8716:29:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8762:0:0"
									},
									"scope": 1328,
									"src": "8700:362:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1413
									],
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "9200:123:0",
										"statements": [
											{
												"condition": {
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9214:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 499,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "9223:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 498,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "9215:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9215:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 505,
												"nodeType": "IfStatement",
												"src": "9210:64:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 502,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "9240:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9240:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 504,
													"nodeType": "RevertStatement",
													"src": "9233:41:0"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 506,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "9292:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 508,
													"indexExpression": {
														"id": 507,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "9308:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9292:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 497,
												"id": 509,
												"nodeType": "Return",
												"src": "9285:31:0"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "9068:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "9132:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 494,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9173:8:0"
									},
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9152:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "9144:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9143:17:0"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "9191:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9190:9:0"
									},
									"scope": 1328,
									"src": "9123:200:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1421
									],
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "9474:198:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 520,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "9488:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 521,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "9500:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9500:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9488:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 527,
												"nodeType": "IfStatement",
												"src": "9484:54:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 524,
															"name": "ApproveToCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "9521:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9521:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 526,
													"nodeType": "RevertStatement",
													"src": "9514:24:0"
												}
											},
											{
												"expression": {
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 528,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "9549:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 532,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 529,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1796,
																	"src": "9568:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9568:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9549:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 533,
														"indexExpression": {
															"id": 531,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9582:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9549:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 534,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "9594:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9549:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "9549:53:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 538,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1796,
																"src": "9632:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9632:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9646:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "9656:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 537,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "9617:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9617:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "EmitStatement",
												"src": "9612:53:0"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "9329:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "9399:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 518,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9465:8:0"
									},
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9425:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "9417:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "9440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "9435:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 515,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9435:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9416:33:0"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9474:0:0"
									},
									"scope": 1328,
									"src": "9390:282:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1431
									],
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "9841:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 556,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "9858:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 558,
														"indexExpression": {
															"id": 557,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "9877:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9858:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 560,
													"indexExpression": {
														"id": 559,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "9884:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9858:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 555,
												"id": 561,
												"nodeType": "Return",
												"src": "9851:42:0"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "9678:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "9747:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 552,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9817:8:0"
									},
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9772:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "9764:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9787:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "9779:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9779:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9763:33:0"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "9835:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 553,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9835:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9834:6:0"
									},
									"scope": 1328,
									"src": "9738:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1397
									],
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "10081:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 575,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "10101:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "10107:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "10111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 574,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "10091:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10091:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "10091:28:0"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "9906:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "9971:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 572,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10072:8:0"
									},
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10001:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "9993:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10023:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "10015:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10043:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "10035:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9983:73:0"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10081:0:0"
									},
									"scope": 1328,
									"src": "9962:164:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "10315:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 593,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "10342:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 594,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "10348:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 595,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "10352:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10361:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 592,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															600,
															636
														],
														"referencedDeclaration": 636,
														"src": "10325:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10325:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "10325:39:0"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "10132:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "10201:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 590,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10306:8:0"
									},
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10235:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "10227:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10257:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "10249:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10277:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "10269:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10217:73:0"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10315:0:0"
									},
									"scope": 1328,
									"src": "10192:179:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1443
									],
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "10588:208:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 614,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "10608:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 615,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10614:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10618:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 613,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "10598:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10598:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "10598:28:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 619,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "10640:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1507,
															"src": "10640:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10640:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "10659:57:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 623,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "10691:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 624,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 605,
																	"src": "10697:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 625,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "10701:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 626,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10710:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 622,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1301,
																"src": "10660:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10660:56:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10640:76:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 634,
												"nodeType": "IfStatement",
												"src": "10636:154:0",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "10718:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 630,
																	"name": "TransferToNonERC721ReceiverImplementer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "10739:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10739:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "RevertStatement",
															"src": "10732:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "10377:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "10446:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 611,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10579:8:0"
									},
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10480:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "10472:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10502:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "10494:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10522:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "10514:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10552:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "10539:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 608,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10539:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10462:101:0"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10588:0:0"
									},
									"scope": 1328,
									"src": "10437:359:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "11105:109:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 644,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 131,
																	"src": "11122:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11122:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 646,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "11141:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11122:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 648,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "11152:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 649,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "11162:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11152:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "11122:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "11179:28:0",
														"subExpression": {
															"expression": {
																"baseExpression": {
																	"id": 652,
																	"name": "_ownerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 80,
																	"src": "11180:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$56_storage_$",
																		"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																	}
																},
																"id": 654,
																"indexExpression": {
																	"id": 653,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "11192:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11180:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$56_storage",
																	"typeString": "struct ERC721A.TokenOwnership storage ref"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "burned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 55,
															"src": "11180:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11122:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 643,
												"id": 658,
												"nodeType": "Return",
												"src": "11115:92:0"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "10802:235:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "11051:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11067:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "11059:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11058:17:0"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "11099:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 641,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11099:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11098:6:0"
									},
									"scope": 1328,
									"src": "11042:172:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "11278:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 668,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "11298:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 669,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "11302:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11312:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 667,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															674,
															692
														],
														"referencedDeclaration": 692,
														"src": "11288:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11288:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "11288:27:0"
											}
										]
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11229:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11247:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "11239:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "11259:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "11251:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11238:30:0"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11278:0:0"
									},
									"scope": 1328,
									"src": "11220:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "11781:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 685,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "11797:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 686,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "11801:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 687,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "11811:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11818:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 684,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "11791:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bytes memory,bool)"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11791:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "11791:32:0"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "11328:340:0",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11682:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11709:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "11701:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "11729:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "11721:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "11760:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "11747:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 680,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11747:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11691:80:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11781:0:0"
									},
									"scope": 1328,
									"src": "11673:157:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "12200:1610:0",
										"statements": [
											{
												"assignments": [
													705
												],
												"declarations": [
													{
														"constant": false,
														"id": 705,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "12218:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 858,
														"src": "12210:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12210:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"initialValue": {
													"id": 706,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 67,
													"src": "12233:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12210:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 708,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "12260:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12274:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12266:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 709,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12266:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12266:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 717,
												"nodeType": "IfStatement",
												"src": "12256:48:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 714,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "12285:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12285:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 716,
													"nodeType": "RevertStatement",
													"src": "12278:26:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 718,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "12318:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12330:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12318:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "IfStatement",
												"src": "12314:44:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 721,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "12340:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12340:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 723,
													"nodeType": "RevertStatement",
													"src": "12333:25:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12399:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12391:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 726,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12391:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12391:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 730,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "12403:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "12407:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 732,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "12421:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 725,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "12369:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12369:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "12369:61:0"
											},
											{
												"id": 847,
												"nodeType": "UncheckedBlock",
												"src": "12677:1057:0",
												"statements": [
													{
														"expression": {
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 735,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "12701:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$65_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 737,
																	"indexExpression": {
																		"id": 736,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "12714:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12701:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$65_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 738,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "12701:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 741,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "12736:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12729:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 739,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "12729:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12729:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "12701:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 744,
														"nodeType": "ExpressionStatement",
														"src": "12701:44:0"
													},
													{
														"expression": {
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 745,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "12759:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$65_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 747,
																	"indexExpression": {
																		"id": 746,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "12772:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12759:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$65_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "numberMinted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 60,
																"src": "12759:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 751,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "12799:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12792:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 749,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "12792:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12792:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "12759:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 754,
														"nodeType": "ExpressionStatement",
														"src": "12759:49:0"
													},
													{
														"expression": {
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 755,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 80,
																		"src": "12823:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$56_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 757,
																	"indexExpression": {
																		"id": 756,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 705,
																		"src": "12835:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12823:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$56_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 758,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 51,
																"src": "12823:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 759,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "12856:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12823:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 761,
														"nodeType": "ExpressionStatement",
														"src": "12823:35:0"
													},
													{
														"expression": {
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 762,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 80,
																		"src": "12872:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$56_storage_$",
																			"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 764,
																	"indexExpression": {
																		"id": 763,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 705,
																		"src": "12884:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12872:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$56_storage",
																		"typeString": "struct ERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 53,
																"src": "12872:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 768,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "12922:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "12922:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12915:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 766,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "12915:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12915:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "12872:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 772,
														"nodeType": "ExpressionStatement",
														"src": "12872:66:0"
													},
													{
														"assignments": [
															774
														],
														"declarations": [
															{
																"constant": false,
																"id": 774,
																"mutability": "mutable",
																"name": "updatedIndex",
																"nameLocation": "12961:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 847,
																"src": "12953:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 773,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12953:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 776,
														"initialValue": {
															"id": 775,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "12976:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12953:35:0"
													},
													{
														"assignments": [
															778
														],
														"declarations": [
															{
																"constant": false,
																"id": 778,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "13010:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 847,
																"src": "13002:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 777,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13002:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 782,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "13016:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 780,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "13031:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13016:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13002:37:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 783,
																"name": "safe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "13058:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 784,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "13066:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "isContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1507,
																	"src": "13066:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13066:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "13058:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 841,
															"nodeType": "Block",
															"src": "13532:150:0",
															"statements": [
																{
																	"body": {
																		"id": 836,
																		"nodeType": "Block",
																		"src": "13553:86:0",
																		"statements": [
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 829,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "13597:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 828,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "13589:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 827,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "13589:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 830,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "13589:10:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 831,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 695,
																							"src": "13601:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 833,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "13605:14:0",
																							"subExpression": {
																								"id": 832,
																								"name": "updatedIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 774,
																								"src": "13605:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 826,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1343,
																						"src": "13580:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 834,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13580:40:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 835,
																				"nodeType": "EmitStatement",
																				"src": "13575:45:0"
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 837,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 774,
																			"src": "13647:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 838,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 778,
																			"src": "13663:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13647:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 840,
																	"nodeType": "DoWhileStatement",
																	"src": "13550:118:0"
																}
															]
														},
														"id": 842,
														"nodeType": "IfStatement",
														"src": "13054:628:0",
														"trueBody": {
															"id": 825,
															"nodeType": "Block",
															"src": "13083:443:0",
															"statements": [
																{
																	"body": {
																		"id": 813,
																		"nodeType": "Block",
																		"src": "13104:277:0",
																		"statements": [
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 791,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "13148:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 790,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "13140:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 789,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "13140:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 792,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "13140:10:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 793,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 695,
																							"src": "13152:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 794,
																							"name": "updatedIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 774,
																							"src": "13156:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 788,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1343,
																						"src": "13131:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 795,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13131:38:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 796,
																				"nodeType": "EmitStatement",
																				"src": "13126:43:0"
																			},
																			{
																				"condition": {
																					"id": 807,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "13195:70:0",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 800,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "13235:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 799,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "13227:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 798,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "13227:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 801,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13227:10:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 802,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 695,
																								"src": "13239:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 804,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "13243:14:0",
																								"subExpression": {
																									"id": 803,
																									"name": "updatedIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 774,
																									"src": "13243:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 805,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 699,
																								"src": "13259:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 797,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1301,
																							"src": "13196:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 806,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "13196:69:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 812,
																				"nodeType": "IfStatement",
																				"src": "13191:172:0",
																				"trueBody": {
																					"id": 811,
																					"nodeType": "Block",
																					"src": "13267:96:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 808,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 30,
																									"src": "13300:38:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 809,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13300:40:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 810,
																							"nodeType": "RevertStatement",
																							"src": "13293:47:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 814,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 774,
																			"src": "13389:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 815,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 778,
																			"src": "13405:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13389:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 817,
																	"nodeType": "DoWhileStatement",
																	"src": "13101:309:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 818,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "13472:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 819,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 705,
																			"src": "13489:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13472:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 824,
																	"nodeType": "IfStatement",
																	"src": "13468:43:0",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 821,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "13503:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13503:8:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 823,
																		"nodeType": "ExpressionStatement",
																		"src": "13503:8:0"
																	}
																}
															]
														}
													},
													{
														"expression": {
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 843,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "13695:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 844,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "13711:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13695:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 846,
														"nodeType": "ExpressionStatement",
														"src": "13695:28:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13772:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13764:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 849,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13764:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13764:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 853,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "13776:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "13780:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 855,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "13794:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 848,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "13743:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13743:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "13743:60:0"
											}
										]
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "11836:236:0",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
									},
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "12086:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12109:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "12101:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "12129:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "12121:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "12160:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "12147:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 698,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12147:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "safe",
												"nameLocation": "12180:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "12175:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12175:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12091:99:0"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12200:0:0"
									},
									"scope": 1328,
									"src": "12077:1733:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "14152:1982:0",
										"statements": [
											{
												"assignments": [
													871
												],
												"declarations": [
													{
														"constant": false,
														"id": 871,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "14184:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "14162:35:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 870,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 869,
																"name": "TokenOwnership",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 56,
																"src": "14162:14:0"
															},
															"referencedDeclaration": 56,
															"src": "14162:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																"typeString": "struct ERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 875,
												"initialValue": {
													"arguments": [
														{
															"id": 873,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "14213:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 872,
														"name": "_ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "14200:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$56_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14200:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
														"typeString": "struct ERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14162:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 876,
															"name": "prevOwnership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "14236:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
																"typeString": "struct ERC721A.TokenOwnership memory"
															}
														},
														"id": 877,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 51,
														"src": "14236:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 878,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "14258:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14236:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 883,
												"nodeType": "IfStatement",
												"src": "14232:67:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 880,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "14271:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14271:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 882,
													"nodeType": "RevertStatement",
													"src": "14264:35:0"
												}
											},
											{
												"assignments": [
													885
												],
												"declarations": [
													{
														"constant": false,
														"id": 885,
														"mutability": "mutable",
														"name": "isApprovedOrOwner",
														"nameLocation": "14315:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "14310:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 884,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14310:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 886,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1796,
																			"src": "14336:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14336:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 888,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 862,
																		"src": "14352:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "14336:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 891,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 862,
																			"src": "14389:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 892,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1796,
																				"src": "14395:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14395:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 890,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "14372:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14372:36:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "14336:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 897,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 866,
																			"src": "14436:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 896,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "14424:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14424:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 899,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1796,
																		"src": "14448:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14448:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14424:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "14336:124:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 903,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14335:126:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14310:151:0"
											},
											{
												"condition": {
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "14476:18:0",
													"subExpression": {
														"id": 905,
														"name": "isApprovedOrOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "14477:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 910,
												"nodeType": "IfStatement",
												"src": "14472:66:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 907,
															"name": "TransferCallerNotOwnerNorApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "14503:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14503:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 909,
													"nodeType": "RevertStatement",
													"src": "14496:42:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 911,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "14552:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14566:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14558:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 912,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14558:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14558:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14552:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 920,
												"nodeType": "IfStatement",
												"src": "14548:52:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 917,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "14577:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14577:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 919,
													"nodeType": "RevertStatement",
													"src": "14570:30:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 922,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "14633:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 923,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "14639:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "14643:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14652:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 921,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "14611:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14611:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "14611:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14733:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14725:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 929,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14725:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14725:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "14737:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 934,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "14746:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 928,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "14716:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14716:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "14716:35:0"
											},
											{
												"id": 1014,
												"nodeType": "UncheckedBlock",
												"src": "15017:1016:0",
												"statements": [
													{
														"expression": {
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 937,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "15041:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$65_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 939,
																	"indexExpression": {
																		"id": 938,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 862,
																		"src": "15054:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15041:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$65_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 940,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "15041:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15071:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "15041:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 943,
														"nodeType": "ExpressionStatement",
														"src": "15041:31:0"
													},
													{
														"expression": {
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 944,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "15086:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$65_storage_$",
																			"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 946,
																	"indexExpression": {
																		"id": 945,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 864,
																		"src": "15099:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15086:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$65_storage",
																		"typeString": "struct ERC721A.AddressData storage ref"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "15086:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15114:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "15086:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 950,
														"nodeType": "ExpressionStatement",
														"src": "15086:29:0"
													},
													{
														"assignments": [
															953
														],
														"declarations": [
															{
																"constant": false,
																"id": 953,
																"mutability": "mutable",
																"name": "currSlot",
																"nameLocation": "15153:8:0",
																"nodeType": "VariableDeclaration",
																"scope": 1014,
																"src": "15130:31:0",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																	"typeString": "struct ERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 952,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 951,
																		"name": "TokenOwnership",
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 56,
																		"src": "15130:14:0"
																	},
																	"referencedDeclaration": 56,
																	"src": "15130:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																		"typeString": "struct ERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 957,
														"initialValue": {
															"baseExpression": {
																"id": 954,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "15164:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$56_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 956,
															"indexExpression": {
																"id": 955,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "15176:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15164:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$56_storage",
																"typeString": "struct ERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15130:54:0"
													},
													{
														"expression": {
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 958,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "15198:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																		"typeString": "struct ERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 51,
																"src": "15198:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 961,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "15214:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15198:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 963,
														"nodeType": "ExpressionStatement",
														"src": "15198:18:0"
													},
													{
														"expression": {
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 964,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "15230:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																		"typeString": "struct ERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 53,
																"src": "15230:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 969,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "15263:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "15263:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15256:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 967,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "15256:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15256:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "15230:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 973,
														"nodeType": "ExpressionStatement",
														"src": "15230:49:0"
													},
													{
														"assignments": [
															975
														],
														"declarations": [
															{
																"constant": false,
																"id": 975,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "15535:11:0",
																"nodeType": "VariableDeclaration",
																"scope": 1014,
																"src": "15527:19:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 974,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15527:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 979,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 976,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "15549:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15559:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "15549:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15527:33:0"
													},
													{
														"assignments": [
															982
														],
														"declarations": [
															{
																"constant": false,
																"id": 982,
																"mutability": "mutable",
																"name": "nextSlot",
																"nameLocation": "15597:8:0",
																"nodeType": "VariableDeclaration",
																"scope": 1014,
																"src": "15574:31:0",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																	"typeString": "struct ERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 981,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 980,
																		"name": "TokenOwnership",
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 56,
																		"src": "15574:14:0"
																	},
																	"referencedDeclaration": 56,
																	"src": "15574:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																		"typeString": "struct ERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 986,
														"initialValue": {
															"baseExpression": {
																"id": 983,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "15608:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$56_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 985,
															"indexExpression": {
																"id": 984,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "15620:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15608:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$56_storage",
																"typeString": "struct ERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15574:58:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 987,
																	"name": "nextSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "15650:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																		"typeString": "struct ERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 988,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 51,
																"src": "15650:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15675:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15667:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 989,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15667:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15667:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15650:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1013,
														"nodeType": "IfStatement",
														"src": "15646:377:0",
														"trueBody": {
															"id": 1012,
															"nodeType": "Block",
															"src": "15679:344:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 994,
																			"name": "nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 975,
																			"src": "15842:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 995,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "15857:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15842:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1011,
																	"nodeType": "IfStatement",
																	"src": "15838:171:0",
																	"trueBody": {
																		"id": 1010,
																		"nodeType": "Block",
																		"src": "15872:137:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 1001,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 997,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 982,
																							"src": "15894:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																								"typeString": "struct ERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 999,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 51,
																						"src": "15894:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 1000,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 862,
																						"src": "15910:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "15894:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 1002,
																				"nodeType": "ExpressionStatement",
																				"src": "15894:20:0"
																			},
																			{
																				"expression": {
																					"id": 1008,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 1003,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 982,
																							"src": "15936:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																								"typeString": "struct ERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 1005,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 53,
																						"src": "15936:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 1006,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 871,
																							"src": "15962:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1007,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 53,
																						"src": "15962:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "15936:54:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 1009,
																				"nodeType": "ExpressionStatement",
																				"src": "15936:54:0"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1016,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "16057:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1017,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "16063:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1018,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "16067:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1015,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "16048:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16048:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "EmitStatement",
												"src": "16043:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1022,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "16106:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "16112:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1024,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "16116:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16125:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1021,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "16085:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16085:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "16085:42:0"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "13816:231:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "14061:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14088:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "14080:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14080:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14110:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "14102:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14130:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "14122:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14070:73:0"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14152:0:0"
									},
									"scope": 1328,
									"src": "14052:2082:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "16261:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1036,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "16277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16286:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1035,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1041,
															1223
														],
														"referencedDeclaration": 1223,
														"src": "16271:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16271:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "16271:21:0"
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "16140:67:0",
										"text": " @dev This is equivalent to _burn(tokenId, false)"
									},
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "16221:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16235:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "16227:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16226:17:0"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16261:0:0"
									},
									"scope": 1328,
									"src": "16212:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "16585:2286:0",
										"statements": [
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "16617:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "16595:35:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 1050,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1049,
																"name": "TokenOwnership",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 56,
																"src": "16595:14:0"
															},
															"referencedDeclaration": 56,
															"src": "16595:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																"typeString": "struct ERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1055,
												"initialValue": {
													"arguments": [
														{
															"id": 1053,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "16646:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1052,
														"name": "_ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "16633:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$56_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16633:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
														"typeString": "struct ERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16595:59:0"
											},
											{
												"assignments": [
													1057
												],
												"declarations": [
													{
														"constant": false,
														"id": 1057,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "16673:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "16665:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1056,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16665:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1060,
												"initialValue": {
													"expression": {
														"id": 1058,
														"name": "prevOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "16680:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
															"typeString": "struct ERC721A.TokenOwnership memory"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 51,
													"src": "16680:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16665:33:0"
											},
											{
												"condition": {
													"id": 1061,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1046,
													"src": "16713:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1090,
												"nodeType": "IfStatement",
												"src": "16709:284:0",
												"trueBody": {
													"id": 1089,
													"nodeType": "Block",
													"src": "16728:265:0",
													"statements": [
														{
															"assignments": [
																1063
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1063,
																	"mutability": "mutable",
																	"name": "isApprovedOrOwner",
																	"nameLocation": "16747:17:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1089,
																	"src": "16742:22:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1062,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "16742:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1082,
															"initialValue": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"id": 1067,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1064,
																						"name": "_msgSender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1796,
																						"src": "16768:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 1065,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16768:12:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 1066,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1057,
																					"src": "16784:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "16768:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "||",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 1069,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1057,
																						"src": "16825:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1070,
																							"name": "_msgSender",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1796,
																							"src": "16831:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 1071,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16831:12:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1068,
																					"name": "isApprovedForAll",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 563,
																					"src": "16808:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address,address) view returns (bool)"
																					}
																				},
																				"id": 1072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16808:36:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "16768:76:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1075,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1044,
																						"src": "16876:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1074,
																					"name": "getApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 511,
																					"src": "16864:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																						"typeString": "function (uint256) view returns (address)"
																					}
																				},
																				"id": 1076,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16864:20:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1077,
																					"name": "_msgSender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1796,
																					"src": "16888:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1078,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16888:12:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "16864:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "16768:132:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1081,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16767:134:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16742:159:0"
														},
														{
															"condition": {
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "16920:18:0",
																"subExpression": {
																	"id": 1083,
																	"name": "isApprovedOrOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "16921:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1088,
															"nodeType": "IfStatement",
															"src": "16916:66:0",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1085,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "16947:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16947:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1087,
																"nodeType": "RevertStatement",
																"src": "16940:42:0"
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1092,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "17025:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17039:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17031:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1093,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17031:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17031:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1097,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "17043:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17052:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1091,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "17003:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17003:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "17003:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17133:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17125:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17125:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17125:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1106,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "17137:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1107,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "17146:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1101,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "17116:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17116:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "17116:35:0"
											},
											{
												"id": 1198,
												"nodeType": "UncheckedBlock",
												"src": "17417:1190:0",
												"statements": [
													{
														"assignments": [
															1112
														],
														"declarations": [
															{
																"constant": false,
																"id": 1112,
																"mutability": "mutable",
																"name": "addressData",
																"nameLocation": "17461:11:0",
																"nodeType": "VariableDeclaration",
																"scope": 1198,
																"src": "17441:31:0",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$65_storage_ptr",
																	"typeString": "struct ERC721A.AddressData"
																},
																"typeName": {
																	"id": 1111,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 1110,
																		"name": "AddressData",
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 65,
																		"src": "17441:11:0"
																	},
																	"referencedDeclaration": 65,
																	"src": "17441:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$65_storage_ptr",
																		"typeString": "struct ERC721A.AddressData"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1116,
														"initialValue": {
															"baseExpression": {
																"id": 1113,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "17475:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$65_storage_$",
																	"typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
																}
															},
															"id": 1115,
															"indexExpression": {
																"id": 1114,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "17488:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17475:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$65_storage",
																"typeString": "struct ERC721A.AddressData storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17441:52:0"
													},
													{
														"expression": {
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1117,
																	"name": "addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "17507:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$65_storage_ptr",
																		"typeString": "struct ERC721A.AddressData storage pointer"
																	}
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "17507:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17530:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "17507:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1122,
														"nodeType": "ExpressionStatement",
														"src": "17507:24:0"
													},
													{
														"expression": {
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1123,
																	"name": "addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "17545:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$65_storage_ptr",
																		"typeString": "struct ERC721A.AddressData storage pointer"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "numberBurned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 62,
																"src": "17545:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17573:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "17545:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1128,
														"nodeType": "ExpressionStatement",
														"src": "17545:29:0"
													},
													{
														"assignments": [
															1131
														],
														"declarations": [
															{
																"constant": false,
																"id": 1131,
																"mutability": "mutable",
																"name": "currSlot",
																"nameLocation": "17693:8:0",
																"nodeType": "VariableDeclaration",
																"scope": 1198,
																"src": "17670:31:0",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																	"typeString": "struct ERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 1130,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 1129,
																		"name": "TokenOwnership",
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 56,
																		"src": "17670:14:0"
																	},
																	"referencedDeclaration": 56,
																	"src": "17670:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																		"typeString": "struct ERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1135,
														"initialValue": {
															"baseExpression": {
																"id": 1132,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "17704:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$56_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 1134,
															"indexExpression": {
																"id": 1133,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "17716:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17704:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$56_storage",
																"typeString": "struct ERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17670:54:0"
													},
													{
														"expression": {
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1136,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "17738:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																		"typeString": "struct ERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 51,
																"src": "17738:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1139,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "17754:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17738:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1141,
														"nodeType": "ExpressionStatement",
														"src": "17738:20:0"
													},
													{
														"expression": {
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1142,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "17772:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																		"typeString": "struct ERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 53,
																"src": "17772:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1147,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "17805:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "17805:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17798:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1145,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "17798:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17798:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "17772:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1151,
														"nodeType": "ExpressionStatement",
														"src": "17772:49:0"
													},
													{
														"expression": {
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1152,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "17835:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																		"typeString": "struct ERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "burned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 55,
																"src": "17835:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"hexValue": "74727565",
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17853:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "17835:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1157,
														"nodeType": "ExpressionStatement",
														"src": "17835:22:0"
													},
													{
														"assignments": [
															1159
														],
														"declarations": [
															{
																"constant": false,
																"id": 1159,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "18109:11:0",
																"nodeType": "VariableDeclaration",
																"scope": 1198,
																"src": "18101:19:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1158,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18101:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1163,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1160,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "18123:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18133:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18123:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18101:33:0"
													},
													{
														"assignments": [
															1166
														],
														"declarations": [
															{
																"constant": false,
																"id": 1166,
																"mutability": "mutable",
																"name": "nextSlot",
																"nameLocation": "18171:8:0",
																"nodeType": "VariableDeclaration",
																"scope": 1198,
																"src": "18148:31:0",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																	"typeString": "struct ERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 1165,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 1164,
																		"name": "TokenOwnership",
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 56,
																		"src": "18148:14:0"
																	},
																	"referencedDeclaration": 56,
																	"src": "18148:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																		"typeString": "struct ERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1170,
														"initialValue": {
															"baseExpression": {
																"id": 1167,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "18182:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$56_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 1169,
															"indexExpression": {
																"id": 1168,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "18194:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18182:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$56_storage",
																"typeString": "struct ERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18148:58:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1171,
																	"name": "nextSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "18224:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																		"typeString": "struct ERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 51,
																"src": "18224:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18249:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18241:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1173,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18241:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18241:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18224:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1197,
														"nodeType": "IfStatement",
														"src": "18220:377:0",
														"trueBody": {
															"id": 1196,
															"nodeType": "Block",
															"src": "18253:344:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1178,
																			"name": "nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1159,
																			"src": "18416:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1179,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "18431:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18416:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1195,
																	"nodeType": "IfStatement",
																	"src": "18412:171:0",
																	"trueBody": {
																		"id": 1194,
																		"nodeType": "Block",
																		"src": "18446:137:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 1185,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 1181,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1166,
																							"src": "18468:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																								"typeString": "struct ERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 1183,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 51,
																						"src": "18468:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 1184,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1057,
																						"src": "18484:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "18468:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 1186,
																				"nodeType": "ExpressionStatement",
																				"src": "18468:20:0"
																			},
																			{
																				"expression": {
																					"id": 1192,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 1187,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1166,
																							"src": "18510:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$56_storage_ptr",
																								"typeString": "struct ERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 1189,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 53,
																						"src": "18510:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 1190,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1051,
																							"src": "18536:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$56_memory_ptr",
																								"typeString": "struct ERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 1191,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 53,
																						"src": "18536:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "18510:54:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 1193,
																				"nodeType": "ExpressionStatement",
																				"src": "18510:54:0"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1200,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "18631:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18645:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18637:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1201,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18637:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18637:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1205,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "18649:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1199,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "18622:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18622:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "EmitStatement",
												"src": "18617:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1209,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "18688:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18702:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18694:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1210,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18694:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18694:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1214,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "18706:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18715:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1208,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "18667:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18667:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "18667:50:0"
											},
											{
												"id": 1221,
												"nodeType": "UncheckedBlock",
												"src": "18816:49:0",
												"statements": [
													{
														"expression": {
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "18840:14:0",
															"subExpression": {
																"id": 1218,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 69,
																"src": "18840:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1220,
														"nodeType": "ExpressionStatement",
														"src": "18840:14:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "16305:206:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "16525:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16539:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "16531:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "16553:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "16548:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1045,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16548:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16530:37:0"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16585:0:0"
									},
									"scope": 1328,
									"src": "16516:2355:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "19082:89:0",
										"statements": [
											{
												"expression": {
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1233,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "19092:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1235,
														"indexExpression": {
															"id": 1234,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "19108:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19092:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1236,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "19119:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19092:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "19092:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1240,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "19145:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1241,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "19152:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "19156:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1239,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "19136:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19136:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "EmitStatement",
												"src": "19131:33:0"
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "18877:100:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "18991:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19017:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "19009:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19037:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "19029:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19062:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "19054:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18999:74:0"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19082:0:0"
									},
									"scope": 1328,
									"src": "18982:189:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "19816:486:0",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1281,
															"nodeType": "Block",
															"src": "19927:87:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1273,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "19948:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1275,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1251,
																							"src": "19974:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1274,
																						"name": "IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1462,
																						"src": "19958:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1462_$",
																							"typeString": "type(contract IERC721Receiver)"
																						}
																					},
																					"id": 1276,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19958:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC721Receiver_$1462",
																						"typeString": "contract IERC721Receiver"
																					}
																				},
																				"id": 1277,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1461,
																				"src": "19958:36:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "19958:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "19948:55:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1259,
																	"id": 1280,
																	"nodeType": "Return",
																	"src": "19941:62:0"
																}
															]
														},
														"errorName": "",
														"id": 1282,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1272,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1271,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "19919:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1282,
																	"src": "19912:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1270,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "19912:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "19911:15:0"
														},
														"src": "19903:111:0"
													},
													{
														"block": {
															"id": 1297,
															"nodeType": "Block",
															"src": "20043:253:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1286,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1284,
																				"src": "20061:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "20061:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20078:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "20061:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 1295,
																		"nodeType": "Block",
																		"src": "20167:119:0",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "20194:78:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "20227:2:0",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "20231:6:0"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "20223:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "20223:15:0"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "20246:6:0"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "20240:5:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "20240:13:0"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "20216:6:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20216:38:0"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "20216:38:0"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 1284,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "20231:6:0",
																						"valueSize": 1
																					},
																					{
																						"declaration": 1284,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "20246:6:0",
																						"valueSize": 1
																					}
																				],
																				"id": 1294,
																				"nodeType": "InlineAssembly",
																				"src": "20185:87:0"
																			}
																		]
																	},
																	"id": 1296,
																	"nodeType": "IfStatement",
																	"src": "20057:229:0",
																	"trueBody": {
																		"id": 1293,
																		"nodeType": "Block",
																		"src": "20081:80:0",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1290,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 30,
																						"src": "20106:38:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 1291,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20106:40:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1292,
																				"nodeType": "RevertStatement",
																				"src": "20099:47:0"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 1298,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1285,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1284,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "20035:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1298,
																	"src": "20022:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1283,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "20022:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "20021:21:0"
														},
														"src": "20015:281:0"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1264,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1796,
																"src": "19867:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19867:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1266,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "19881:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "19887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1268,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "19896:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1261,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "19846:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1260,
																"name": "IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "19830:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1462_$",
																	"typeString": "type(contract IERC721Receiver)"
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19830:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Receiver_$1462",
																"typeString": "contract IERC721Receiver"
															}
														},
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1461,
														"src": "19830:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19830:72:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1299,
												"nodeType": "TryStatement",
												"src": "19826:470:0"
											}
										]
									},
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "19177:470:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "19661:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19709:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "19701:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19731:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "19723:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19723:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "19743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "19781:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "19768:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19768:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19691:101:0"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "19810:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1257,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19810:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19809:6:0"
									},
									"scope": 1328,
									"src": "19652:650:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "21085:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "20308:620:0",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n And also called before burning one token.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "20942:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20981:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "20973:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21003:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "20995:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "21023:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "21015:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "21053:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "21045:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20963:104:0"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21085:0:0"
									},
									"scope": 1328,
									"src": "20933:154:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "21879:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "21093:630:0",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n And also called after one token has been burned.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "21737:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21775:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "21767:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21797:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "21789:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "21817:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "21809:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "21847:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "21839:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21757:104:0"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21879:0:0"
									},
									"scope": 1328,
									"src": "21728:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1329,
							"src": "1464:20419:0",
							"usedErrors": [
								10,
								12,
								14,
								16,
								18,
								24,
								26,
								28,
								30,
								32,
								34
							]
						}
					],
					"src": "56:21828:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2045
						],
						"IERC721": [
							1444
						]
					},
					"id": 1445,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1445,
							"sourceUnit": 2046,
							"src": "118:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1333,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2045,
										"src": "256:7:1"
									},
									"id": 1334,
									"nodeType": "InheritanceSpecifier",
									"src": "256:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1332,
								"nodeType": "StructuredDocumentation",
								"src": "167:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1444,
							"linearizedBaseContracts": [
								1444,
								2045
							],
							"name": "IERC721",
							"nameLocation": "245:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "270:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 1343,
									"name": "Transfer",
									"nameLocation": "369:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "394:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "378:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "416:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "400:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "436:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "420:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:67:1"
									},
									"src": "363:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "451:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 1352,
									"name": "Approval",
									"nameLocation": "556:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "581:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "565:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "604:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "588:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "630:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "614:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:74:1"
									},
									"src": "550:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1353,
										"nodeType": "StructuredDocumentation",
										"src": "645:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 1361,
									"name": "ApprovalForAll",
									"nameLocation": "773:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "804:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "788:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "827:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "811:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "837:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "837:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:64:1"
									},
									"src": "767:85:1"
								},
								{
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "858:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "948:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "966:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "958:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:15:1"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1004:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "996:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "995:17:1"
									},
									"scope": 1444,
									"src": "939:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "1019:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1164:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1180:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1172:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:17:1"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1220:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1212:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:15:1"
									},
									"scope": 1444,
									"src": "1155:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "1233:690:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1937:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1971:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1963:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1993:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1985:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1985:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2013:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2005:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1953:73:1"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2035:0:1"
									},
									"scope": 1444,
									"src": "1928:108:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "2042:504:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2560:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2590:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2582:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2612:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2604:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2604:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2632:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2624:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2624:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2572:73:1"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2654:0:1"
									},
									"scope": 1444,
									"src": "2551:104:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "2661:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3127:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3143:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "3135:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3155:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "3147:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3147:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:29:1"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3172:0:1"
									},
									"scope": 1444,
									"src": "3118:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "3179:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3332:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3352:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "3344:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3344:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3343:17:1"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3392:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "3384:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:18:1"
									},
									"scope": 1444,
									"src": "3323:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "3408:309:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3731:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3757:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "3749:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "3772:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "3767:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3767:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:34:1"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:1"
									},
									"scope": 1444,
									"src": "3722:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "3798:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3950:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "3967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3990:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "3982:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3966:33:1"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4023:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1428,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4023:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4022:6:1"
									},
									"scope": 1444,
									"src": "3941:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "4035:556:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4605:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4639:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "4631:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4661:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "4653:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4681:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "4673:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4673:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4713:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "4698:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1439,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4698:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4621:102:1"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4732:0:1"
									},
									"scope": 1444,
									"src": "4596:137:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1445,
							"src": "235:4500:1",
							"usedErrors": []
						}
					],
					"src": "93:4643:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1462
						]
					},
					"id": 1463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1446,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1447,
								"nodeType": "StructuredDocumentation",
								"src": "126:152:2",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1462,
							"linearizedBaseContracts": [
								1462
							],
							"name": "IERC721Receiver",
							"nameLocation": "289:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "311:485:2",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "810:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "844:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "836:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "870:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "862:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "892:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "884:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "924:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "909:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "909:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:108:2"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "953:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1458,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "953:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:8:2"
									},
									"scope": 1462,
									"src": "801:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1463,
							"src": "279:684:2",
							"usedErrors": []
						}
					],
					"src": "101:863:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							2045
						],
						"IERC721": [
							1444
						],
						"IERC721Metadata": [
							1489
						]
					},
					"id": 1490,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1490,
							"sourceUnit": 1445,
							"src": "137:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1467,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1444,
										"src": "326:7:3"
									},
									"id": 1468,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1466,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:3",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1489,
							"linearizedBaseContracts": [
								1489,
								1444,
								2045
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:3",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:3"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "442:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1471,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:3"
									},
									"scope": 1489,
									"src": "403:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:3",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:3"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "569:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:3"
									},
									"scope": 1489,
									"src": "528:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:3",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:3"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "743:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1485,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:3"
									},
									"scope": 1489,
									"src": "685:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1490,
							"src": "297:463:3",
							"usedErrors": []
						}
					],
					"src": "112:649:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1784
						]
					},
					"id": 1785,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1491,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1492,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1784,
							"linearizedBaseContracts": [
								1784
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1500,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1499,
												"id": 1505,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 1493,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 1784,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1540,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1518,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1784",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1784",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1516,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1521,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1512,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													1527,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1527,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1540,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1526,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1534,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1528,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1510,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1530,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1512,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1536,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 1784,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "3555:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1552,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "3585:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1553,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1546,
															"src": "3593:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1551,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1558,
															1578
														],
														"referencedDeclaration": 1578,
														"src": "3572:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1550,
												"id": 1556,
												"nodeType": "Return",
												"src": "3565:67:4"
											}
										]
									},
									"documentation": {
										"id": 1542,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1545,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 1784,
									"src": "3466:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1577,
										"nodeType": "Block",
										"src": "4008:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1571,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "4047:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1572,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "4055:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1574,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "4064:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1570,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1598,
															1648
														],
														"referencedDeclaration": 1648,
														"src": "4025:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1569,
												"id": 1576,
												"nodeType": "Return",
												"src": "4018:59:4"
											}
										]
									},
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "3892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "3916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "3943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1564,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:4"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "3994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:4"
									},
									"scope": 1784,
									"src": "3861:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "4589:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1591,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "4628:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1592,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "4636:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1593,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "4642:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1590,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1598,
															1648
														],
														"referencedDeclaration": 1648,
														"src": "4606:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1589,
												"id": 1596,
												"nodeType": "Return",
												"src": "4599:94:4"
											}
										]
									},
									"documentation": {
										"id": 1579,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "4486:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "4510:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "4537:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:4"
									},
									"returnParameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "4575:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:4"
									},
									"scope": 1784,
									"src": "4446:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "5127:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1615,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1784",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1784",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1613,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1618,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "5170:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1612,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1625,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "5247:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1624,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "5236:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:4"
											},
											{
												"assignments": [
													1631,
													1633
												],
												"declarations": [
													{
														"constant": false,
														"id": 1631,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1647,
														"src": "5300:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1630,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1633,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1647,
														"src": "5314:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1632,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1640,
												"initialValue": {
													"arguments": [
														{
															"id": 1638,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "5367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1634,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1601,
																"src": "5341:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1636,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "5360:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1642,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "5406:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "5415:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1644,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "5427:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1641,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "5389:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1611,
												"id": 1646,
												"nodeType": "Return",
												"src": "5382:58:4"
											}
										]
									},
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "4988:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "5012:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1602,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "5039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "5062:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1606,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:4"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "5113:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:4"
									},
									"scope": 1784,
									"src": "4948:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1664,
										"nodeType": "Block",
										"src": "5724:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1659,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "5760:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1660,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "5768:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1658,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1665,
															1700
														],
														"referencedDeclaration": 1700,
														"src": "5741:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1657,
												"id": 1663,
												"nodeType": "Return",
												"src": "5734:80:4"
											}
										]
									},
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "5652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "5668:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1652,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:4"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "5710:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1655,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:4"
									},
									"scope": 1784,
									"src": "5624:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "6163:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1679,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1668,
																	"src": "6192:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1678,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "6181:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1677,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:4"
											},
											{
												"assignments": [
													1685,
													1687
												],
												"declarations": [
													{
														"constant": false,
														"id": 1685,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1699,
														"src": "6252:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1684,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1687,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1699,
														"src": "6266:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1686,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1692,
												"initialValue": {
													"arguments": [
														{
															"id": 1690,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "6311:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1688,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "6293:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1694,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "6350:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1695,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "6359:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1696,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "6371:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1693,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "6333:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1676,
												"id": 1698,
												"nodeType": "Return",
												"src": "6326:58:4"
											}
										]
									},
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "6042:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "6066:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "6093:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:4"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "6149:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:4"
									},
									"scope": 1784,
									"src": "6005:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "6667:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1711,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "6705:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1712,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "6713:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1710,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1717,
															1752
														],
														"referencedDeclaration": 1752,
														"src": "6684:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1709,
												"id": 1715,
												"nodeType": "Return",
												"src": "6677:84:4"
											}
										]
									},
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "6600:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:4"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "6653:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1707,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:4"
									},
									"scope": 1784,
									"src": "6570:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "7109:232:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1731,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1720,
																	"src": "7138:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1730,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "7127:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1729,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1735,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:4"
											},
											{
												"assignments": [
													1737,
													1739
												],
												"declarations": [
													{
														"constant": false,
														"id": 1737,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "7200:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1736,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1739,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "7214:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1738,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1744,
												"initialValue": {
													"arguments": [
														{
															"id": 1742,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "7261:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1740,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "7241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1746,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "7300:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1747,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "7309:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1748,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "7321:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1745,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "7283:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1728,
												"id": 1750,
												"nodeType": "Return",
												"src": "7276:58:4"
											}
										]
									},
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "6993:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "7017:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "7044:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1723,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:4"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "7095:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:4"
									},
									"scope": 1784,
									"src": "6954:387:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "7721:532:4",
										"statements": [
											{
												"condition": {
													"id": 1764,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1755,
													"src": "7735:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1780,
													"nodeType": "Block",
													"src": "7792:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1768,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1757,
																		"src": "7876:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1778,
																"nodeType": "Block",
																"src": "8184:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1775,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1759,
																					"src": "8209:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1774,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1777,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:4"
																	}
																]
															},
															"id": 1779,
															"nodeType": "IfStatement",
															"src": "7872:365:4",
															"trueBody": {
																"id": 1773,
																"nodeType": "Block",
																"src": "7899:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:4"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1757,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1757,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1772,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1781,
												"nodeType": "IfStatement",
												"src": "7731:516:4",
												"trueBody": {
													"id": 1767,
													"nodeType": "Block",
													"src": "7744:42:4",
													"statements": [
														{
															"expression": {
																"id": 1765,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "7765:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1763,
															"id": 1766,
															"nodeType": "Return",
															"src": "7758:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "7596:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1754,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "7618:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "7651:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1758,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:4"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "7707:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1761,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:4"
									},
									"scope": 1784,
									"src": "7561:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1785,
							"src": "194:8061:4",
							"usedErrors": []
						}
					],
					"src": "101:8155:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1806
						]
					},
					"id": 1807,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1786,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1787,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1806,
							"linearizedBaseContracts": [
								1806
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1795,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1792,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1791,
												"id": 1794,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1806,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1801,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1800,
												"id": 1803,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1798,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1806,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1807,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							2009
						]
					},
					"id": 2010,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1808,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1809,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2009,
							"linearizedBaseContracts": [
								2009
							],
							"name": "Strings",
							"nameLocation": "154:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1812,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 2009,
									"src": "168:58:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1810,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1811,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "399:632:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1820,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1815,
														"src": "601:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1821,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1826,
												"nodeType": "IfStatement",
												"src": "597:51:6",
												"trueBody": {
													"id": 1825,
													"nodeType": "Block",
													"src": "613:35:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1819,
															"id": 1824,
															"nodeType": "Return",
															"src": "627:10:6"
														}
													]
												}
											},
											{
												"assignments": [
													1828
												],
												"declarations": [
													{
														"constant": false,
														"id": 1828,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "657:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1827,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1830,
												"initialValue": {
													"id": 1829,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1815,
													"src": "672:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:6"
											},
											{
												"assignments": [
													1832
												],
												"declarations": [
													{
														"constant": false,
														"id": 1832,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "687:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1831,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1833,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:6"
											},
											{
												"body": {
													"id": 1844,
													"nodeType": "Block",
													"src": "729:57:6",
													"statements": [
														{
															"expression": {
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:6",
																"subExpression": {
																	"id": 1837,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1832,
																	"src": "743:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1839,
															"nodeType": "ExpressionStatement",
															"src": "743:8:6"
														},
														{
															"expression": {
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1840,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "765:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1843,
															"nodeType": "ExpressionStatement",
															"src": "765:10:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1834,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "718:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1845,
												"nodeType": "WhileStatement",
												"src": "711:75:6"
											},
											{
												"assignments": [
													1847
												],
												"declarations": [
													{
														"constant": false,
														"id": 1847,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "795:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1846,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1852,
												"initialValue": {
													"arguments": [
														{
															"id": 1850,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "827:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1848,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:6"
											},
											{
												"body": {
													"id": 1883,
													"nodeType": "Block",
													"src": "863:131:6",
													"statements": [
														{
															"expression": {
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1856,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1832,
																	"src": "877:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1859,
															"nodeType": "ExpressionStatement",
															"src": "877:11:6"
														},
														{
															"expression": {
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1860,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1847,
																		"src": "902:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1862,
																	"indexExpression": {
																		"id": 1861,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1832,
																		"src": "909:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1874,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1867,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1872,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1870,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1815,
																									"src": "945:5:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1871,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1869,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1868,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1873,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1866,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1865,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1863,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1878,
															"nodeType": "ExpressionStatement",
															"src": "902:56:6"
														},
														{
															"expression": {
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1879,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "972:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1882,
															"nodeType": "ExpressionStatement",
															"src": "972:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1853,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1815,
														"src": "851:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1884,
												"nodeType": "WhileStatement",
												"src": "844:150:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1887,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "1017:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1885,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1819,
												"id": 1889,
												"nodeType": "Return",
												"src": "1003:21:6"
											}
										]
									},
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "346:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:6"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "384:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1817,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:6"
									},
									"scope": 2009,
									"src": "328:703:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1931,
										"nodeType": "Block",
										"src": "1210:255:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1899,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "1224:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1905,
												"nodeType": "IfStatement",
												"src": "1220:54:6",
												"trueBody": {
													"id": 1904,
													"nodeType": "Block",
													"src": "1236:38:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1898,
															"id": 1903,
															"nodeType": "Return",
															"src": "1250:13:6"
														}
													]
												}
											},
											{
												"assignments": [
													1907
												],
												"declarations": [
													{
														"constant": false,
														"id": 1907,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1931,
														"src": "1283:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1906,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1909,
												"initialValue": {
													"id": 1908,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1894,
													"src": "1298:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:6"
											},
											{
												"assignments": [
													1911
												],
												"declarations": [
													{
														"constant": false,
														"id": 1911,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1931,
														"src": "1313:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1910,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1913,
												"initialValue": {
													"hexValue": "30",
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:6"
											},
											{
												"body": {
													"id": 1924,
													"nodeType": "Block",
													"src": "1359:57:6",
													"statements": [
														{
															"expression": {
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:6",
																"subExpression": {
																	"id": 1917,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "1373:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1919,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:6"
														},
														{
															"expression": {
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1920,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "1395:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1923,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1914,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "1348:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1925,
												"nodeType": "WhileStatement",
												"src": "1341:75:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1927,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "1444:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1928,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "1451:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1926,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1932,
															2008
														],
														"referencedDeclaration": 2008,
														"src": "1432:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1898,
												"id": 1930,
												"nodeType": "Return",
												"src": "1425:33:6"
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "1157:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:6"
									},
									"returnParameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "1195:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1896,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:6"
									},
									"scope": 2009,
									"src": "1136:329:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "1678:351:6",
										"statements": [
											{
												"assignments": [
													1943
												],
												"declarations": [
													{
														"constant": false,
														"id": 1943,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 2007,
														"src": "1688:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1942,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1952,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1947,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1937,
																	"src": "1724:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1944,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:6"
											},
											{
												"expression": {
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1953,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1943,
															"src": "1745:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1955,
														"indexExpression": {
															"hexValue": "30",
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:6"
											},
											{
												"expression": {
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1959,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1943,
															"src": "1770:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1961,
														"indexExpression": {
															"hexValue": "31",
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1964,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:6"
											},
											{
												"body": {
													"id": 1993,
													"nodeType": "Block",
													"src": "1840:87:6",
													"statements": [
														{
															"expression": {
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1979,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1943,
																		"src": "1854:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1981,
																	"indexExpression": {
																		"id": 1980,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1966,
																		"src": "1861:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1982,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "1866:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1986,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1983,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1935,
																			"src": "1879:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1988,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:6"
														},
														{
															"expression": {
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1989,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "1905:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1992,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1973,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "1828:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1994,
												"initializationExpression": {
													"assignments": [
														1966
													],
													"declarations": [
														{
															"constant": false,
															"id": 1966,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1994,
															"src": "1800:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1965,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1972,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1968,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1937,
																"src": "1816:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:6",
														"subExpression": {
															"id": 1976,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "1837:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1978,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:6"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1996,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "1944:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2004,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1943,
															"src": "2015:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2002,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1941,
												"id": 2006,
												"nodeType": "Return",
												"src": "2001:21:6"
											}
										]
									},
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1609:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1624:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:6"
									},
									"returnParameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1663:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:6"
									},
									"scope": 2009,
									"src": "1588:441:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2010,
							"src": "146:1885:6",
							"usedErrors": []
						}
					],
					"src": "86:1946:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2033
						],
						"IERC165": [
							2045
						]
					},
					"id": 2034,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2011,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2012,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2034,
							"sourceUnit": 2046,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2014,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2045,
										"src": "754:7:7"
									},
									"id": 2015,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2013,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2033,
							"linearizedBaseContracts": [
								2033,
								2045
							],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2044
									],
									"body": {
										"id": 2031,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2024,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2018,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2026,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2045,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2045_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2045_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2025,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2045",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2023,
												"id": 2030,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2020,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2017,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 2033,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2034,
							"src": "726:260:7",
							"usedErrors": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2045
						]
					},
					"id": 2046,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2035,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2036,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2045,
							"linearizedBaseContracts": [
								2045
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2038,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 2045,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2046,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			}
		}
	}
}